Index: app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingActivity.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingActivity.kt	(date 1584621433000)
@@ -1,32 +0,0 @@
-package org.oppia.app.home.continueplaying
-
-import android.content.Context
-import android.content.Intent
-import android.os.Bundle
-import org.oppia.app.activity.InjectableAppCompatActivity
-import org.oppia.app.home.RouteToExplorationListener
-import org.oppia.app.player.exploration.ExplorationActivity
-import javax.inject.Inject
-
-/** Activity for recent stories. */
-class ContinuePlayingActivity : InjectableAppCompatActivity(), RouteToExplorationListener {
-
-  @Inject lateinit var continuePlayingActivityPresenter: ContinuePlayingActivityPresenter
-
-  override fun onCreate(savedInstanceState: Bundle?) {
-    super.onCreate(savedInstanceState)
-    activityComponent.inject(this)
-    continuePlayingActivityPresenter.handleOnCreate()
-  }
-
-  companion object {
-    /** Returns a new [Intent] to route to [ContinuePlayingActivity]. */
-    fun createContinuePlayingActivityIntent(context: Context): Intent {
-      return Intent(context, ContinuePlayingActivity::class.java)
-    }
-  }
-
-  override fun routeToExploration(explorationId: String, topicId: String?) {
-    startActivity(ExplorationActivity.createExplorationActivityIntent(this, explorationId, topicId))
-  }
-}
Index: app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingActivityPresenter.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingActivityPresenter.kt	(date 1584621433000)
@@ -1,24 +0,0 @@
-package org.oppia.app.home.continueplaying
-
-import androidx.appcompat.app.AppCompatActivity
-import org.oppia.app.R
-import org.oppia.app.activity.ActivityScope
-import javax.inject.Inject
-
-/** The presenter for [ContinuePlayingActivity]. */
-@ActivityScope
-class ContinuePlayingActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
-  fun handleOnCreate() {
-    activity.setContentView(R.layout.continue_playing_activity)
-    if (getContinuePlayingFragment() == null) {
-      activity.supportFragmentManager.beginTransaction().add(
-        R.id.continue_playing_fragment_placeholder,
-        ContinuePlayingFragment()
-      ).commitNow()
-    }
-  }
-
-  private fun getContinuePlayingFragment(): ContinuePlayingFragment? {
-    return activity.supportFragmentManager.findFragmentById(R.id.continue_playing_fragment_placeholder) as ContinuePlayingFragment?
-  }
-}
Index: app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingFragment.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingFragment.kt	(date 1584621433000)
@@ -1,28 +0,0 @@
-package org.oppia.app.home.continueplaying
-
-import android.content.Context
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import org.oppia.app.fragment.InjectableFragment
-import org.oppia.app.model.PromotedStory
-import javax.inject.Inject
-
-/** Fragment that contains all recently played stories. */
-class ContinuePlayingFragment : InjectableFragment(), OngoingStoryClickListener {
-  @Inject lateinit var continuePlayingFragmentPresenter: ContinuePlayingFragmentPresenter
-
-  override fun onAttach(context: Context) {
-    super.onAttach(context)
-    fragmentComponent.inject(this)
-  }
-
-  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
-    return continuePlayingFragmentPresenter.handleCreateView(inflater, container)
-  }
-
-  override fun onOngoingStoryClicked(promotedStory: PromotedStory) {
-    continuePlayingFragmentPresenter.onOngoingStoryClicked(promotedStory)
-  }
-}
Index: app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingFragmentPresenter.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingFragmentPresenter.kt	(date 1584621433000)
@@ -1,120 +0,0 @@
-package org.oppia.app.home.continueplaying
-
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.appcompat.app.AppCompatActivity
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.Observer
-import androidx.lifecycle.Transformations
-import org.oppia.app.R
-import org.oppia.app.databinding.ContinuePlayingFragmentBinding
-import org.oppia.app.fragment.FragmentScope
-import org.oppia.app.home.RouteToExplorationListener
-import org.oppia.app.model.OngoingStoryList
-import org.oppia.app.model.PromotedStory
-import org.oppia.domain.exploration.ExplorationDataController
-import org.oppia.domain.topic.TopicListController
-import org.oppia.util.data.AsyncResult
-import org.oppia.util.logging.Logger
-import javax.inject.Inject
-
-/** The presenter for [ContinuePlayingFragment]. */
-@FragmentScope
-class ContinuePlayingFragmentPresenter @Inject constructor(
-  private val activity: AppCompatActivity,
-  private val fragment: Fragment,
-  private val logger: Logger,
-  private val explorationDataController: ExplorationDataController,
-  private val topicListController: TopicListController
-) {
-
-  private val routeToExplorationListener = activity as RouteToExplorationListener
-
-  private lateinit var binding: ContinuePlayingFragmentBinding
-
-  private lateinit var ongoingListAdapter: OngoingListAdapter
-
-  private val itemList: MutableList<ContinuePlayingItemViewModel> = ArrayList()
-
-  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
-    binding = ContinuePlayingFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
-
-    binding.continuePlayingToolbar.setNavigationOnClickListener {
-      (activity as ContinuePlayingActivity).finish()
-    }
-
-    ongoingListAdapter = OngoingListAdapter(itemList)
-
-    binding.ongoingStoryRecyclerView.apply {
-      adapter = ongoingListAdapter
-    }
-    binding.let {
-      it.lifecycleOwner = fragment
-    }
-
-    subscribeToOngoingStoryList()
-
-    return binding.root
-  }
-
-  private val ongoingStoryListSummaryResultLiveData: LiveData<AsyncResult<OngoingStoryList>> by lazy {
-    topicListController.getOngoingStoryList()
-  }
-
-  private fun subscribeToOngoingStoryList() {
-    getAssumedSuccessfulOngoingStoryList().observe(fragment, Observer<OngoingStoryList> { it ->
-      if (it.recentStoryCount > 0) {
-        val recentSectionTitleViewModel =
-          SectionTitleViewModel(activity.getString(R.string.ongoing_story_last_week), false)
-        itemList.add(recentSectionTitleViewModel)
-        for (promotedStory in it.recentStoryList) {
-          val ongoingStoryViewModel = OngoingStoryViewModel(promotedStory, fragment as OngoingStoryClickListener)
-          itemList.add(ongoingStoryViewModel)
-        }
-      }
-
-      if (it.olderStoryCount > 0) {
-        val showDivider = itemList.isNotEmpty()
-        val olderSectionTitleViewModel =
-          SectionTitleViewModel(activity.getString(R.string.ongoing_story_last_month), showDivider)
-        itemList.add(olderSectionTitleViewModel)
-        for (promotedStory in it.olderStoryList) {
-          val ongoingStoryViewModel = OngoingStoryViewModel(promotedStory, fragment as OngoingStoryClickListener)
-          itemList.add(ongoingStoryViewModel)
-        }
-      }
-      ongoingListAdapter.notifyDataSetChanged()
-    })
-  }
-
-  private fun getAssumedSuccessfulOngoingStoryList(): LiveData<OngoingStoryList> {
-    // If there's an error loading the data, assume the default.
-    return Transformations.map(ongoingStoryListSummaryResultLiveData) { it.getOrDefault(OngoingStoryList.getDefaultInstance()) }
-  }
-
-  fun onOngoingStoryClicked(promotedStory: PromotedStory) {
-    playExploration(promotedStory.explorationId, promotedStory.topicId)
-  }
-
-  private fun playExploration(explorationId: String, topicId: String) {
-    explorationDataController.startPlayingExploration(
-      explorationId
-    ).observe(fragment, Observer<AsyncResult<Any?>> { result ->
-      when {
-        result.isPending() -> logger.d("ContinuePlayingFragment", "Loading exploration")
-        result.isFailure() -> logger.e(
-          "ContinuePlayingFragment",
-          "Failed to load exploration",
-          result.getErrorOrNull()!!
-        )
-        else -> {
-          logger.d("ContinuePlayingFragment", "Successfully loaded exploration")
-          routeToExplorationListener.routeToExploration(explorationId, topicId)
-          activity.finish()
-        }
-      }
-    })
-  }
-}
Index: app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingItemViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingItemViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/continueplaying/ContinuePlayingItemViewModel.kt	(date 1584621433000)
@@ -1,6 +0,0 @@
-package org.oppia.app.home.continueplaying
-
-import org.oppia.app.viewmodel.ObservableViewModel
-
-/** The root [ViewModel] for all individual items that may be displayed in continue-playing fragment recycler view. */
-abstract class ContinuePlayingItemViewModel: ObservableViewModel()
Index: app/src/main/java/org/oppia/app/home/continueplaying/OngoingListAdapter.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/OngoingListAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/continueplaying/OngoingListAdapter.kt	(date 1584621433000)
@@ -1,87 +0,0 @@
-package org.oppia.app.home.continueplaying
-
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import org.oppia.app.databinding.OngoingStoryCardBinding
-import org.oppia.app.databinding.SectionTitleBinding
-
-private const val VIEW_TYPE_SECTION_TITLE_TEXT = 1
-private const val VIEW_TYPE_SECTION_STORY_ITEM = 2
-
-/** Adapter to inflate different items/views inside [RecyclerView] for Ongoing Story List. */
-class OngoingListAdapter(
-  private val itemList: MutableList<ContinuePlayingItemViewModel>
-) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {
-
-  override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {
-    return when (viewType) {
-      // TODO(#216): Generalize this binding to make adding future items easier.
-      VIEW_TYPE_SECTION_TITLE_TEXT -> {
-        val inflater = LayoutInflater.from(parent.context)
-        val binding =
-          SectionTitleBinding.inflate(
-            inflater,
-            parent,
-            /* attachToParent= */ false
-          )
-        SectionTitleViewHolder(binding)
-      }
-      VIEW_TYPE_SECTION_STORY_ITEM -> {
-        val inflater = LayoutInflater.from(parent.context)
-        val binding =
-          OngoingStoryCardBinding.inflate(
-            inflater,
-            parent,
-            /* attachToParent= */ false
-          )
-        OngoingStoryViewHolder(binding)
-      }
-      else -> throw IllegalArgumentException("Invalid view type: $viewType")
-    }
-  }
-
-  override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {
-    when (holder.itemViewType) {
-      VIEW_TYPE_SECTION_TITLE_TEXT -> {
-        (holder as SectionTitleViewHolder).bind(itemList[position] as SectionTitleViewModel)
-      }
-      VIEW_TYPE_SECTION_STORY_ITEM -> {
-        (holder as OngoingStoryViewHolder).bind(itemList[position] as OngoingStoryViewModel)
-      }
-      else -> throw IllegalArgumentException("Invalid item view type: ${holder.itemViewType}")
-    }
-  }
-
-  override fun getItemViewType(position: Int): Int {
-    return when (itemList[position]) {
-      is SectionTitleViewModel -> {
-        VIEW_TYPE_SECTION_TITLE_TEXT
-      }
-      is OngoingStoryViewModel -> {
-        VIEW_TYPE_SECTION_STORY_ITEM
-      }
-      else -> throw IllegalArgumentException("Invalid type of data $position with item ${itemList[position]}")
-    }
-  }
-
-  override fun getItemCount(): Int {
-    return itemList.size
-  }
-
-  private class SectionTitleViewHolder(
-    val binding: SectionTitleBinding
-  ) : RecyclerView.ViewHolder(binding.root) {
-    internal fun bind(sectionTitleViewModel: SectionTitleViewModel) {
-      binding.viewModel = sectionTitleViewModel
-    }
-  }
-
-  private class OngoingStoryViewHolder(
-    val binding: OngoingStoryCardBinding
-  ) : RecyclerView.ViewHolder(binding.root) {
-    internal fun bind(ongoingStoryViewModel: OngoingStoryViewModel) {
-      binding.viewModel = ongoingStoryViewModel
-    }
-  }
-}
Index: app/src/main/java/org/oppia/app/home/continueplaying/SectionTitleViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/SectionTitleViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/continueplaying/SectionTitleViewModel.kt	(date 1584621433000)
@@ -1,7 +0,0 @@
-package org.oppia.app.home.continueplaying
-
-import androidx.lifecycle.ViewModel
-
-/** [ViewModel] for section title in [ContinuePlayingFragment]. */
-class SectionTitleViewModel(val sectionTitleText: String, val isDividerVisible: Boolean) :
-  ContinuePlayingItemViewModel()
Index: app/src/main/java/org/oppia/app/home/RouteToContinuePlayingListener.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/RouteToContinuePlayingListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/RouteToContinuePlayingListener.kt	(date 1584621433000)
@@ -1,6 +0,0 @@
-package org.oppia.app.home
-
-/** Listener for when an activity should route to [ContinuePlayingActivity]. */
-interface RouteToContinuePlayingListener {
-  fun routeToContinuePlaying()
-}
Index: app/src/main/java/org/oppia/app/home/UserAppHistoryViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/UserAppHistoryViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/UserAppHistoryViewModel.kt	(date 1584621433000)
@@ -1,11 +0,0 @@
-package org.oppia.app.home
-
-import androidx.databinding.ObservableField
-import androidx.lifecycle.ViewModel
-
-/** [ViewModel] for user app usage history. */
-class UserAppHistoryViewModel : HomeItemViewModel() {
-  var isAppAlreadyOpened = ObservableField<Boolean>(false)
-
-  fun setAlreadyAppOpened(alreadyOpenedApp: Boolean) = isAppAlreadyOpened.set(alreadyOpenedApp)
-}
Index: app/src/main/java/org/oppia/app/testing/ContinuePlayingFragmentTestActivity.kt
===================================================================
--- app/src/main/java/org/oppia/app/testing/ContinuePlayingFragmentTestActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/ContinuePlayingFragmentTestActivity.kt	(date 1584621433000)
@@ -1,23 +0,0 @@
-package org.oppia.app.testing
-
-import android.os.Bundle
-import org.oppia.app.activity.InjectableAppCompatActivity
-import org.oppia.app.home.RouteToExplorationListener
-import org.oppia.app.player.exploration.ExplorationActivity
-import javax.inject.Inject
-
-/** Test activity for recent stories. */
-class ContinuePlayingFragmentTestActivity : InjectableAppCompatActivity(),
-  RouteToExplorationListener {
-  @Inject lateinit var continuePlayingFragmentTestActivityPresenter: ContinuePlayingFragmentTestActivityPresenter
-
-  override fun onCreate(savedInstanceState: Bundle?) {
-    super.onCreate(savedInstanceState)
-    activityComponent.inject(this)
-    continuePlayingFragmentTestActivityPresenter.handleOnCreate()
-  }
-
-  override fun routeToExploration(explorationId: String, topicId: String?) {
-    startActivity(ExplorationActivity.createExplorationActivityIntent(this, explorationId, topicId))
-  }
-}
Index: app/src/main/java/org/oppia/app/testing/ContinuePlayingFragmentTestActivityPresenter.kt
===================================================================
--- app/src/main/java/org/oppia/app/testing/ContinuePlayingFragmentTestActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/ContinuePlayingFragmentTestActivityPresenter.kt	(date 1584621433000)
@@ -1,25 +0,0 @@
-package org.oppia.app.testing
-
-import androidx.appcompat.app.AppCompatActivity
-import org.oppia.app.R
-import org.oppia.app.activity.ActivityScope
-import org.oppia.app.home.continueplaying.ContinuePlayingFragment
-import javax.inject.Inject
-
-/** The presenter for [ContinuePlayingFragmentTestActivity]. */
-@ActivityScope
-class ContinuePlayingFragmentTestActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
-  fun handleOnCreate() {
-    activity.setContentView(R.layout.continue_playing_activity)
-    if (getContinuePlayingFragment() == null) {
-      activity.supportFragmentManager.beginTransaction().add(
-        R.id.continue_playing_fragment_placeholder,
-        ContinuePlayingFragment()
-      ).commitNow()
-    }
-  }
-
-  private fun getContinuePlayingFragment(): ContinuePlayingFragment? {
-    return activity.supportFragmentManager.findFragmentById(R.id.continue_playing_fragment_placeholder) as ContinuePlayingFragment?
-  }
-}
Index: app/src/main/java/org/oppia/app/topic/play/TopicPlayItemViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/TopicPlayItemViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/play/TopicPlayItemViewModel.kt	(date 1584621433000)
@@ -1,6 +0,0 @@
-package org.oppia.app.topic.play
-
-import org.oppia.app.viewmodel.ObservableViewModel
-
-/** The root [ViewModel] for all individual items that may be displayed in [TopicPlayFragment] recycler view. */
-abstract class TopicPlayItemViewModel: ObservableViewModel()
Index: app/src/main/java/org/oppia/app/topic/play/TopicPlayTitleViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/TopicPlayTitleViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/play/TopicPlayTitleViewModel.kt	(date 1584621433000)
@@ -1,6 +0,0 @@
-package org.oppia.app.topic.play
-
-import androidx.lifecycle.ViewModel
-
-/** [ViewModel] for title in [TopicPlayFragment]. */
-class TopicPlayTitleViewModel : TopicPlayItemViewModel()
Index: app/src/main/java/org/oppia/app/topic/review/ReviewSkillSelectionAdapter.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/review/ReviewSkillSelectionAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/review/ReviewSkillSelectionAdapter.kt	(date 1584621433000)
@@ -1,49 +0,0 @@
-package org.oppia.app.topic.review
-
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.databinding.DataBindingUtil
-import androidx.databinding.library.baseAdapters.BR
-import androidx.recyclerview.widget.RecyclerView
-import org.oppia.app.R
-import org.oppia.app.databinding.TopicReviewSummaryViewBinding
-import org.oppia.app.model.SkillSummary
-
-// TODO(#216): Make use of generic data-binding-enabled RecyclerView adapter.
-/** Adapter to bind skills to [RecyclerView] inside [TopicReviewFragment]. */
-class ReviewSkillSelectionAdapter(private val reviewSkillSelector: ReviewSkillSelector) :
-  RecyclerView.Adapter<ReviewSkillSelectionAdapter.SkillViewHolder>() {
-
-  private var skillList: List<SkillSummary> = ArrayList()
-
-  override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SkillViewHolder {
-    val skillListItemBinding = DataBindingUtil.inflate<TopicReviewSummaryViewBinding>(
-      LayoutInflater.from(parent.context),
-      R.layout.topic_review_summary_view, parent,
-      /* attachToRoot= */ false
-    )
-    return SkillViewHolder(skillListItemBinding)
-  }
-
-  override fun onBindViewHolder(skillViewHolder: SkillViewHolder, i: Int) {
-    skillViewHolder.bind(skillList[i], i)
-  }
-
-  override fun getItemCount(): Int {
-    return skillList.size
-  }
-
-  fun setSkillList(skillList: List<SkillSummary>) {
-    this.skillList = skillList
-    notifyDataSetChanged()
-  }
-
-  inner class SkillViewHolder(val binding: TopicReviewSummaryViewBinding) : RecyclerView.ViewHolder(binding.root) {
-    internal fun bind(skill: SkillSummary, @Suppress("UNUSED_PARAMETER") position: Int) {
-      binding.setVariable(BR.skill, skill)
-      binding.root.setOnClickListener {
-        reviewSkillSelector.onTopicReviewSummaryClicked(skill)
-      }
-    }
-  }
-}
Index: app/src/main/java/org/oppia/app/topic/review/ReviewSkillSelector.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/review/ReviewSkillSelector.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/review/ReviewSkillSelector.kt	(date 1584621433000)
@@ -1,8 +0,0 @@
-package org.oppia.app.topic.review
-
-import org.oppia.app.model.SkillSummary
-
-/** Listener for when a skill is selected for review. */
-interface ReviewSkillSelector {
-  fun onTopicReviewSummaryClicked(skillSummary: SkillSummary)
-}
Index: app/src/main/java/org/oppia/app/topic/train/SkillSelectionAdapter.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/train/SkillSelectionAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/train/SkillSelectionAdapter.kt	(date 1584621433000)
@@ -1,60 +0,0 @@
-package org.oppia.app.topic.train
-
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.databinding.DataBindingUtil
-import androidx.databinding.library.baseAdapters.BR
-import androidx.recyclerview.widget.RecyclerView
-import kotlinx.android.synthetic.main.topic_train_skill_view.view.*
-import org.oppia.app.R
-import org.oppia.app.databinding.TopicTrainSkillViewBinding
-import org.oppia.app.model.SkillSummary
-
-// TODO(#216): Make use of generic data-binding-enabled RecyclerView adapter.
-/** Adapter to bind skills to [RecyclerView] inside [TopicTrainFragment]. */
-class SkillSelectionAdapter(private val skillSelector: SkillSelector) :
-  RecyclerView.Adapter<SkillSelectionAdapter.SkillViewHolder>() {
-
-  private var skillList: List<SkillSummary> = ArrayList()
-  private var selectedSkillIdList: ArrayList<String> = ArrayList()
-
-  override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SkillViewHolder {
-    val skillListItemBinding = DataBindingUtil.inflate<TopicTrainSkillViewBinding>(
-      LayoutInflater.from(parent.context),
-      R.layout.topic_train_skill_view, parent,
-      /* attachToRoot= */ false
-    )
-    return SkillViewHolder(skillListItemBinding)
-  }
-
-  override fun onBindViewHolder(skillViewHolder: SkillViewHolder, i: Int) {
-    skillViewHolder.bind(skillList[i], i)
-  }
-
-  override fun getItemCount(): Int {
-    return skillList.size
-  }
-
-  fun setSkillList(skillList: List<SkillSummary>) {
-    this.skillList = skillList
-    notifyDataSetChanged()
-  }
-
-  fun setSelectedSkillList(skillIdList: ArrayList<String>) {
-    selectedSkillIdList = skillIdList
-  }
-
-  inner class SkillViewHolder(val binding: TopicTrainSkillViewBinding) : RecyclerView.ViewHolder(binding.root) {
-    internal fun bind(skill: SkillSummary, position: Int) {
-      binding.setVariable(BR.isChecked, selectedSkillIdList.contains(skill.skillId))
-      binding.setVariable(BR.skill, skill)
-      binding.root.skill_check_box.setOnCheckedChangeListener { buttonView, isChecked ->
-        if (isChecked) {
-          skillSelector.skillSelected(skill.skillId)
-        } else {
-          skillSelector.skillUnselected(skill.skillId)
-        }
-      }
-    }
-  }
-}
Index: app/src/main/java/org/oppia/app/topic/train/SkillSelector.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/train/SkillSelector.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/train/SkillSelector.kt	(date 1584621433000)
@@ -1,10 +0,0 @@
-package org.oppia.app.topic.train
-
-/** Interface to update the selectedSkillList in [TopicTrainFragmentPresenter]. */
-interface SkillSelector {
-  /** This skill will get added to selectedSkillList in [TopicTrainFragmentPresenter]. */
-  fun skillSelected(skillId: String)
-
-  /** This skill will get removed from selectedSkillList in [TopicTrainFragmentPresenter]. */
-  fun skillUnselected(skillId: String)
-}
Index: app/src/main/java/org/oppia/app/topic/train/TopicTrainFragmentPresenter.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/train/TopicTrainFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/train/TopicTrainFragmentPresenter.kt	(date 1584621433000)
@@ -1,101 +0,0 @@
-package org.oppia.app.topic.train
-
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.appcompat.app.AppCompatActivity
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.Observer
-import androidx.lifecycle.Transformations
-import org.oppia.app.databinding.TopicTrainFragmentBinding
-import org.oppia.app.fragment.FragmentScope
-import org.oppia.app.model.Topic
-import org.oppia.app.topic.RouteToQuestionPlayerListener
-import org.oppia.app.topic.TOPIC_ID_ARGUMENT_KEY
-import org.oppia.app.viewmodel.ViewModelProvider
-import org.oppia.domain.topic.TopicController
-import org.oppia.util.data.AsyncResult
-import org.oppia.util.logging.Logger
-import javax.inject.Inject
-
-/** The presenter for [TopicTrainFragment]. */
-@FragmentScope
-class TopicTrainFragmentPresenter @Inject constructor(
-  activity: AppCompatActivity,
-  private val fragment: Fragment,
-  private val logger: Logger,
-  private val topicController: TopicController,
-  private val viewModelProvider: ViewModelProvider<TopicTrainViewModel>
-) : SkillSelector {
-  lateinit var selectedSkillIdList: ArrayList<String>
-  private lateinit var topicId: String
-  private val routeToQuestionPlayerListener = activity as RouteToQuestionPlayerListener
-  private lateinit var skillSelectionAdapter: SkillSelectionAdapter
-
-  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?, skillList: ArrayList<String>): View? {
-    topicId = checkNotNull(fragment.arguments?.getString(TOPIC_ID_ARGUMENT_KEY)) {
-      "Expected topic ID to be included in arguments for TopicTrainFragment."
-    }
-    selectedSkillIdList = skillList
-    val binding = TopicTrainFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
-
-    skillSelectionAdapter = SkillSelectionAdapter(this)
-    binding.skillRecyclerView.isNestedScrollingEnabled = false
-    binding.skillRecyclerView.apply {
-      adapter = skillSelectionAdapter
-    }
-    binding.let {
-      it.viewModel = getTopicTrainViewModel()
-      it.lifecycleOwner = fragment
-    }
-    subscribeToTopicLiveData()
-    return binding.root
-  }
-
-  private val topicLiveData: LiveData<Topic> by lazy { getTopicList() }
-
-  private val topicResultLiveData: LiveData<AsyncResult<Topic>> by lazy {
-    topicController.getTopic(topicId)
-  }
-
-  private fun subscribeToTopicLiveData() {
-    topicLiveData.observe(fragment, Observer<Topic> { result ->
-      skillSelectionAdapter.setSkillList(result.skillList)
-      skillSelectionAdapter.setSelectedSkillList(selectedSkillIdList)
-    })
-  }
-
-  private fun getTopicList(): LiveData<Topic> {
-    return Transformations.map(topicResultLiveData, ::processTopicResult)
-  }
-
-  private fun processTopicResult(topic: AsyncResult<Topic>): Topic {
-    if (topic.isFailure()) {
-      logger.e("TopicTrainFragment", "Failed to retrieve topic", topic.getErrorOrNull()!!)
-    }
-    return topic.getOrDefault(Topic.getDefaultInstance())
-  }
-
-  private fun getTopicTrainViewModel(): TopicTrainViewModel {
-    return viewModelProvider.getForFragment(fragment, TopicTrainViewModel::class.java)
-  }
-
-  override fun skillSelected(skillId: String) {
-    if (!selectedSkillIdList.contains(skillId)) {
-      selectedSkillIdList.add(skillId)
-    }
-    getTopicTrainViewModel().notifySelectedSkillList(selectedSkillIdList)
-  }
-
-  override fun skillUnselected(skillId: String) {
-    if (selectedSkillIdList.contains(skillId)) {
-      selectedSkillIdList.remove(skillId)
-    }
-    getTopicTrainViewModel().notifySelectedSkillList(selectedSkillIdList)
-  }
-
-  internal fun onStartButtonClicked() {
-    routeToQuestionPlayerListener.routeToQuestionPlayer(selectedSkillIdList)
-  }
-}
Index: app/src/main/java/org/oppia/app/topic/train/TopicTrainViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/train/TopicTrainViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/train/TopicTrainViewModel.kt	(date 1584621433000)
@@ -1,24 +0,0 @@
-package org.oppia.app.topic.train
-
-import android.view.View
-import androidx.databinding.ObservableField
-import androidx.lifecycle.ViewModel
-import org.oppia.app.fragment.FragmentScope
-import javax.inject.Inject
-
-/** [ViewModel] for showing skills in train fragment. */
-@FragmentScope
-class TopicTrainViewModel @Inject constructor(
-  private val topicTrainFragmentPresenter: TopicTrainFragmentPresenter
-) : ViewModel() {
-
-  var isSubmitButtonActive = ObservableField<Boolean>(false)
-
-  fun notifySelectedSkillList(selectedSkillList: ArrayList<String>) {
-    isSubmitButtonActive.set(selectedSkillList.isNotEmpty())
-  }
-
-  fun startButtonClicked(v: View) {
-    topicTrainFragmentPresenter.onStartButtonClicked()
-  }
-}
Index: app/src/main/res/drawable/circular_progress.xml
===================================================================
--- app/src/main/res/drawable/circular_progress.xml	(date 1584621433000)
+++ app/src/main/res/drawable/circular_progress.xml	(date 1584621433000)
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-  <item android:id="@android:id/secondaryProgress">
-    <shape
-      android:innerRadiusRatio="0"
-      android:shape="oval"
-      android:thicknessRatio="10"
-      android:useLevel="true">
-      <gradient
-        android:centerColor="#FFFFFF"
-        android:endColor="#FFFFFF"
-        android:startColor="#FFFFFF"
-        android:type="sweep" />
-    </shape>
-  </item>
-  <item android:id="@android:id/progress">
-    <rotate
-      android:fromDegrees="270"
-      android:pivotX="50%"
-      android:pivotY="50%"
-      android:toDegrees="270">
-      <shape
-        android:innerRadiusRatio="2.5"
-        android:shape="ring"
-        android:thicknessRatio="10"
-        android:useLevel="true">
-        <rotate
-          android:fromDegrees="0"
-          android:pivotX="50%"
-          android:pivotY="50%"
-          android:toDegrees="360" />
-        <gradient
-          android:centerColor="#E76F51"
-          android:endColor="#E76F51"
-          android:startColor="#E76F51"
-          android:type="sweep" />
-      </shape>
-    </rotate>
-  </item>
-</layer-list>
Index: app/src/main/res/drawable/ic_admin_settings_icon_grey_24dp.xml
===================================================================
--- app/src/main/res/drawable/ic_admin_settings_icon_grey_24dp.xml	(date 1584621433000)
+++ app/src/main/res/drawable/ic_admin_settings_icon_grey_24dp.xml	(date 1584621433000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-  android:width="24dp"
-  android:height="24dp"
-  android:viewportWidth="200"
-  android:viewportHeight="200">
-  <path
-    android:fillColor="#727272"
-    android:pathData="M35.67,121.89l13.33,23a3.4,3.4 0,0 0,4.11 1.44l16.56,-6.66a47.39,47.39 0,0 0,11.22 6.55l2.44,17.67a3.47,3.47 0,0 0,3.34 2.78h26.66a3.46,3.46 0,0 0,3.34 -2.89L119.11,146.1a49.35,49.35 0,0 0,11.22 -6.56l16.56,6.67a3.4,3.4 0,0 0,4.11 -1.44l13.33,-23a3.43,3.43 0,0 0,-0.77 -4.34l-14.12,-11a41,41 0,0 0,0.45 -6.44,63 63,0 0,0 -0.45,-6.56l14.12,-11a3.4,3.4 0,0 0,0.77 -4.33l-13.33,-23a3.4,3.4 0,0 0,-4.11 -1.44l-16.56,6.66a47.06,47.06 0,0 0,-11.22 -6.55L116.67,36.1a3.46,3.46 0,0 0,-3.34 -2.78L86.67,33.32a3.45,3.45 0,0 0,-3.34 2.89l-2.44,17.67a46.68,46.68 0,0 0,-11.22 6.44l-16.56,-6.66a3.4,3.4 0,0 0,-4.11 1.44l-13.33,23a3.42,3.42 0,0 0,0.77 4.33l14.12,11a42.82,42.82 0,0 0,-0.56 6.56,65.49 65.49,0 0,0 0.44,6.55l-14.11,11A3.41,3.41 0,0 0,35.67 121.89ZM100,81a19,19 0,1 1,-19 19A19.06,19.06 0,0 1,100 81ZM177.78,0L22.22,0a22.22,22.22 0,0 0,-22.22 22.22L0,177.78a22.22,22.22 0,0 0,22.22 22.22L177.78,200a22.22,22.22 0,0 0,22.22 -22.22L200,22.22A22.22,22.22 0,0 0,177.78 0ZM177.78,177.78L22.22,177.78L22.22,22.22L177.78,22.22Z" />
-</vector>
Index: app/src/main/res/drawable/ic_check_primary.xml
===================================================================
--- app/src/main/res/drawable/ic_check_primary.xml	(date 1584621433000)
+++ app/src/main/res/drawable/ic_check_primary.xml	(date 1584621433000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-  android:width="24dp"
-  android:height="24dp"
-  android:viewportWidth="24"
-  android:viewportHeight="24">
-  <path
-    android:fillColor="#00645C"
-    android:pathData="M9,16.17L5.53,12.7c-0.39,-0.39 -1.02,-0.39 -1.41,0 -0.39,0.39 -0.39,1.02 0,1.41l4.18,4.18c0.39,0.39 1.02,0.39 1.41,0L20.29,7.71c0.39,-0.39 0.39,-1.02 0,-1.41 -0.39,-0.39 -1.02,-0.39 -1.41,0L9,16.17z" />
-</vector>
Index: app/src/main/res/layout/fragment_drawer.xml
===================================================================
--- app/src/main/res/layout/fragment_drawer.xml	(date 1584621433000)
+++ app/src/main/res/layout/fragment_drawer.xml	(date 1584621433000)
@@ -1,39 +0,0 @@
-<com.google.android.material.navigation.NavigationView xmlns:android="http://schemas.android.com/apk/res/android"
-  xmlns:app="http://schemas.android.com/apk/res-auto"
-  android:id="@+id/fragment_drawer_nav_view"
-  android:layout_width="match_parent"
-  android:layout_height="match_parent"
-  android:layout_gravity="start"
-  android:fitsSystemWindows="true"
-  app:headerLayout="@layout/nav_header_navigation_drawer"
-  app:itemBackground="@android:color/transparent"
-  app:itemIconTint="@color/drawer_item"
-  app:itemTextColor="@color/drawer_item"
-  app:menu="@menu/navigation_drawer_menu">
-
-  <LinearLayout
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_gravity="bottom"
-    android:orientation="horizontal"
-    android:padding="16dp">
-
-    <ImageView
-      android:layout_width="24dp"
-      android:layout_height="24dp"
-      android:layout_gravity="center_vertical"
-      android:layout_margin="12dp"
-      android:src="@drawable/ic_admin_settings_icon_grey_24dp" />
-
-    <TextView
-      android:layout_width="match_parent"
-      android:layout_height="wrap_content"
-      android:layout_gravity="center_vertical"
-      android:layout_marginStart="32dp"
-      android:layout_marginEnd="32dp"
-      android:fontFamily="sans-serif-medium"
-      android:textSize="14sp"
-      android:text="@string/admin_settings"
-      android:textColor="@color/black" />
-  </LinearLayout>
-</com.google.android.material.navigation.NavigationView>
Index: app/src/main/res/layout/topic_train_fragment.xml
===================================================================
--- app/src/main/res/layout/topic_train_fragment.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_train_fragment.xml	(date 1584621433000)
@@ -1,83 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-  xmlns:app="http://schemas.android.com/apk/res-auto">
-
-  <data>
-
-    <import type="android.view.View" />
-
-    <variable
-      name="viewModel"
-      type="org.oppia.app.topic.train.TopicTrainViewModel" />
-
-    <variable
-      name="presenter"
-      type="org.oppia.app.topic.train.TopicTrainFragmentPresenter" />
-  </data>
-
-  <androidx.core.widget.NestedScrollView
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/oppiaBackground"
-    android:overScrollMode="never"
-    android:scrollbars="none"
-    app:layout_constraintBottom_toBottomOf="parent"
-    app:layout_constraintEnd_toEndOf="parent"
-    app:layout_constraintStart_toStartOf="parent"
-    app:layout_constraintTop_toTopOf="parent">
-
-    <LinearLayout
-      android:layout_width="match_parent"
-      android:layout_height="wrap_content"
-      android:orientation="vertical"
-      android:paddingBottom="@dimen/bottom_white_space">
-
-      <TextView
-        android:id="@+id/master_skills_text_view"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="28dp"
-        android:layout_marginTop="48dp"
-        android:layout_marginEnd="28dp"
-        android:fontFamily="sans-serif-medium"
-        android:text="@string/topic_train_master_these_skills"
-        android:textColor="@color/oppiaPrimaryText"
-        android:textSize="20sp" />
-
-      <TextView
-        android:id="@+id/skills_description_text_view"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="28dp"
-        android:layout_marginTop="8dp"
-        android:layout_marginEnd="28dp"
-        android:fontFamily="sans-serif"
-        android:text="@string/topic_train_skills_description"
-        android:textColor="@color/oppiaSecondaryText"
-        android:textSize="16sp" />
-
-      <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/skill_recycler_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="40dp"
-        android:layout_marginTop="20dp"
-        android:layout_marginEnd="20dp"
-        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
-
-      <Button
-        android:id="@+id/topic_train_start_button"
-        style="@style/StateButtonInactive"
-        android:layout_width="160dp"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center_horizontal"
-        android:layout_marginTop="40dp"
-        android:background="@{viewModel.isSubmitButtonActive() ? @drawable/state_button_primary_background :@drawable/start_button_transparent_background}"
-        android:clickable="@{viewModel.isSubmitButtonActive()}"
-        android:minHeight="48dp"
-        android:onClick="@{viewModel::startButtonClicked}"
-        android:text="@string/topic_train_start"
-        android:textColor="@{viewModel.isSubmitButtonActive()? @color/white : @color/submitButtonInactive}" />
-    </LinearLayout>
-  </androidx.core.widget.NestedScrollView>
-</layout>
Index: domain/src/main/java/org/oppia/domain/UserAppHistoryController.kt
===================================================================
--- domain/src/main/java/org/oppia/domain/UserAppHistoryController.kt	(date 1584621433000)
+++ domain/src/main/java/org/oppia/domain/UserAppHistoryController.kt	(date 1584621433000)
@@ -1,60 +0,0 @@
-package org.oppia.domain
-
-import androidx.lifecycle.LiveData
-import org.oppia.app.model.UserAppHistory
-import org.oppia.data.persistence.PersistentCacheStore
-import org.oppia.util.data.AsyncResult
-import org.oppia.util.data.DataProviders
-import org.oppia.util.logging.Logger
-import javax.inject.Inject
-import javax.inject.Singleton
-
-/** Controller for persisting and retrieving the previous user history of using the app. */
-@Singleton
-class UserAppHistoryController @Inject constructor(
-  cacheStoreFactory: PersistentCacheStore.Factory, private val dataProviders: DataProviders,
-  private val logger: Logger
-) {
-  private val appHistoryStore = cacheStoreFactory.create("user_app_history", UserAppHistory.getDefaultInstance())
-
-  init {
-    // Prime the cache ahead of time so that any existing history is read prior to any calls to markUserOpenedApp().
-    appHistoryStore.primeCacheAsync().invokeOnCompletion {
-      it?.let {
-        logger.e("DOMAIN", "Failed to prime cache ahead of LiveData conversion for user app open history.", it)
-      }
-    }
-  }
-
-  /**
-   * Saves that the user has opened the app. Note that this does not notify existing subscribers of the changed state,
-   * nor can future subscribers observe this state until app restart.
-   */
-  fun markUserOpenedApp() {
-    appHistoryStore.storeDataAsync(updateInMemoryCache = false) {
-      it.toBuilder().setAlreadyOpenedApp(true).build()
-    }.invokeOnCompletion {
-      it?.let {
-        logger.e("DOMAIN", "Failed when storing that the user already opened the app.", it)
-      }
-    }
-  }
-
-  /** Clears any indication that the user has previously opened the application. */
-  fun clearUserAppHistory() {
-    appHistoryStore.clearCacheAsync().invokeOnCompletion {
-      it?.let {
-        logger.e("DOMAIN", "Failed to clear user app history.", it)
-      }
-    }
-  }
-
-  /**
-   * Returns a [LiveData] result indicating whether the user has previously opened the app. This is guaranteed to
-   * provide the state of the store upon the creation of this controller even if [markUserOpenedApp] has since been
-   * called.
-   */
-  fun getUserAppHistory(): LiveData<AsyncResult<UserAppHistory>> {
-    return dataProviders.convertToLiveData(appHistoryStore)
-  }
-}
Index: app/src/main/java/org/oppia/app/options/OptionsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsActivity.kt	(date 1584626399000)
@@ -0,0 +1,79 @@
+package org.oppia.app.options
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.R
+import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
+import javax.inject.Inject
+
+/** The activity for setting user preferences. */
+class OptionsActivity : InjectableAppCompatActivity(), RouteToAppLanguageListListener, RouteToAudioLanguageListListener,
+  RouteToStoryTextSizeListener {
+  @Inject
+  lateinit var optionActivityPresenter: OptionsActivityPresenter
+
+  companion object {
+    fun createOptionsActivity(context: Context, profileId: Int?): Intent {
+      val intent = Intent(context, OptionsActivity::class.java)
+      intent.putExtra(KEY_NAVIGATION_PROFILE_ID, profileId)
+      return intent
+    }
+  }
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    optionActivityPresenter.handleOnCreate()
+    title = getString(R.string.menu_options)
+  }
+
+  override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+    super.onActivityResult(requestCode, resultCode, data)
+    when (requestCode) {
+      REQUEST_CODE_TEXT_SIZE -> {
+        val textSize = data!!.getStringExtra(KEY_MESSAGE_STORY_TEXT_SIZE) as String
+        optionActivityPresenter.updateStoryTextSize(textSize)
+      }
+      REQUEST_CODE_APP_LANGUAGE -> {
+        val appLanguage = data!!.getStringExtra(KEY_MESSAGE_APP_LANGUAGE) as String
+        optionActivityPresenter.updateAppLanguage(appLanguage)
+      }
+      else -> {
+        val audioLanguage = data!!.getStringExtra(KEY_MESSAGE_AUDIO_LANGUAGE) as String
+        optionActivityPresenter.updateAudioLanguage(audioLanguage)
+      }
+    }
+  }
+
+  override fun routeAppLanguageList(appLanguage: String?) {
+    startActivityForResult(
+      AppLanguageActivity.createAppLanguageActivityIntent(
+        this,
+        APP_LANGUAGE,
+        appLanguage
+      ), REQUEST_CODE_APP_LANGUAGE
+    )
+  }
+
+  override fun routeAudioLanguageList(audioLanguage: String?) {
+    startActivityForResult(
+      DefaultAudioActivity.createDefaultAudioActivityIntent(
+        this,
+        AUDIO_LANGUAGE,
+        audioLanguage
+      ), REQUEST_CODE_AUDIO_LANGUAGE
+    )
+  }
+
+  override fun routeStoryTextSize(storyTextSize: String?) {
+    startActivityForResult(
+      StoryTextSizeActivity.createStoryTextSizeActivityIntent(
+        this,
+        STORY_TEXT_SIZE,
+        storyTextSize
+      ), REQUEST_CODE_TEXT_SIZE
+    )
+  }
+}
Index: app/src/main/java/org/oppia/app/options/OptionControlsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionControlsViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionControlsViewModel.kt	(date 1584626399000)
@@ -0,0 +1,111 @@
+package org.oppia.app.options
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.databinding.ObservableList
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.Profile
+import org.oppia.app.model.ProfileId
+import org.oppia.app.model.StoryTextSize
+import org.oppia.app.viewmodel.ObservableArrayList
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** [ViewModel] for [OptionsFragment]. */
+@FragmentScope
+class OptionControlsViewModel @Inject constructor(
+  activity: AppCompatActivity,
+  private val profileManagementController: ProfileManagementController,
+  private val logger: Logger
+) : OptionsItemViewModel() {
+  private val itemViewModelList: ObservableList<OptionsItemViewModel> = ObservableArrayList()
+  private lateinit var profileId: ProfileId
+  private val routeToStoryTextSizeListener = activity as RouteToStoryTextSizeListener
+  private val routeToAudioLanguageListListener = activity as RouteToAudioLanguageListListener
+  private val routeToAppLanguageListListener = activity as RouteToAppLanguageListListener
+
+  private val profileResultLiveData: LiveData<AsyncResult<Profile>> by lazy {
+    profileManagementController.getProfile(profileId)
+  }
+
+  private val profileLiveData: LiveData<Profile> by lazy { getProfileData() }
+
+  private fun getProfileData(): LiveData<Profile> {
+    return Transformations.map(profileResultLiveData, ::processProfileResult)
+  }
+
+  val optionListLiveData: LiveData<List<OptionsItemViewModel>> by lazy {
+    Transformations.map(profileLiveData, ::processProfileList)
+  }
+
+  fun setProfileId(profileId: ProfileId) {
+    this.profileId = profileId
+  }
+
+  private fun processProfileResult(profile: AsyncResult<Profile>): Profile {
+    if (profile.isFailure()) {
+      logger.e("OptionsFragment", "Failed to retrieve profile", profile.getErrorOrNull()!!)
+    }
+    return profile.getOrDefault(Profile.getDefaultInstance())
+  }
+
+  private fun processProfileList(profile: Profile): List<OptionsItemViewModel> {
+
+    itemViewModelList.clear()
+
+    val optionsStoryTextViewViewModel =
+      OptionsStoryTextViewViewModel(routeToStoryTextSizeListener)
+    val optionsAppLanguageViewModel =
+      OptionsAppLanguageViewModel(routeToAppLanguageListListener)
+    val optionAudioViewViewModel =
+      OptionsAudioLanguageViewModel(routeToAudioLanguageListListener)
+
+    optionsStoryTextViewViewModel.storyTextSize.set(getStoryTextSize(profile.storyTextSize))
+    optionsAppLanguageViewModel.appLanguage.set(getAppLanguage(profile.appLanguage))
+    optionAudioViewViewModel.audioLanguage.set(getAudioLanguage(profile.audioLanguage))
+
+    itemViewModelList.add(optionsStoryTextViewViewModel as OptionsItemViewModel)
+
+    itemViewModelList.add(optionsAppLanguageViewModel as OptionsItemViewModel)
+
+    itemViewModelList.add(optionAudioViewViewModel as OptionsItemViewModel)
+
+    return itemViewModelList
+  }
+
+  fun getStoryTextSize(storyTextSize: StoryTextSize): String {
+    return when (storyTextSize) {
+      StoryTextSize.SMALL_TEXT_SIZE -> "Small"
+      StoryTextSize.MEDIUM_TEXT_SIZE -> "Medium"
+      StoryTextSize.LARGE_TEXT_SIZE -> "Large"
+      else -> "Extra Large"
+    }
+  }
+
+  fun getAppLanguage(appLanguage: AppLanguage): String {
+    return when (appLanguage) {
+      AppLanguage.ENGLISH_APP_LANGUAGE -> "English"
+      AppLanguage.HINDI_APP_LANGUAGE -> "Hindi"
+      AppLanguage.FRENCH_APP_LANGUAGE -> "French"
+      AppLanguage.CHINESE_APP_LANGUAGE -> "Chinese"
+      else -> "English"
+    }
+  }
+
+  fun getAudioLanguage(audioLanguage: AudioLanguage): String {
+    return when (audioLanguage) {
+      AudioLanguage.NO_AUDIO -> "No Audio"
+      AudioLanguage.ENGLISH_AUDIO_LANGUAGE -> "English"
+      AudioLanguage.HINDI_AUDIO_LANGUAGE -> "Hindi"
+      AudioLanguage.FRENCH_AUDIO_LANGUAGE -> "French"
+      AudioLanguage.CHINESE_AUDIO_LANGUAGE -> "Chinese"
+      else -> "No Audio"
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/options/RouteToAppLanguageListListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/RouteToAppLanguageListListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/RouteToAppLanguageListListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.options
+
+/** Listener for when an activity should route to a [AppLanguageActivity]. */
+interface RouteToAppLanguageListListener {
+  fun routeAppLanguageList(appLanguage: String?)
+}
Index: app/src/main/java/org/oppia/app/options/OptionsFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,216 @@
+package org.oppia.app.options
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.RecyclerView
+import org.oppia.app.databinding.OptionAppLanguageBinding
+import org.oppia.app.databinding.OptionAudioLanguageBinding
+import org.oppia.app.databinding.OptionStoryTextSizeBinding
+import org.oppia.app.databinding.OptionsFragmentBinding
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.ProfileId
+import org.oppia.app.model.StoryTextSize
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.viewmodel.ViewModelProvider
+import org.oppia.domain.profile.ProfileManagementController
+import javax.inject.Inject
+
+const val STORY_TEXT_SIZE = "STORY_TEXT_SIZE"
+const val APP_LANGUAGE = "APP_LANGUAGE"
+const val AUDIO_LANGUAGE = "AUDIO_LANGUAGE"
+
+/** The presenter for [OptionsFragment]. */
+@FragmentScope
+class OptionsFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val profileManagementController: ProfileManagementController,
+  private val viewModelProvider: ViewModelProvider<OptionControlsViewModel>
+) {
+  private lateinit var binding: OptionsFragmentBinding
+  private lateinit var recyclerViewAdapter: RecyclerView.Adapter<*>
+  private var internalProfileId: Int = -1
+  private lateinit var profileId: ProfileId
+  private var storyTextSize = StoryTextSize.SMALL_TEXT_SIZE
+  private var appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE
+  private var audioLanguage = AudioLanguage.NO_AUDIO
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    binding = OptionsFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    val viewModel = getOptionControlsItemViewModel()
+
+    internalProfileId = activity.intent.getIntExtra(KEY_NAVIGATION_PROFILE_ID, -1)
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+    viewModel.setProfileId(profileId)
+
+    val optionsRecyclerViewAdapter = createRecyclerViewAdapter()
+    binding.optionsRecyclerview.apply {
+      adapter = optionsRecyclerViewAdapter
+    }
+    recyclerViewAdapter = optionsRecyclerViewAdapter
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.viewModel = viewModel
+    }
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<OptionsItemViewModel> {
+    return BindableAdapter.MultiTypeBuilder
+      .newBuilder<OptionsItemViewModel, ViewType> { viewModel ->
+        when (viewModel) {
+          is OptionsStoryTextViewViewModel -> ViewType.VIEW_TYPE_STORY_TEXT_SIZE
+          is OptionsAppLanguageViewModel -> ViewType.VIEW_TYPE_APP_LANGUAGE
+          is OptionsAudioLanguageViewModel -> ViewType.VIEW_TYPE_AUDIO_LANGUAGE
+          else -> throw IllegalArgumentException("Encountered unexpected view model: $viewModel")
+        }
+      }
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_STORY_TEXT_SIZE,
+        inflateDataBinding = OptionStoryTextSizeBinding::inflate,
+        setViewModel = this::bindStoryTextSize,
+        transformViewModel = { it as OptionsStoryTextViewViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_APP_LANGUAGE,
+        inflateDataBinding = OptionAppLanguageBinding::inflate,
+        setViewModel = this::bindAppLanguage,
+        transformViewModel = { it as OptionsAppLanguageViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_AUDIO_LANGUAGE,
+        inflateDataBinding = OptionAudioLanguageBinding::inflate,
+        setViewModel = this::bindAudioLanguage,
+        transformViewModel = { it as OptionsAudioLanguageViewModel }
+      )
+      .build()
+  }
+
+  private fun bindStoryTextSize(binding: OptionStoryTextSizeBinding, model: OptionsStoryTextViewViewModel) {
+    binding.viewModel = model
+  }
+
+  private fun bindAppLanguage(binding: OptionAppLanguageBinding, model: OptionsAppLanguageViewModel) {
+    binding.viewModel = model
+  }
+
+  private fun bindAudioLanguage(binding: OptionAudioLanguageBinding, model: OptionsAudioLanguageViewModel) {
+    binding.viewModel = model
+  }
+
+  private fun getOptionControlsItemViewModel(): OptionControlsViewModel {
+    return viewModelProvider.getForFragment(fragment, OptionControlsViewModel::class.java)
+  }
+
+  private enum class ViewType {
+    VIEW_TYPE_STORY_TEXT_SIZE,
+    VIEW_TYPE_APP_LANGUAGE,
+    VIEW_TYPE_AUDIO_LANGUAGE
+  }
+
+  fun updateStoryTextSize(textSize: String) {
+    when (textSize) {
+      getOptionControlsItemViewModel().getStoryTextSize(StoryTextSize.SMALL_TEXT_SIZE) -> {
+        profileManagementController.updateStoryTextSize(profileId, StoryTextSize.SMALL_TEXT_SIZE)
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE
+      }
+      getOptionControlsItemViewModel().getStoryTextSize(StoryTextSize.MEDIUM_TEXT_SIZE) -> {
+        profileManagementController.updateStoryTextSize(profileId, StoryTextSize.MEDIUM_TEXT_SIZE)
+        storyTextSize = StoryTextSize.MEDIUM_TEXT_SIZE
+      }
+      getOptionControlsItemViewModel().getStoryTextSize(StoryTextSize.LARGE_TEXT_SIZE) -> {
+        profileManagementController.updateStoryTextSize(profileId, StoryTextSize.LARGE_TEXT_SIZE)
+        storyTextSize = StoryTextSize.LARGE_TEXT_SIZE
+      }
+      getOptionControlsItemViewModel().getStoryTextSize(StoryTextSize.EXTRA_LARGE_TEXT_SIZE) -> {
+        profileManagementController.updateStoryTextSize(profileId, StoryTextSize.EXTRA_LARGE_TEXT_SIZE)
+        storyTextSize = StoryTextSize.EXTRA_LARGE_TEXT_SIZE
+      }
+    }
+    recyclerViewAdapter.notifyItemChanged(0)
+  }
+
+  fun updateAppLanguage(language: String) {
+    when (language) {
+      getOptionControlsItemViewModel().getAppLanguage(AppLanguage.ENGLISH_APP_LANGUAGE) -> {
+        profileManagementController.updateAppLanguage(
+          profileId,
+          AppLanguage.ENGLISH_APP_LANGUAGE
+        )
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE
+      }
+      getOptionControlsItemViewModel().getAppLanguage(AppLanguage.HINDI_APP_LANGUAGE) -> {
+        profileManagementController.updateAppLanguage(
+          profileId,
+          AppLanguage.HINDI_APP_LANGUAGE
+        )
+        appLanguage = AppLanguage.HINDI_APP_LANGUAGE
+      }
+      getOptionControlsItemViewModel().getAppLanguage(AppLanguage.CHINESE_APP_LANGUAGE) -> {
+        profileManagementController.updateAppLanguage(
+          profileId,
+          AppLanguage.CHINESE_APP_LANGUAGE
+        )
+        appLanguage = AppLanguage.CHINESE_APP_LANGUAGE
+      }
+      getOptionControlsItemViewModel().getAppLanguage(AppLanguage.FRENCH_APP_LANGUAGE) -> {
+        profileManagementController.updateAppLanguage(
+          profileId,
+          AppLanguage.FRENCH_APP_LANGUAGE
+        )
+        appLanguage = AppLanguage.FRENCH_APP_LANGUAGE
+      }
+    }
+
+    recyclerViewAdapter.notifyItemChanged(1)
+  }
+
+  fun updateAudioLanguage(language: String) {
+    when (language) {
+      getOptionControlsItemViewModel().getAudioLanguage(AudioLanguage.NO_AUDIO) -> {
+        profileManagementController.updateAudioLanguage(
+          profileId,
+          AudioLanguage.NO_AUDIO
+        )
+        audioLanguage = AudioLanguage.NO_AUDIO
+      }
+      getOptionControlsItemViewModel().getAudioLanguage(AudioLanguage.ENGLISH_AUDIO_LANGUAGE) -> {
+        profileManagementController.updateAudioLanguage(
+          profileId,
+          AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+        )
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      }
+      getOptionControlsItemViewModel().getAudioLanguage(AudioLanguage.HINDI_AUDIO_LANGUAGE) -> {
+        profileManagementController.updateAudioLanguage(
+          profileId,
+          AudioLanguage.HINDI_AUDIO_LANGUAGE
+        )
+        audioLanguage = AudioLanguage.HINDI_AUDIO_LANGUAGE
+      }
+      getOptionControlsItemViewModel().getAudioLanguage(AudioLanguage.CHINESE_AUDIO_LANGUAGE) -> {
+        profileManagementController.updateAudioLanguage(
+          profileId,
+          AudioLanguage.CHINESE_AUDIO_LANGUAGE
+        )
+        audioLanguage = AudioLanguage.CHINESE_AUDIO_LANGUAGE
+      }
+      getOptionControlsItemViewModel().getAudioLanguage(AudioLanguage.FRENCH_AUDIO_LANGUAGE) -> {
+        profileManagementController.updateAudioLanguage(
+          profileId,
+          AudioLanguage.FRENCH_AUDIO_LANGUAGE
+        )
+        audioLanguage = AudioLanguage.FRENCH_AUDIO_LANGUAGE
+      }
+    }
+
+    recyclerViewAdapter.notifyItemChanged(2)
+  }
+}
+
Index: app/src/main/java/org/oppia/app/options/OptionsItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.options
+
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** Option items view model for the recyclerView in [OptionsFragment] */
+abstract class OptionsItemViewModel : ObservableViewModel()
Index: app/src/main/java/org/oppia/app/options/StoryTextSizeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/StoryTextSizeActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/StoryTextSizeActivity.kt	(date 1584626399000)
@@ -0,0 +1,62 @@
+package org.oppia.app.options
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+private const val KEY_STORY_TEXT_SIZE_PREFERENCE_TITLE = "STORY_TEXT_SIZE_PREFERENCE"
+private const val KEY_STORY_TEXT_SIZE_PREFERENCE_SUMMARY_VALUE =
+  "STORY_TEXT_SIZE_PREFERENCE_SUMMARY_VALUE"
+
+/** The activity to change the Text size of the Story content in the app. */
+class StoryTextSizeActivity : InjectableAppCompatActivity() {
+
+  @Inject
+  lateinit var storyTextSizeActivityPresenter: StoryTextSizeActivityPresenter
+  private lateinit var prefKey: String
+  private lateinit var prefSummaryValue: String
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    prefKey = intent.getStringExtra(KEY_STORY_TEXT_SIZE_PREFERENCE_TITLE)
+    prefSummaryValue = (if (savedInstanceState != null) {
+      savedInstanceState.get(KEY_STORY_TEXT_SIZE_PREFERENCE_SUMMARY_VALUE)
+    } else {
+      intent.getStringExtra(KEY_STORY_TEXT_SIZE_PREFERENCE_SUMMARY_VALUE)
+    }) as String
+    storyTextSizeActivityPresenter.handleOnCreate(prefSummaryValue)
+  }
+
+  companion object {
+    /** Returns a new [Intent] to route to [StoryTextSizeActivity]. */
+    fun createStoryTextSizeActivityIntent(
+      context: Context,
+      prefKey: String,
+      summaryValue: String?
+    ): Intent {
+      val intent = Intent(context, StoryTextSizeActivity::class.java)
+      intent.putExtra(KEY_STORY_TEXT_SIZE_PREFERENCE_TITLE, prefKey)
+      intent.putExtra(KEY_STORY_TEXT_SIZE_PREFERENCE_SUMMARY_VALUE, summaryValue)
+      return intent
+    }
+  }
+
+  override fun onSaveInstanceState(outState: Bundle) {
+    super.onSaveInstanceState(outState)
+    outState.putString(
+      KEY_STORY_TEXT_SIZE_PREFERENCE_SUMMARY_VALUE,
+      storyTextSizeActivityPresenter.geSelectedStoryTextSize()
+    )
+  }
+
+  override fun onBackPressed() {
+    val message = storyTextSizeActivityPresenter.geSelectedStoryTextSize()
+    val intent = Intent()
+    intent.putExtra(KEY_MESSAGE_STORY_TEXT_SIZE, message)
+    setResult(REQUEST_CODE_TEXT_SIZE, intent)
+    finish()
+  }
+}
Index: app/src/main/java/org/oppia/app/options/RouteToStoryTextSizeListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/RouteToStoryTextSizeListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/RouteToStoryTextSizeListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.options
+
+/** Listener for when an activity should route to a [StoryTextSizeActivity]. */
+interface RouteToStoryTextSizeListener {
+  fun routeStoryTextSize(storyTextSize: String?)
+}
Index: app/src/main/java/org/oppia/app/options/OptionsStoryTextViewViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsStoryTextViewViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsStoryTextViewViewModel.kt	(date 1584626399000)
@@ -0,0 +1,18 @@
+package org.oppia.app.options
+
+import androidx.databinding.ObservableField
+
+/** StoryText size settings view model for the recycler view in [OptionsFragment]. */
+class OptionsStoryTextViewViewModel(
+  private val routeToStoryTextSizeListener: RouteToStoryTextSizeListener
+) : OptionsItemViewModel() {
+  val storyTextSize = ObservableField<String>("")
+
+  fun setStoryTextSize(storyTextSizeValue: String) {
+    storyTextSize.set(storyTextSizeValue)
+  }
+
+  fun onStoryTextSizeClicked() {
+    routeToStoryTextSizeListener.routeStoryTextSize(storyTextSize.get())
+  }
+}
Index: app/src/main/java/org/oppia/app/options/DefaultAudioActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/DefaultAudioActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/DefaultAudioActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,51 @@
+package org.oppia.app.options
+
+import android.content.Intent
+import androidx.appcompat.app.AppCompatActivity
+import androidx.databinding.DataBindingUtil
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.databinding.DefaultAudioActivityBinding
+import javax.inject.Inject
+
+/** The presenter for [DefaultAudioActivity]. */
+@ActivityScope
+class DefaultAudioActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+
+  private lateinit var prefSummaryValue: String
+  private lateinit var languageSelectionAdapter: LanguageSelectionAdapter
+
+  fun handleOnCreate(prefKey: String, prefValue: String) {
+    val binding = DataBindingUtil.setContentView<DefaultAudioActivityBinding>(activity, R.layout.default_audio_activity)
+    prefSummaryValue = prefValue
+    languageSelectionAdapter = LanguageSelectionAdapter(prefKey)
+    binding.audioLanguageRecyclerView.apply {
+      adapter = languageSelectionAdapter
+    }
+
+    binding.audioLanguageToolbar.setNavigationOnClickListener {
+      val message = languageSelectionAdapter.getSelectedLanguage()
+      val intent = Intent()
+      intent.putExtra(KEY_MESSAGE_AUDIO_LANGUAGE, message)
+      (activity as DefaultAudioActivity).setResult(REQUEST_CODE_AUDIO_LANGUAGE, intent)
+      activity.finish()
+    }
+    createAdapter()
+  }
+
+  fun getLanguageSelected(): String{
+    return languageSelectionAdapter.getSelectedLanguage()
+  }
+
+  private fun createAdapter() {
+    // TODO(#669): Replace dummy list with actual language list from backend.
+    val languageList = ArrayList<String>()
+    languageList.add("No Audio")
+    languageList.add("English")
+    languageList.add("French")
+    languageList.add("Hindi")
+    languageList.add("Chinese")
+    languageSelectionAdapter.setLanguageList(languageList)
+    languageSelectionAdapter.setDefaultLanguageSelected(prefSummaryValue = prefSummaryValue)
+  }
+}
Index: app/src/main/java/org/oppia/app/options/AppLanguageActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/AppLanguageActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/AppLanguageActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,50 @@
+package org.oppia.app.options
+
+import android.content.Intent
+import androidx.appcompat.app.AppCompatActivity
+import androidx.databinding.DataBindingUtil
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.databinding.AppLanguageActivityBinding
+import javax.inject.Inject
+
+/** The presenter for [AppLanguageActivity]. */
+@ActivityScope
+class AppLanguageActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  private lateinit var languageSelectionAdapter: LanguageSelectionAdapter
+  private lateinit var prefSummaryValue: String
+
+  fun handleOnCreate(prefKey: String, prefSummaryValue: String) {
+    val binding = DataBindingUtil.setContentView<AppLanguageActivityBinding>(activity, R.layout.app_language_activity)
+    this.prefSummaryValue = prefSummaryValue
+    languageSelectionAdapter = LanguageSelectionAdapter(prefKey)
+    binding.languageRecyclerView.apply {
+      adapter = languageSelectionAdapter
+    }
+
+    binding.appLanguageToolbar.setNavigationOnClickListener {
+      val message = languageSelectionAdapter.getSelectedLanguage()
+      val intent = Intent()
+      intent.putExtra(KEY_MESSAGE_APP_LANGUAGE, message)
+      (activity as AppLanguageActivity).setResult(REQUEST_CODE_APP_LANGUAGE, intent)
+      activity.finish()
+    }
+    createAdapter()
+  }
+
+  fun getLanguageSelected(): String{
+    return languageSelectionAdapter.getSelectedLanguage()
+  }
+
+  private fun createAdapter() {
+    // TODO(#669): Replace dummy list with actual language list from backend.
+    val languageList = ArrayList<String>()
+    languageList.add("English")
+    languageList.add("French")
+    languageList.add("Hindi")
+    languageList.add("Chinese")
+    languageSelectionAdapter.setLanguageList(languageList)
+    languageSelectionAdapter.setDefaultLanguageSelected(prefSummaryValue = prefSummaryValue)
+  }
+
+}
Index: app/src/main/java/org/oppia/app/options/RouteToAudioLanguageListListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/RouteToAudioLanguageListListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/RouteToAudioLanguageListListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.options
+
+/** Listener for when an activity should route to a [DefaultAudioActivity]. */
+interface RouteToAudioLanguageListListener {
+  fun routeAudioLanguageList(audioLanguage: String?)
+}
Index: app/src/main/java/org/oppia/app/options/DefaultAudioActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/DefaultAudioActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/DefaultAudioActivity.kt	(date 1584626399000)
@@ -0,0 +1,62 @@
+package org.oppia.app.options
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+private const val KEY_AUDIO_LANGUAGE_PREFERENCE_TITLE = "AUDIO_LANGUAGE_PREFERENCE"
+private const val KEY_AUDIO_LANGUAGE_PREFERENCE_SUMMARY_VALUE =
+  "AUDIO_LANGUAGE_PREFERENCE_SUMMARY_VALUE"
+
+/** The activity to change the Default Audio language of the app. */
+class DefaultAudioActivity : InjectableAppCompatActivity() {
+
+  @Inject
+  lateinit var defaultAudioActivityPresenter: DefaultAudioActivityPresenter
+  private lateinit var prefKey: String
+  private lateinit var prefSummaryValue: String
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    prefKey = intent.getStringExtra(KEY_AUDIO_LANGUAGE_PREFERENCE_TITLE)
+    prefSummaryValue = if (savedInstanceState != null) {
+      savedInstanceState.get(KEY_AUDIO_LANGUAGE_PREFERENCE_SUMMARY_VALUE) as String
+    } else {
+      intent.getStringExtra(KEY_AUDIO_LANGUAGE_PREFERENCE_SUMMARY_VALUE)
+    }
+    defaultAudioActivityPresenter.handleOnCreate(prefKey, prefSummaryValue)
+  }
+
+  companion object {
+    /** Returns a new [Intent] to route to [DefaultAudioActivity]. */
+    fun createDefaultAudioActivityIntent(
+      context: Context,
+      prefKey: String,
+      summaryValue: String?
+    ): Intent {
+      val intent = Intent(context, DefaultAudioActivity::class.java)
+      intent.putExtra(KEY_AUDIO_LANGUAGE_PREFERENCE_TITLE, prefKey)
+      intent.putExtra(KEY_AUDIO_LANGUAGE_PREFERENCE_SUMMARY_VALUE, summaryValue)
+      return intent
+    }
+  }
+
+  override fun onSaveInstanceState(outState: Bundle) {
+    super.onSaveInstanceState(outState)
+    outState.putString(
+      KEY_AUDIO_LANGUAGE_PREFERENCE_SUMMARY_VALUE,
+      defaultAudioActivityPresenter.getLanguageSelected()
+    )
+  }
+
+  override fun onBackPressed() {
+    val message = defaultAudioActivityPresenter.getLanguageSelected()
+    val intent = Intent()
+    intent.putExtra(KEY_MESSAGE_AUDIO_LANGUAGE, message)
+    setResult(REQUEST_CODE_AUDIO_LANGUAGE, intent)
+    finish()
+  }
+}
Index: app/src/main/java/org/oppia/app/options/LanguageSelectionAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/LanguageSelectionAdapter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/LanguageSelectionAdapter.kt	(date 1584626399000)
@@ -0,0 +1,68 @@
+package org.oppia.app.options
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.databinding.DataBindingUtil
+import androidx.databinding.library.baseAdapters.BR
+import androidx.recyclerview.widget.RecyclerView
+import org.oppia.app.R
+import org.oppia.app.databinding.LanguageItemsBinding
+
+// TODO(#216): Make use of generic data-binding-enabled RecyclerView adapter.
+
+/** Adapter to bind languages to [RecyclerView] inside [AppLanguageActivityPresenter] and [DefaultAudioActivityPresenter]. */
+class LanguageSelectionAdapter(private val prefKey: String) :
+  RecyclerView.Adapter<LanguageSelectionAdapter.LanguageViewHolder>() {
+
+  private var prefSummaryValue: String? = null
+  private var languageList: List<String> = ArrayList()
+  private lateinit var selectedLanguage: String
+  private var selectedPosition: Int = -1
+  override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): LanguageViewHolder {
+    val languageListItemBinding = DataBindingUtil.inflate<LanguageItemsBinding>(
+      LayoutInflater.from(parent.context),
+      R.layout.language_items, parent,
+      /* attachToRoot= */ false
+    )
+    return LanguageViewHolder(languageListItemBinding)
+  }
+
+  override fun onBindViewHolder(languageViewHolder: LanguageViewHolder, i: Int) {
+    languageViewHolder.bind(languageList[i], i)
+  }
+
+  override fun getItemCount(): Int {
+    return languageList.size
+  }
+
+  fun setLanguageList(languageList: List<String>) {
+    this.languageList = languageList
+    notifyDataSetChanged()
+  }
+
+  fun setDefaultLanguageSelected(prefSummaryValue: String?) {
+    selectedPosition = languageList.indexOf(prefSummaryValue)
+    this.prefSummaryValue = prefSummaryValue
+  }
+
+  fun getSelectedLanguage(): String {
+    selectedLanguage = languageList.get(selectedPosition)
+    return selectedLanguage
+  }
+
+  inner class LanguageViewHolder(val binding: LanguageItemsBinding) : RecyclerView.ViewHolder(binding.root) {
+    internal fun bind(language: String, position: Int) {
+      binding.setVariable(BR.languageString, language)
+      binding.languageRadioButton.isChecked = position == selectedPosition
+      binding.radioContainer.setOnClickListener {
+        if (prefKey == APP_LANGUAGE) {
+          selectedPosition = adapterPosition
+          notifyDataSetChanged()
+        } else {
+          selectedPosition = adapterPosition
+          notifyDataSetChanged()
+        }
+      }
+    }
+  }
+}
Index: app/src/Test/java/org/oppia/app/home/HomeActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/home/HomeActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/home/HomeActivityTest.kt	(date 1584626399000)
@@ -2,13 +2,13 @@
 
 import android.app.Application
 import android.content.Context
+import android.content.Intent
 import android.os.Handler
 import android.os.Looper
 import android.view.View
 import androidx.recyclerview.widget.RecyclerView
 import androidx.test.core.app.ActivityScenario.launch
 import androidx.test.core.app.ApplicationProvider
-import androidx.test.espresso.Espresso.onIdle
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.Espresso.pressBack
 import androidx.test.espresso.IdlingRegistry
@@ -24,9 +24,12 @@
 import androidx.test.espresso.intent.Intents.intended
 import androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent
 import androidx.test.espresso.intent.matcher.IntentMatchers.hasExtra
-import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
 import androidx.test.espresso.matcher.ViewMatchers
+import androidx.test.espresso.matcher.ViewMatchers.hasDescendant
+import androidx.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed
+import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
 import androidx.test.espresso.matcher.ViewMatchers.isRoot
+import androidx.test.espresso.matcher.ViewMatchers.withContentDescription
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
 import androidx.test.espresso.util.HumanReadables
@@ -37,7 +40,9 @@
 import dagger.Module
 import dagger.Provides
 import kotlinx.coroutines.CoroutineDispatcher
+import kotlinx.coroutines.ExperimentalCoroutinesApi
 import kotlinx.coroutines.asCoroutineDispatcher
+import org.hamcrest.CoreMatchers.allOf
 import org.hamcrest.CoreMatchers.containsString
 import org.hamcrest.Matcher
 import org.hamcrest.Matchers
@@ -47,16 +52,18 @@
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
-import org.oppia.app.home.continueplaying.ContinuePlayingActivity
+import org.oppia.app.home.recentlyplayed.RecentlyPlayedActivity
 import org.oppia.app.profile.ProfileActivity
+import org.oppia.app.profileprogress.ProfileProgressActivity
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.atPosition
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.atPositionOnView
 import org.oppia.app.topic.TopicActivity
 import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
-import org.oppia.domain.UserAppHistoryController
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.domain.profile.ProfileTestHelper
+import org.oppia.domain.topic.FRACTIONS_STORY_ID_0
 import org.oppia.domain.topic.FRACTIONS_TOPIC_ID
 import org.oppia.domain.topic.TEST_TOPIC_ID_0
-import org.oppia.domain.topic.FRACTIONS_STORY_ID_0
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
 import org.oppia.util.logging.GlobalLogLevel
@@ -66,17 +73,25 @@
 import java.util.concurrent.AbstractExecutorService
 import java.util.concurrent.TimeUnit
 import java.util.concurrent.TimeoutException
+import javax.inject.Inject
 import javax.inject.Singleton
 
 /** Tests for [HomeActivity]. */
 @RunWith(AndroidJUnit4::class)
 class HomeActivityTest {
 
+  @Inject lateinit var profileTestHelper: ProfileTestHelper
+  @Inject lateinit var context: Context
+
+  private val internalProfileId: Int = 1
+
   @Before
+  @ExperimentalCoroutinesApi
   fun setUp() {
     Intents.init()
+    setUpTestApplicationComponent()
     IdlingRegistry.getInstance().register(MainThreadExecutor.countingResource)
-    simulateNewAppInstance()
+    profileTestHelper.initializeProfiles()
   }
 
   @After
@@ -85,33 +100,36 @@
     Intents.release()
   }
 
+  private fun setUpTestApplicationComponent() {
+    DaggerHomeActivityTest_TestApplicationComponent.builder()
+      .setApplication(ApplicationProvider.getApplicationContext())
+      .build()
+      .inject(this)
+  }
+
   @Test
-  fun testHomeActivity_firstOpen_hasWelcomeString() {
-    launch(HomeActivity::class.java).use {
-      onView(
-        atPositionOnView(
-          R.id.home_recycler_view,
-          0,
-          R.id.welcome_text_view
-        )
-      ).check(matches(withText("Welcome to Oppia!")))
+  fun testHomeActivity_clickNavigationDrawerHamburger_clickOnHeader_opensProfileProgressActivity() {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
+      onView(withContentDescription(R.string.drawer_open_content_description)).check(
+        matches(isCompletelyDisplayed())
+      ).perform(click())
+      onView(withId(R.id.nav_header_profile_name)).perform(click())
+      intended(hasComponent(ProfileProgressActivity::class.java.name))
+      intended(hasExtra(ProfileProgressActivity.PROFILE_PROGRESS_ACTIVITY_PROFILE_ID_KEY, internalProfileId))
     }
   }
 
   @Test
-  fun testHomeActivity_secondOpen_hasWelcomeBackString() {
-    simulateAppAlreadyOpened()
-
-    launch(HomeActivity::class.java).use {
-      // Wait until the expected text appears on the screen, and ensure it's for the welcome text view.
-      waitForTheView(withText("Welcome back to Oppia!"))
+  @Ignore("This test case is incorrect as it depends on internalProfileId which is not guaranteed to be 0 for admin.")
+  fun testHomeActivity_recyclerViewIndex0_withProfileId0_displayProfileName_profileNameDisplayedSuccessfully() {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(
         atPositionOnView(
           R.id.home_recycler_view,
           0,
-          R.id.welcome_text_view
+          R.id.profile_name_textview
         )
-      ).check(matches(withText("Welcome back to Oppia!")))
+      ).check(matches(withText("Sean!")))
     }
   }
 
@@ -145,7 +163,7 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex1_displaysRecentlyPlayedStoriesText() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
       onView(atPositionOnView(R.id.home_recycler_view, 1, R.id.recently_played_stories_text_view)).check(
         matches(
@@ -157,7 +175,7 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex1_displaysViewAllText() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
       onView(atPositionOnView(R.id.home_recycler_view, 1, R.id.view_all_text_view)).check(
         matches(
@@ -168,31 +186,31 @@
   }
 
   @Test
-  fun testHomeActivity_recyclerViewIndex1_clickViewAll_opensContinuePlayingActivity() {
-    launch(HomeActivity::class.java).use {
+  fun testHomeActivity_recyclerViewIndex1_clickViewAll_opensRecentlyPlayedActivity() {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
       onView(atPositionOnView(R.id.home_recycler_view, 1, R.id.view_all_text_view)).perform(click())
-      intended(hasComponent(ContinuePlayingActivity::class.java.name))
+      intended(hasComponent(RecentlyPlayedActivity::class.java.name))
     }
   }
 
   @Test
   fun testHomeActivity_recyclerViewIndex1_promotedCard_chapterNameIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(
-        Matchers.allOf(
+        allOf(
           withId(R.id.promoted_story_list_recycler_view),
           ViewMatchers.withParent(
             atPosition(R.id.home_recycler_view, 1)
           )
         )
-      ).check(matches(ViewMatchers.hasDescendant(withText(Matchers.containsString("The Meaning of Equal Parts")))))
+      ).check(matches(hasDescendant(withText(containsString("What is a Fraction?")))))
     }
   }
 
   @Test
   fun testHomeActivity_recyclerViewIndex1_promotedCard_storyNameIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
       onView(atPositionOnView(R.id.home_recycler_view, 1, R.id.story_name_text_view)).check(
         matches(
@@ -205,7 +223,7 @@
   @Test
   @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
   fun testHomeActivity_recyclerViewIndex1_configurationChange_promotedCard_storyNameIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
       onView(isRoot()).perform(orientationLandscape())
       onView(atPositionOnView(R.id.home_recycler_view, 1, R.id.story_name_text_view)).check(
@@ -218,7 +236,7 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex1_clickPromotedStory_opensTopicActivity() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
       onView(
         Matchers.allOf(
@@ -229,14 +247,15 @@
         )
       ).perform(click())
       intended(hasComponent(TopicActivity::class.java.name))
-      intended(hasExtra(TopicActivity.TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, FRACTIONS_TOPIC_ID))
-      intended(hasExtra(TopicActivity.TOPIC_ACTIVITY_STORY_ID_ARGUMENT_KEY, FRACTIONS_STORY_ID_0))
+      intended(hasExtra(TopicActivity.getProfileIdKey(), internalProfileId))
+      intended(hasExtra(TopicActivity.getTopicIdKey(), FRACTIONS_TOPIC_ID))
+      intended(hasExtra(TopicActivity.getStoryIdKey(), FRACTIONS_STORY_ID_0))
     }
   }
 
   @Test
   fun testHomeActivity_recyclerViewIndex1_promotedCard_topicNameIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
       onView(atPositionOnView(R.id.home_recycler_view, 1, R.id.topic_name_text_view)).check(
         matches(
@@ -248,7 +267,7 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex3_topicSummary_topicNameIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(3))
       onView(atPositionOnView(R.id.home_recycler_view, 3, R.id.topic_name_text_view)).check(
         matches(
@@ -260,7 +279,7 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex3_topicSummary_lessonCountIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(3))
       onView(atPositionOnView(R.id.home_recycler_view, 3, R.id.lesson_count_text_view)).check(
         matches(
@@ -272,7 +291,7 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex4_topicSummary_topicNameIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(4))
       onView(atPositionOnView(R.id.home_recycler_view, 4, R.id.topic_name_text_view)).check(
         matches(
@@ -284,7 +303,7 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex4_topicSummary_lessonCountIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(4))
       onView(atPositionOnView(R.id.home_recycler_view, 4, R.id.lesson_count_text_view)).check(
         matches(
@@ -297,7 +316,7 @@
   @Test
   @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
   fun testHomeActivity_recyclerViewIndex4_topicSummary_configurationChange_lessonCountIsCorrect() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(isRoot()).perform(orientationLandscape())
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(4))
       onView(atPositionOnView(R.id.home_recycler_view, 4, R.id.lesson_count_text_view)).check(
@@ -310,17 +329,17 @@
 
   @Test
   fun testHomeActivity_recyclerViewIndex3_clickTopicSummary_opensTopicActivity() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       onView(withId(R.id.home_recycler_view)).perform(scrollToPosition<RecyclerView.ViewHolder>(3))
       onView(atPosition(R.id.home_recycler_view, 3)).perform(click())
       intended(hasComponent(TopicActivity::class.java.name))
-      intended(hasExtra(TopicActivity.TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, TEST_TOPIC_ID_0))
+      intended(hasExtra(TopicActivity.getTopicIdKey(), TEST_TOPIC_ID_0))
     }
   }
 
   @Test
   fun testHomeActivity_onBackPressed_showsExitToProfileChooserDialog() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       pressBack()
       onView(withText(R.string.home_activity_back_dialog_message)).check(matches(isDisplayed()))
     }
@@ -328,24 +347,15 @@
 
   @Test
   fun testHomeActivity_onBackPressed_clickExit_checkOpensProfileActivity() {
-    launch(HomeActivity::class.java).use {
+    launch<HomeActivity>(createHomeActivityIntent(internalProfileId)).use {
       pressBack()
       onView(withText(R.string.home_activity_back_dialog_exit)).perform(click())
       intended(hasComponent(ProfileActivity::class.java.name))
     }
   }
 
-  private fun simulateNewAppInstance() {
-    // Simulate a fresh app install by clearing any potential on-disk caches using an isolated app history controller.
-    createTestRootComponent().getUserAppHistoryController().clearUserAppHistory()
-    onIdle()
-  }
-
-  private fun simulateAppAlreadyOpened() {
-    // Simulate the app was already opened by creating an isolated app history controller and saving the opened status
-    // on the system before the activity is opened.
-    createTestRootComponent().getUserAppHistoryController().markUserOpenedApp()
-    onIdle()
+  private fun createHomeActivityIntent(profileId: Int): Intent {
+    return HomeActivity.createHomeActivity(ApplicationProvider.getApplicationContext(), profileId)
   }
 
   private fun createTestRootComponent(): TestApplicationComponent {
@@ -453,7 +463,8 @@
       fun build(): TestApplicationComponent
     }
 
-    fun getUserAppHistoryController(): UserAppHistoryController
+    fun getProfileManagementController(): ProfileManagementController
+    fun inject(homeActivityTest: HomeActivityTest)
   }
 
 // TODO(#59): Move this to a general-purpose testing library that replaces all CoroutineExecutors with an
Index: app/src/main/java/org/oppia/app/options/OptionsAudioLanguageViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsAudioLanguageViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsAudioLanguageViewModel.kt	(date 1584626399000)
@@ -0,0 +1,18 @@
+package org.oppia.app.options
+
+import androidx.databinding.ObservableField
+
+/** Audio language settings view model for the recycler view in [OptionsFragment]. */
+class OptionsAudioLanguageViewModel(
+  private val routeToAudioLanguageListListener: RouteToAudioLanguageListListener
+) : OptionsItemViewModel() {
+  val audioLanguage = ObservableField<String>("")
+
+  fun setAudioLanguage(audioLanguageValue: String) {
+    audioLanguage.set(audioLanguageValue)
+  }
+
+  fun onAudioLanguageClicked() {
+    routeToAudioLanguageListListener.routeAudioLanguageList(audioLanguage.get())
+  }
+}
Index: app/src/main/java/org/oppia/app/options/OptionsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsFragment.kt	(date 1584626399000)
@@ -0,0 +1,42 @@
+package org.oppia.app.options
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+const val KEY_MESSAGE_STORY_TEXT_SIZE = "TEXT_SIZE"
+const val KEY_MESSAGE_APP_LANGUAGE = "APP_LANGUAGE"
+const val KEY_MESSAGE_AUDIO_LANGUAGE = "AUDIO_LANGUAGE"
+const val REQUEST_CODE_TEXT_SIZE = 1
+const val REQUEST_CODE_APP_LANGUAGE = 2
+const val REQUEST_CODE_AUDIO_LANGUAGE = 3
+
+/** Fragment that contains an introduction to the app. */
+class OptionsFragment : InjectableFragment() {
+  @Inject lateinit var optionsFragmentPresenter: OptionsFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return optionsFragmentPresenter.handleCreateView(inflater, container)
+  }
+
+  fun updateStoryTextSize(textSize: String) {
+    optionsFragmentPresenter.updateStoryTextSize(textSize)
+  }
+
+  fun updateAppLanguage(appLanguage: String) {
+    optionsFragmentPresenter.updateAppLanguage(appLanguage)
+  }
+
+  fun updateAudioLanguage(audioLanguage: String) {
+    optionsFragmentPresenter.updateAudioLanguage(audioLanguage)
+  }
+}
Index: app/src/main/java/org/oppia/app/options/OptionsAppLanguageViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsAppLanguageViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsAppLanguageViewModel.kt	(date 1584626399000)
@@ -0,0 +1,18 @@
+package org.oppia.app.options
+
+import androidx.databinding.ObservableField
+
+/** App language settings view model for the recycler view in [OptionsFragment]. */
+class OptionsAppLanguageViewModel(
+  private val routeToAppLanguageListListener: RouteToAppLanguageListListener
+) : OptionsItemViewModel() {
+  val appLanguage = ObservableField<String>("")
+
+  fun setAppLanguage(appLanguageValue: String) {
+    appLanguage.set(appLanguageValue)
+  }
+
+  fun onAppLanguageClicked() {
+    routeToAppLanguageListListener.routeAppLanguageList(appLanguage.get())
+  }
+}
Index: app/src/main/java/org/oppia/app/profileprogress/ProfileProgressActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfileProgressActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfileProgressActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,58 @@
+package org.oppia.app.profileprogress
+
+import android.content.Intent
+import android.provider.MediaStore
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.model.ProfileId
+import org.oppia.app.profile.GALLERY_INTENT_RESULT_CODE
+import org.oppia.domain.profile.ProfileManagementController
+import javax.inject.Inject
+
+private const val TAG_PROFILE_PICTURE_EDIT_DIALOG = "PROFILE_PICTURE_EDIT_DIALOG"
+
+/** The presenter for [ProfileProgressActivity]. */
+@ActivityScope
+class ProfileProgressActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val profileManagementController: ProfileManagementController
+) {
+  private lateinit var profileId: ProfileId
+
+  fun handleOnCreate(internalProfileId: Int) {
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+    activity.setContentView(R.layout.profile_progress_activity)
+    if (getProfileProgressFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.profile_progress_fragment_placeholder,
+        ProfileProgressFragment.newInstance(internalProfileId)
+      ).commitNow()
+    }
+  }
+
+  private fun getProfileProgressFragment(): ProfileProgressFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.profile_progress_fragment_placeholder) as ProfileProgressFragment?
+  }
+
+  fun showPictureEditDialog() {
+    val previousFragment =
+      activity.supportFragmentManager.findFragmentByTag(TAG_PROFILE_PICTURE_EDIT_DIALOG)
+    if (previousFragment != null) {
+      activity.supportFragmentManager.beginTransaction().remove(previousFragment).commitNow()
+    }
+    val dialogFragment = ProfilePictureEditDialogFragment.newInstance()
+    dialogFragment.showNow(activity.supportFragmentManager, TAG_PROFILE_PICTURE_EDIT_DIALOG)
+  }
+
+  fun openGalleryIntent() {
+    val galleryIntent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
+    activity.startActivityForResult(galleryIntent, GALLERY_INTENT_RESULT_CODE)
+  }
+
+  fun handleOnActivityResult(intent: Intent?) {
+    intent?.let {
+      profileManagementController.updateProfileAvatar(profileId, intent.data, /* colorRgb= */ -10710042)
+    }
+  }
+}
Index: app/src/Test/java/org/oppia/app/story/StoryFragmentTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/story/StoryFragmentTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/story/StoryFragmentTest.kt	(date 1584626399000)
@@ -12,6 +12,7 @@
 import androidx.test.espresso.assertion.ViewAssertions.matches
 import androidx.test.espresso.contrib.RecyclerViewActions.scrollToPosition
 import androidx.test.espresso.intent.Intents
+import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withParent
 import androidx.test.espresso.matcher.ViewMatchers.withText
@@ -20,17 +21,23 @@
 import org.hamcrest.CoreMatchers.instanceOf
 import org.junit.After
 import org.junit.Before
+import org.junit.Ignore
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.atPositionOnView
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.hasItemCount
-import org.oppia.app.story.testing.StoryFragmentTestActivity
+import org.oppia.app.testing.StoryFragmentTestActivity
+import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
 import org.oppia.domain.topic.TEST_STORY_ID_1
+import org.oppia.domain.topic.TEST_TOPIC_ID_0
 
 /** Tests for [StoryFragment]. */
 @RunWith(AndroidJUnit4::class)
 class StoryFragmentTest {
+
+  private val internalProfileId = 0
+
   @Before
   fun setUp() {
     Intents.init()
@@ -43,14 +50,26 @@
 
   @Test
   fun testStoryFragment_clickOnToolbarNavigationButton_closeActivity() {
-    launch<StoryFragmentTestActivity>(createTestActivityIntent(TEST_STORY_ID_1)).use {
+    launch<StoryFragmentTestActivity>(
+      createTestActivityIntent(
+        internalProfileId,
+        TEST_TOPIC_ID_0,
+        TEST_STORY_ID_1
+      )
+    ).use {
       onView(withId(R.id.story_toolbar)).perform(click())
     }
   }
 
   @Test
   fun testStoryFragment_toolbarTitle_isDisplayedSuccessfully() {
-    launch<StoryFragmentTestActivity>(createTestActivityIntent(TEST_STORY_ID_1)).use {
+    launch<StoryFragmentTestActivity>(
+      createTestActivityIntent(
+        internalProfileId,
+        TEST_TOPIC_ID_0,
+        TEST_STORY_ID_1
+      )
+    ).use {
       onView(
         allOf(
           instanceOf(TextView::class.java),
@@ -61,8 +80,15 @@
   }
 
   @Test
+  @Ignore("No dummy progress supported now.") // TODO(#734): Update test case as per new StoryProgress and TopicProgress.
   fun testStoryFragment_correctStoryCountLoadedInHeader() {
-    launch<StoryFragmentTestActivity>(createTestActivityIntent(TEST_STORY_ID_1)).use {
+    launch<StoryFragmentTestActivity>(
+      createTestActivityIntent(
+        internalProfileId,
+        TEST_TOPIC_ID_0,
+        TEST_STORY_ID_1
+      )
+    ).use {
       val headerString: String = getResources().getQuantityString(R.plurals.story_total_chapters, 3, 1, 3)
       onView(withId(R.id.story_chapter_list)).perform(scrollToPosition<RecyclerView.ViewHolder>(0))
       onView(atPositionOnView(R.id.story_chapter_list, 0, R.id.story_progress_chapter_completed_text)).check(
@@ -75,13 +101,64 @@
 
   @Test
   fun testStoryFragment_correctNumberOfStoriesLoadedInRecyclerView() {
-    launch<StoryFragmentTestActivity>(createTestActivityIntent(TEST_STORY_ID_1)).use {
+    launch<StoryFragmentTestActivity>(
+      createTestActivityIntent(
+        internalProfileId,
+        TEST_TOPIC_ID_0,
+        TEST_STORY_ID_1
+      )
+    ).use {
       onView(withId(R.id.story_chapter_list)).check(hasItemCount(4))
     }
   }
 
-  private fun createTestActivityIntent(storyId: String): Intent {
-    return StoryFragmentTestActivity.createTestActivityIntent(ApplicationProvider.getApplicationContext(), storyId)
+  @Test
+  fun testStoryFragment_changeConfiguration_textViewIsShownCorrectly() {
+    launch<StoryFragmentTestActivity>(
+      createTestActivityIntent(
+        internalProfileId,
+        TEST_TOPIC_ID_0,
+        TEST_STORY_ID_1
+      )
+    ).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(allOf(withId(R.id.story_chapter_list))).perform(scrollToPosition<RecyclerView.ViewHolder>(1))
+      onView(atPositionOnView(R.id.story_chapter_list, 1, R.id.chapter_title)).check(
+        matches(
+          withText("Chapter 1: Second Exploration")
+        )
+      )
+    }
+  }
+
+  @Test
+  @Ignore("No dummy progress supported now.") // TODO(#734): Update test case as per new StoryProgress and TopicProgress.
+  fun testStoryFragment_changeConfiguration_correctStoryCountInHeader() {
+    launch<StoryFragmentTestActivity>(
+      createTestActivityIntent(
+        internalProfileId,
+        TEST_TOPIC_ID_0,
+        TEST_STORY_ID_1
+      )
+    ).use {
+      onView(isRoot()).perform(orientationLandscape())
+      val headerString: String = getResources().getQuantityString(R.plurals.story_total_chapters, 3, 1, 3)
+      onView(withId(R.id.story_chapter_list)).perform(scrollToPosition<RecyclerView.ViewHolder>(0))
+      onView(atPositionOnView(R.id.story_chapter_list, 0, R.id.story_progress_chapter_completed_text)).check(
+        matches(
+          withText(headerString)
+        )
+      )
+    }
+  }
+
+  private fun createTestActivityIntent(internalProfileId: Int, topicId: String, storyId: String): Intent {
+    return StoryFragmentTestActivity.createTestActivityIntent(
+      ApplicationProvider.getApplicationContext(),
+      internalProfileId,
+      topicId,
+      storyId
+    )
   }
 
   private fun getResources(): Resources {
Index: app/src/main/java/org/oppia/app/profileprogress/ProfileProgressViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfileProgressViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfileProgressViewModel.kt	(date 1584626399000)
@@ -0,0 +1,141 @@
+package org.oppia.app.profileprogress
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Observer
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.CompletedStoryList
+import org.oppia.app.model.OngoingStoryList
+import org.oppia.app.model.OngoingTopicList
+import org.oppia.app.model.Profile
+import org.oppia.app.model.ProfileId
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.domain.topic.TopicController
+import org.oppia.domain.topic.TopicListController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The [ViewModel] for [ProfileProgressFragment]. */
+@FragmentScope
+class ProfileProgressViewModel @Inject constructor(
+  activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val profileManagementController: ProfileManagementController,
+  private val topicController: TopicController,
+  private val topicListController: TopicListController,
+  private val logger: Logger
+) : ViewModel() {
+  /** [internalProfileId] needs to be set before any of the live data members can be accessed. */
+  private var internalProfileId: Int = -1
+  private lateinit var profileId: ProfileId
+
+  private val headerViewModel = ProfileProgressHeaderViewModel(activity)
+
+  private val itemViewModelList: MutableList<ProfileProgressItemViewModel> = mutableListOf(
+    headerViewModel as ProfileProgressItemViewModel
+  )
+
+  fun setProfileId(internalProfileId: Int) {
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+    this.internalProfileId = internalProfileId
+
+    subscribeToProfileLiveData()
+    subscribeToCompletedStoryListLiveData()
+    subscribeToOngoingTopicListLiveData()
+  }
+
+  private fun getProfileData(): LiveData<Profile> {
+    return Transformations.map(
+      profileManagementController.getProfile(profileId), ::processGetProfileResult
+    )
+  }
+
+  private fun subscribeToProfileLiveData() {
+    getProfileData().observe(fragment, Observer<Profile> {
+      headerViewModel.setProfile(it)
+    })
+  }
+
+  private fun processGetProfileResult(profileResult: AsyncResult<Profile>): Profile {
+    if (profileResult.isFailure()) {
+      logger.e("ProfileProgressFragment", "Failed to retrieve profile", profileResult.getErrorOrNull()!!)
+    }
+    return profileResult.getOrDefault(Profile.getDefaultInstance())
+  }
+
+  private val ongoingStoryListResultLiveData: LiveData<AsyncResult<OngoingStoryList>> by lazy {
+    topicListController.getOngoingStoryList(profileId)
+  }
+
+  private val ongoingStoryListLiveData: LiveData<OngoingStoryList> by lazy {
+    Transformations.map(ongoingStoryListResultLiveData, ::processOngoingStoryResult)
+  }
+
+  val ongoingStoryListViewModelLiveData: LiveData<List<ProfileProgressItemViewModel>> by lazy {
+    Transformations.map(ongoingStoryListLiveData, ::processOngoingStoryList)
+  }
+
+  private fun processOngoingStoryResult(ongoingStoryListResult: AsyncResult<OngoingStoryList>): OngoingStoryList {
+    if (ongoingStoryListResult.isFailure()) {
+      logger.e(
+        "ProfileProgressFragment",
+        "Failed to retrieve ongoing story list: ",
+        ongoingStoryListResult.getErrorOrNull()!!
+      )
+    }
+    return ongoingStoryListResult.getOrDefault(OngoingStoryList.getDefaultInstance())
+  }
+
+  private fun processOngoingStoryList(ongoingStoryList: OngoingStoryList): List<ProfileProgressItemViewModel> {
+    itemViewModelList.addAll(ongoingStoryList.recentStoryList.subList(0, 2).map { story ->
+      RecentlyPlayedStorySummaryViewModel(story) as ProfileProgressItemViewModel
+    })
+    return itemViewModelList
+  }
+
+  private fun subscribeToCompletedStoryListLiveData() {
+    getCompletedStoryListCount().observe(fragment, Observer<CompletedStoryList> {
+      headerViewModel.setCompletedStoryCount(it.completedStoryCount)
+    })
+  }
+
+  private fun getCompletedStoryListCount(): LiveData<CompletedStoryList> {
+    return Transformations.map(topicController.getCompletedStoryList(profileId), ::processGetCompletedStoryListResult)
+  }
+
+  private fun processGetCompletedStoryListResult(completedStoryListResult: AsyncResult<CompletedStoryList>): CompletedStoryList {
+    if (completedStoryListResult.isFailure()) {
+      logger.e(
+        "ProfileProgressFragment",
+        "Failed to retrieve completed story list",
+        completedStoryListResult.getErrorOrNull()!!
+      )
+    }
+    return completedStoryListResult.getOrDefault(CompletedStoryList.getDefaultInstance())
+  }
+
+  private fun subscribeToOngoingTopicListLiveData() {
+    getOngoingTopicListCount().observe(fragment, Observer<OngoingTopicList> {
+      headerViewModel.setOngoingTopicCount(it.topicCount)
+    })
+  }
+
+  private fun getOngoingTopicListCount(): LiveData<OngoingTopicList> {
+    return Transformations.map(topicController.getOngoingTopicList(profileId), ::processGetOngoingTopicListResult)
+  }
+
+  private fun processGetOngoingTopicListResult(ongoingTopicListResult: AsyncResult<OngoingTopicList>): OngoingTopicList {
+    if (ongoingTopicListResult.isFailure()) {
+      logger.e(
+        "ProfileProgressFragment",
+        "Failed to retrieve ongoing topic list",
+        ongoingTopicListResult.getErrorOrNull()!!
+      )
+    }
+    return ongoingTopicListResult.getOrDefault(OngoingTopicList.getDefaultInstance())
+  }
+}
Index: app/src/main/java/org/oppia/app/profileprogress/ProfilePictureDialogInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfilePictureDialogInterface.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfilePictureDialogInterface.kt	(date 1584626399000)
@@ -0,0 +1,7 @@
+package org.oppia.app.profileprogress
+
+/** Interface to handle option selection in [ProfilePictureEditDialogFragment]. */
+interface ProfilePictureDialogInterface {
+  fun showProfilePicture()
+  fun showGalleryForProfilePicture()
+}
Index: app/src/main/java/org/oppia/app/profileprogress/RecentlyPlayedStoryViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/RecentlyPlayedStoryViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/RecentlyPlayedStoryViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.profileprogress
+
+import org.oppia.app.model.PromotedStory
+
+/** Recently played item [ViewModel] for the recycler view in [ProfileProgressFragment]. */
+class RecentlyPlayedStorySummaryViewModel(val promotedStory: PromotedStory) : ProfileProgressItemViewModel()
Index: app/src/Test/java/org/oppia/app/story/StoryActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/story/StoryActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/story/StoryActivityTest.kt	(date 1584626399000)
@@ -20,14 +20,17 @@
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
-import org.oppia.app.player.exploration.EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY
 import org.oppia.app.player.exploration.ExplorationActivity
 import org.oppia.domain.topic.TEST_EXPLORATION_ID_1
 import org.oppia.domain.topic.TEST_STORY_ID_1
+import org.oppia.domain.topic.TEST_TOPIC_ID_0
 
 /** Tests for [StoryActivity]. */
 @RunWith(AndroidJUnit4::class)
 class StoryActivityTest {
+
+  private val internalProfileId = 0
+
   @Before
   fun setUp() {
     Intents.init()
@@ -40,7 +43,7 @@
 
   @Test
   fun clickOnStory_intentsToExplorationActivity() {
-    launch<StoryActivity>(createStoryActivityIntent(TEST_STORY_ID_1)).use {
+    launch<StoryActivity>(createStoryActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_1)).use {
       onView(withId(R.id.story_chapter_list)).perform(
         scrollToPosition<RecyclerView.ViewHolder>(
           1
@@ -55,14 +58,19 @@
 
       intended(
         allOf(
-          hasExtra(EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY, TEST_EXPLORATION_ID_1),
+          hasExtra(ExplorationActivity.EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY, TEST_EXPLORATION_ID_1),
           hasComponent(ExplorationActivity::class.java.name)
         )
       )
     }
   }
 
-  private fun createStoryActivityIntent(storyId: String): Intent {
-    return StoryActivity.createStoryActivityIntent(ApplicationProvider.getApplicationContext(), storyId)
+  private fun createStoryActivityIntent(internalProfileId: Int, topicId: String, storyId: String): Intent {
+    return StoryActivity.createStoryActivityIntent(
+      ApplicationProvider.getApplicationContext(),
+      internalProfileId,
+      topicId,
+      storyId
+    )
   }
 }
Index: app/src/main/java/org/oppia/app/options/AppLanguageActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/AppLanguageActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/AppLanguageActivity.kt	(date 1584626399000)
@@ -0,0 +1,47 @@
+package org.oppia.app.options
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+private const val KEY_APP_LANGUAGE_PREFERENCE_TITLE = "APP_LANGUAGE_PREFERENCE"
+private const val KEY_APP_LANGUAGE_PREFERENCE_SUMMARY_VALUE = "APP_LANGUAGE_PREFERENCE_SUMMARY_VALUE"
+
+/** The activity to change the language of the app. */
+class AppLanguageActivity : InjectableAppCompatActivity() {
+  @Inject lateinit var appLanguageActivityPresenter: AppLanguageActivityPresenter
+  private lateinit var prefKey: String
+  private lateinit var prefSummaryValue: String
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    prefKey = intent.getStringExtra(KEY_APP_LANGUAGE_PREFERENCE_TITLE)
+    prefSummaryValue = intent.getStringExtra(KEY_APP_LANGUAGE_PREFERENCE_SUMMARY_VALUE)
+    appLanguageActivityPresenter.handleOnCreate(prefKey, prefSummaryValue)
+  }
+
+  companion object {
+    /** Returns a new [Intent] to route to [AppLanguageActivity]. */
+    fun createAppLanguageActivityIntent(
+      context: Context,
+      prefKey: String,
+      summaryValue: String?
+    ): Intent {
+      val intent = Intent(context, AppLanguageActivity::class.java)
+      intent.putExtra(KEY_APP_LANGUAGE_PREFERENCE_TITLE, prefKey)
+      intent.putExtra(KEY_APP_LANGUAGE_PREFERENCE_SUMMARY_VALUE, summaryValue)
+      return intent
+    }
+  }
+
+  override fun onBackPressed() {
+    val message = appLanguageActivityPresenter.getLanguageSelected()
+    val intent = Intent()
+    intent.putExtra(KEY_MESSAGE_APP_LANGUAGE, message)
+    setResult(REQUEST_CODE_APP_LANGUAGE, intent)
+    finish()
+  }
+}
Index: app/src/main/java/org/oppia/app/options/StoryTextSizeActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/StoryTextSizeActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/StoryTextSizeActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,111 @@
+package org.oppia.app.options
+
+import android.content.Intent
+import android.widget.SeekBar
+import androidx.appcompat.app.AppCompatActivity
+import androidx.databinding.DataBindingUtil
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.databinding.StoryTextSizeActivityBinding
+import org.oppia.app.model.StoryTextSize
+import javax.inject.Inject
+
+/** The presenter for [StoryTextSizeActivity]. */
+@ActivityScope
+class StoryTextSizeActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity
+) {
+  private var fontSize: String = getStoryTextSize(StoryTextSize.SMALL_TEXT_SIZE)
+
+  fun handleOnCreate(prefSummaryValue: String) {
+    val binding =
+      DataBindingUtil.setContentView<StoryTextSizeActivityBinding>(activity, R.layout.story_text_size_activity)
+
+    fontSize = prefSummaryValue
+
+    binding.storyTextSizeToolbar.setNavigationOnClickListener {
+      val intent = Intent()
+      intent.putExtra(KEY_MESSAGE_STORY_TEXT_SIZE, fontSize)
+      (activity as StoryTextSizeActivity).setResult(REQUEST_CODE_TEXT_SIZE, intent)
+      activity.finish()
+    }
+
+    when (prefSummaryValue) {
+      getStoryTextSize(StoryTextSize.SMALL_TEXT_SIZE) -> {
+        binding.storyTextSizeSeekBar.progress = 0
+        binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.SMALL_TEXT_SIZE)
+      }
+      getStoryTextSize(StoryTextSize.MEDIUM_TEXT_SIZE) -> {
+        binding.storyTextSizeSeekBar.progress = 5
+        binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.MEDIUM_TEXT_SIZE)
+      }
+      getStoryTextSize(StoryTextSize.LARGE_TEXT_SIZE) -> {
+        binding.storyTextSizeSeekBar.progress = 10
+        binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.LARGE_TEXT_SIZE)
+      }
+      getStoryTextSize(StoryTextSize.EXTRA_LARGE_TEXT_SIZE) -> {
+        binding.storyTextSizeSeekBar.progress = 15
+        binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.EXTRA_LARGE_TEXT_SIZE)
+      }
+    }
+
+    binding.storyTextSizeSeekBar.max = 15
+
+    binding.storyTextSizeSeekBar.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {
+      override fun onProgressChanged(seekBar: SeekBar, progress: Int, fromUser: Boolean) {
+        var progressValue = progress
+        progressValue /= 5
+        progressValue *= 5
+
+        when (progressValue) {
+          0 -> {
+            fontSize = getStoryTextSize(StoryTextSize.SMALL_TEXT_SIZE)
+            binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.SMALL_TEXT_SIZE)
+          }
+          5 -> {
+            fontSize = getStoryTextSize(StoryTextSize.MEDIUM_TEXT_SIZE)
+            binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.MEDIUM_TEXT_SIZE)
+          }
+          10 -> {
+            fontSize = getStoryTextSize(StoryTextSize.LARGE_TEXT_SIZE)
+            binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.LARGE_TEXT_SIZE)
+          }
+          else -> {
+            fontSize = getStoryTextSize(StoryTextSize.EXTRA_LARGE_TEXT_SIZE)
+            binding.previewTextview.textSize = getStoryTextSizeInFloat(StoryTextSize.EXTRA_LARGE_TEXT_SIZE)
+          }
+        }
+        seekBar.progress = progressValue
+      }
+
+      override fun onStartTrackingTouch(seekBar: SeekBar) {
+      }
+
+      override fun onStopTrackingTouch(seekBar: SeekBar) {
+      }
+    })
+  }
+
+  fun geSelectedStoryTextSize(): String {
+    return fontSize
+  }
+
+  fun getStoryTextSizeInFloat(storyTextSize: StoryTextSize): Float {
+    return when (storyTextSize) {
+      StoryTextSize.SMALL_TEXT_SIZE -> 16f
+      StoryTextSize.MEDIUM_TEXT_SIZE -> 18f
+      StoryTextSize.LARGE_TEXT_SIZE -> 20f
+      else -> 22f
+    }
+  }
+
+  fun getStoryTextSize(storyTextSize: StoryTextSize): String {
+    return when (storyTextSize) {
+      StoryTextSize.SMALL_TEXT_SIZE -> "Small"
+      StoryTextSize.MEDIUM_TEXT_SIZE -> "Medium"
+      StoryTextSize.LARGE_TEXT_SIZE -> "Large"
+      else -> "Extra Large"
+    }
+  }
+
+}
Index: app/src/main/java/org/oppia/app/options/OptionsActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/options/OptionsActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/options/OptionsActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,57 @@
+package org.oppia.app.options
+
+import android.view.View
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.drawerlayout.widget.DrawerLayout
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.drawer.NavigationDrawerFragment
+import javax.inject.Inject
+
+/** The presenter for [OptionsActivity]. */
+@ActivityScope
+class OptionsActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity
+) {
+  private var navigationDrawerFragment: NavigationDrawerFragment? = null
+
+  fun handleOnCreate() {
+    activity.setContentView(R.layout.option_activity)
+    setUpNavigationDrawer()
+    if (getOptionFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.options_fragment_placeholder,
+        OptionsFragment()
+      ).commitNow()
+    }
+  }
+
+  private fun setUpNavigationDrawer() {
+    val toolbar = activity.findViewById<View>(R.id.options_activity_toolbar) as Toolbar
+    activity.setSupportActionBar(toolbar)
+    activity.supportActionBar!!.setDisplayShowHomeEnabled(true)
+    navigationDrawerFragment =
+      activity.supportFragmentManager.findFragmentById(R.id.options_activity_fragment_navigation_drawer) as NavigationDrawerFragment
+    navigationDrawerFragment!!.setUpDrawer(
+      activity.findViewById<View>(R.id.options_activity_drawer_layout) as DrawerLayout,
+      toolbar, R.id.nav_options
+    )
+  }
+
+  private fun getOptionFragment(): OptionsFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.options_fragment_placeholder) as OptionsFragment?
+  }
+
+  fun updateStoryTextSize(textSize: String) {
+    getOptionFragment()?.updateStoryTextSize(textSize)
+  }
+
+  fun updateAppLanguage(appLanguage: String) {
+    getOptionFragment()?.updateAppLanguage(appLanguage)
+  }
+
+  fun updateAudioLanguage(audioLanguage: String) {
+    getOptionFragment()?.updateAudioLanguage(audioLanguage)
+  }
+}
Index: app/src/Test/java/org/oppia/app/topic/info/TopicInfoFragmentTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/topic/info/TopicInfoFragmentTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/topic/info/TopicInfoFragmentTest.kt	(date 1584626399000)
@@ -1,24 +1,26 @@
 package org.oppia.app.topic.info
 
-import android.content.pm.ActivityInfo
 import android.text.SpannedString
 import android.text.style.StyleSpan
 import android.widget.TextView
 import androidx.test.core.app.ActivityScenario
 import androidx.test.core.app.ApplicationProvider
 import androidx.test.espresso.Espresso.onView
+import androidx.test.espresso.assertion.ViewAssertions.doesNotExist
 import androidx.test.espresso.assertion.ViewAssertions.matches
+import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
+import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
 import androidx.test.ext.junit.runners.AndroidJUnit4
 import com.google.common.truth.Truth.assertThat
 import org.hamcrest.Matchers.containsString
-import org.junit.Ignore
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
 import org.oppia.app.topic.TopicActivity
 import org.oppia.app.utility.EspressoTestsMatchers.withDrawable
+import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
 
 private const val TEST_TOPIC_ID = "GJ2rLXRKD5hw"
 private const val TOPIC_NAME = "Fractions"
@@ -32,24 +34,25 @@
 @RunWith(AndroidJUnit4::class)
 class TopicInfoFragmentTest {
   private val topicThumbnail = R.drawable.lesson_thumbnail_graphic_child_with_fractions_homework
+  private val internalProfileId = 0
 
   @Test
   fun testTopicInfoFragment_loadFragment_checkTopicName_isCorrect() {
-    launchTopicActivityIntent(TEST_TOPIC_ID).use {
+    launchTopicActivityIntent(internalProfileId, TEST_TOPIC_ID).use {
       onView(withId(R.id.topic_name_text_view)).check(matches(withText(containsString(TOPIC_NAME))))
     }
   }
 
   @Test
   fun testTopicInfoFragment_loadFragmentWithTestTopicId1_checkTopicDescription_isCorrect() {
-    launchTopicActivityIntent(TEST_TOPIC_ID).use {
+    launchTopicActivityIntent(internalProfileId, TEST_TOPIC_ID).use {
       onView(withId(R.id.topic_description_text_view)).check(matches(withText(containsString(TOPIC_DESCRIPTION))))
     }
   }
 
   @Test
   fun testTopicInfoFragment_loadFragmentWithTestTopicId1_checkTopicDescription_hasRichText() {
-    launchTopicActivityIntent(TEST_TOPIC_ID).use { scenario ->
+    launchTopicActivityIntent(internalProfileId, TEST_TOPIC_ID).use { scenario ->
       scenario.onActivity { activity ->
         val descriptionTextView: TextView = activity.findViewById(R.id.topic_description_text_view)
         val descriptionText = descriptionTextView.text as SpannedString
@@ -61,25 +64,38 @@
 
   @Test
   fun testTopicInfoFragment_loadFragment_configurationChange_checkTopicThumbnail_isCorrect() {
-    launchTopicActivityIntent(TEST_TOPIC_ID).use {
+    launchTopicActivityIntent(internalProfileId, TEST_TOPIC_ID).use {
       onView(withId(R.id.topic_thumbnail_image_view)).check(matches(withDrawable(topicThumbnail)))
     }
   }
 
   @Test
-  @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
   fun testTopicInfoFragment_loadFragment_configurationChange_checkTopicName_isCorrect() {
-    launchTopicActivityIntent(TEST_TOPIC_ID).use { scenario ->
-      scenario.onActivity {  activity ->
-        activity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE
-      }
-
+    launchTopicActivityIntent(internalProfileId, TEST_TOPIC_ID).use {
+      onView(isRoot()).perform(orientationLandscape())
       onView(withId(R.id.topic_name_text_view)).check(matches(withText(containsString(TOPIC_NAME))))
     }
   }
 
-  private fun launchTopicActivityIntent(topicId: String): ActivityScenario<TopicActivity> {
-    val intent = TopicActivity.createTopicActivityIntent(ApplicationProvider.getApplicationContext(), topicId)
+  @Test
+  fun testTopicInfoFragment_loadFragment_configurationLandscape_isCorrect() {
+    launchTopicActivityIntent(internalProfileId, TEST_TOPIC_ID).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.topic_tabs_viewpager_container)).check(matches(isDisplayed()))
+    }
+  }
+
+  @Test
+  fun testTopicInfoFragment_loadFragment_configurationLandscape_imageViewNotDisplayed() {
+    launchTopicActivityIntent(internalProfileId, TEST_TOPIC_ID).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.topic_thumbnail_image_view)).check(doesNotExist())
+    }
+  }
+
+  private fun launchTopicActivityIntent(internalProfileId: Int, topicId: String): ActivityScenario<TopicActivity> {
+    val intent =
+      TopicActivity.createTopicActivityIntent(ApplicationProvider.getApplicationContext(), internalProfileId, topicId)
     return ActivityScenario.launch(intent)
   }
 }
Index: app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivityViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivityViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivityViewModel.kt	(date 1584626399000)
@@ -0,0 +1,11 @@
+package org.oppia.app.profileprogress
+
+import android.net.Uri
+import androidx.databinding.ObservableField
+import org.oppia.app.model.ProfileAvatar
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** [ViewModel] for displaying user image in Activity. */
+class ProfilePictureActivityViewModel : ObservableViewModel() {
+  val profileAvatar = ObservableField<ProfileAvatar>()
+}
Index: app/src/main/java/org/oppia/app/profileprogress/ProfilePictureClickListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfilePictureClickListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfilePictureClickListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.profileprogress
+
+/** Listener interface for when profile picture is clicked in the UI. */
+interface ProfilePictureClickListener {
+  fun onProfilePictureClicked()
+}
Index: app/src/Test/java/org/oppia/app/topic/review/TopicReviewFragmentTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/topic/review/TopicReviewFragmentTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/topic/review/TopicReviewFragmentTest.kt	(date 1584626399000)
@@ -2,43 +2,44 @@
 
 import android.app.Application
 import android.content.Context
-import android.content.res.Configuration
 import androidx.test.core.app.ActivityScenario
 import androidx.test.core.app.ApplicationProvider
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.action.ViewActions.click
 import androidx.test.espresso.assertion.ViewAssertions.matches
-import androidx.test.espresso.matcher.ViewMatchers
 import androidx.test.espresso.matcher.ViewMatchers.hasDescendant
+import androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA
+import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
 import androidx.test.ext.junit.runners.AndroidJUnit4
 import androidx.test.rule.ActivityTestRule
-import com.google.common.truth.Truth.assertThat
 import dagger.BindsInstance
 import dagger.Component
 import dagger.Module
 import dagger.Provides
 import kotlinx.coroutines.CoroutineDispatcher
-import org.hamcrest.Matchers
-import org.junit.Ignore
+import org.hamcrest.Matchers.allOf
 import org.junit.Rule
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
-import org.oppia.app.parser.RichTextViewMatcher.Companion.containsRichText
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.atPosition
 import org.oppia.app.topic.TopicActivity
 import org.oppia.app.topic.TopicTab
-import org.oppia.app.topic.conceptcard.ConceptCardFragment
-import org.oppia.domain.topic.TEST_TOPIC_ID_0
+import org.oppia.app.utility.EspressoTestsMatchers.withDrawable
+import org.oppia.domain.topic.FRACTIONS_TOPIC_ID
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
 import javax.inject.Singleton
+import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.hasItemCount
+import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
 
 /** Tests for [TopicReviewFragment]. */
 @RunWith(AndroidJUnit4::class)
 class TopicReviewFragmentTest {
+  private val subtopicThumbnail = R.drawable.topic_fractions_01
+  private val internalProfileId = 0
 
   @get:Rule
   var topicActivityTestRule: ActivityTestRule<TopicActivity> = ActivityTestRule(
@@ -46,75 +47,123 @@
   )
 
   @Test
-  fun testTopicReviewFragment_loadFragment_displayReviewSkills_isSuccessful() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+  fun testTopicReviewFragment_loadFragment_displayReviewTopics_isSuccessful() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
-        Matchers.allOf(
+        allOf(
           withText(TopicTab.getTabForPosition(3).name),
-          ViewMatchers.isDescendantOfA(withId(R.id.topic_tabs_container))
+          isDescendantOfA(withId(R.id.topic_tabs_container))
         )
       ).perform(click())
-      onView(atPosition(R.id.review_skill_recycler_view, 0))
-        .check(matches(hasDescendant(withId(R.id.skill_name))))
+      onView(atPosition(R.id.review_recycler_view, 0))
+        .check(matches(hasDescendant(withId(R.id.subtopic_title))))
     }
   }
 
   @Test
-  fun testTopicReviewFragment_loadFragment_selectReviewSkill_opensReviewActivity() {
+  fun testTopicReviewFragment_loadFragment_selectReviewTopics_opensReviewActivity() {
     topicActivityTestRule.launchActivity(
       TopicActivity.createTopicActivityIntent(
         ApplicationProvider.getApplicationContext(),
-        TEST_TOPIC_ID_0
+        internalProfileId,
+        FRACTIONS_TOPIC_ID
       )
     )
     onView(
-      Matchers.allOf(
-        withText(TopicTab.getTabForPosition(3).name),
-        ViewMatchers.isDescendantOfA(withId(R.id.topic_tabs_container))
-      )
-    ).perform(click())
-    onView(atPosition(R.id.review_skill_recycler_view, 0)).perform(click())
-    val conceptCardFragment: ConceptCardFragment? = topicActivityTestRule.activity.supportFragmentManager
-      .findFragmentByTag(TopicActivity.TAG_CONCEPT_CARD_DIALOG) as ConceptCardFragment
-    assertThat(conceptCardFragment).isNotNull()
+      allOf(
+        withText(TopicTab.getTabForPosition(3).name),
+        isDescendantOfA(withId(R.id.topic_tabs_container))
+      )
+    ).perform(click())
+    onView(atPosition(R.id.review_recycler_view, 0)).perform(click())
+  }
+
+  @Test
+  fun testTopicReviewFragment_loadFragment_selectReviewTopics_reviewCardDisplaysCorrectExplanation() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
+      onView(
+        allOf(
+          withText(TopicTab.getTabForPosition(3).name),
+          isDescendantOfA(withId(R.id.topic_tabs_container))
+        )
+      ).perform(click())
+      onView(atPosition(R.id.review_recycler_view, 0)).perform(click())
+      onView(withId(R.id.review_card_explanation_text)).check(matches(withText("Description of subtopic is here.")))
+    }
+  }
+
+  @Test
+  fun testTopicReviewFragment_loadFragment_checkTopicThumbnail_isCorrect() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
+      onView(
+        allOf(
+          withText(TopicTab.getTabForPosition(3).name),
+          isDescendantOfA(withId(R.id.topic_tabs_container))
+        )
+      ).perform(click())
+      onView(withId(R.id.review_recycler_view)).check(matches(hasDescendant(withDrawable(subtopicThumbnail))))
+    }
+  }
+
+  @Test
+  fun testTopicReviewFragment_loadFragment_checkSpanCoun_isTwo() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
+      onView(
+        allOf(
+          withText(TopicTab.getTabForPosition(3).name),
+          isDescendantOfA(withId(R.id.topic_tabs_container))
+        )
+      ).perform(click())
+      onView(withId(R.id.review_recycler_view)).check(hasItemCount(2))
+    }
+  }
+
+  @Test
+  fun testTopicPracticeFragment_loadFragment_configurationChange_reviewSubtopicsAreDisplayed() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(
+        allOf(
+          withText(TopicTab.getTabForPosition(3).name),
+          isDescendantOfA(withId(R.id.topic_tabs_container))
+        )
+      ).perform(click())
+      onView(atPosition(R.id.review_recycler_view, 0))
+        .check(matches(hasDescendant(withId(R.id.subtopic_title))))
+    }
   }
 
   @Test
-  fun testTopicReviewFragment_loadFragment_selectReviewSkill_conceptCardDisplaysCorrectExplanation() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+  fun testTopicReviewFragment_loadFragment_configurationChange_checkTopicThumbnail_isCorrect() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
+      onView(isRoot()).perform(orientationLandscape())
       onView(
-        Matchers.allOf(
+        allOf(
           withText(TopicTab.getTabForPosition(3).name),
-          ViewMatchers.isDescendantOfA(withId(R.id.topic_tabs_container))
+          isDescendantOfA(withId(R.id.topic_tabs_container))
         )
       ).perform(click())
-      onView(atPosition(R.id.review_skill_recycler_view, 1)).perform(click())
-      onView(withId(R.id.concept_card_explanation_text)).check(matches(withText("Explanation with rich text.")))
-      onView(withId(R.id.concept_card_explanation_text)).check(matches(containsRichText()))
+      onView(withId(R.id.review_recycler_view)).check(matches(hasDescendant(withDrawable(subtopicThumbnail))))
     }
   }
 
   @Test
-  @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
-  fun testTopicTrainFragment_loadFragment_configurationChange_skillsAreDisplayed() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+  fun testTopicReviewFragment_loadFragment_configurationChange_checkSpanCount_isThree() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
+      onView(isRoot()).perform(orientationLandscape())
       onView(
-        Matchers.allOf(
+        allOf(
           withText(TopicTab.getTabForPosition(3).name),
-          ViewMatchers.isDescendantOfA(withId(R.id.topic_tabs_container))
+          isDescendantOfA(withId(R.id.topic_tabs_container))
         )
       ).perform(click())
-      it.onActivity { activity ->
-        activity.requestedOrientation = Configuration.ORIENTATION_LANDSCAPE
-      }
-      it.recreate()
-      onView(atPosition(R.id.review_skill_recycler_view, 0))
-        .check(matches(hasDescendant(withId(R.id.skill_name))))
+      onView(withId(R.id.review_recycler_view)).check(hasItemCount(3))
     }
   }
 
-  private fun launchTopicActivityIntent(topicId: String): ActivityScenario<TopicActivity> {
-    val intent = TopicActivity.createTopicActivityIntent(ApplicationProvider.getApplicationContext(), topicId)
+  private fun launchTopicActivityIntent(internalProfileId: Int, topicId: String): ActivityScenario<TopicActivity> {
+    val intent =
+      TopicActivity.createTopicActivityIntent(ApplicationProvider.getApplicationContext(), internalProfileId, topicId)
     return ActivityScenario.launch(intent)
   }
 
Index: app/src/main/java/org/oppia/app/profileprogress/ProfileProgressItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfileProgressItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfileProgressItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.profileprogress
+
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** Super-class for generalising different views for the recyclerView in [ProfileProgressFragment] */
+abstract class ProfileProgressItemViewModel : ObservableViewModel()
Index: app/src/main/java/org/oppia/app/profileprogress/ProfilePictureEditDialogFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfilePictureEditDialogFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfilePictureEditDialogFragment.kt	(date 1584626399000)
@@ -0,0 +1,49 @@
+package org.oppia.app.profileprogress
+
+import android.app.Dialog
+import android.content.Context
+import android.os.Bundle
+import android.view.View
+import android.widget.TextView
+import androidx.appcompat.app.AlertDialog
+import androidx.appcompat.view.ContextThemeWrapper
+import androidx.fragment.app.DialogFragment
+import org.oppia.app.R
+
+/** [DialogFragment] that gives option to either view the profile picture or change the current profile picture. */
+class ProfilePictureEditDialogFragment : DialogFragment() {
+  companion object {
+    /**
+     * This function is responsible for displaying content in DialogFragment.
+     *
+     * @return [ProfilePictureEditDialogFragment]: DialogFragment
+     */
+    fun newInstance(): ProfilePictureEditDialogFragment {
+      return ProfilePictureEditDialogFragment()
+    }
+  }
+
+  override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {
+    val view = View.inflate(context, R.layout.profile_picture_edit_dialog, /* root= */ null)
+    val viewProfilePicture = view.findViewById<TextView>(R.id.profile_picture_edit_dialog_view_picture)
+    val chooseFromGallery = view.findViewById<TextView>(R.id.profile_picture_edit_dialog_change_picture)
+
+    val profilePictureEditDialogInterface: ProfilePictureDialogInterface = activity as ProfilePictureDialogInterface
+
+    viewProfilePicture.setOnClickListener {
+      profilePictureEditDialogInterface.showProfilePicture()
+      dialog?.dismiss()
+    }
+    chooseFromGallery.setOnClickListener {
+      profilePictureEditDialogInterface.showGalleryForProfilePicture()
+      dialog?.dismiss()
+    }
+    return AlertDialog.Builder(ContextThemeWrapper(activity as Context, R.style.OppiaDialogFragmentTheme))
+      .setTitle(R.string.profile_progress_edit_dialog_title)
+      .setView(view)
+      .setNegativeButton(R.string.profile_picture_edit_alert_dialog_cancel_button) { _, _ ->
+        dismiss()
+      }
+      .create()
+  }
+}
Index: app/src/main/java/org/oppia/app/activity/ActivityComponent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/activity/ActivityComponent.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/activity/ActivityComponent.kt	(date 1584626399000)
@@ -3,36 +3,51 @@
 import androidx.appcompat.app.AppCompatActivity
 import dagger.BindsInstance
 import dagger.Subcomponent
+import org.oppia.app.administratorcontrols.AdministratorControlsActivity
+import org.oppia.app.administratorcontrols.appversion.AppVersionActivity
+import org.oppia.app.completedstorylist.CompletedStoryListActivity
 import org.oppia.app.fragment.FragmentComponent
 import org.oppia.app.help.HelpActivity
+import org.oppia.app.help.faq.FAQActivity
 import org.oppia.app.home.HomeActivity
-import org.oppia.app.home.continueplaying.ContinuePlayingActivity
+import org.oppia.app.home.recentlyplayed.RecentlyPlayedActivity
 import org.oppia.app.mydownloads.MyDownloadsActivity
+import org.oppia.app.onboarding.OnboardingActivity
+import org.oppia.app.ongoingtopiclist.OngoingTopicListActivity
+import org.oppia.app.options.AppLanguageActivity
+import org.oppia.app.options.DefaultAudioActivity
+import org.oppia.app.options.OptionsActivity
+import org.oppia.app.options.StoryTextSizeActivity
 import org.oppia.app.player.exploration.ExplorationActivity
 import org.oppia.app.profile.AddProfileActivity
 import org.oppia.app.profile.AdminAuthActivity
 import org.oppia.app.profile.AdminPinActivity
 import org.oppia.app.profile.PinPasswordActivity
 import org.oppia.app.profile.ProfileActivity
+import org.oppia.app.profileprogress.ProfilePictureActivity
+import org.oppia.app.profileprogress.ProfileProgressActivity
 import org.oppia.app.settings.profile.ProfileEditActivity
 import org.oppia.app.settings.profile.ProfileListActivity
 import org.oppia.app.settings.profile.ProfileRenameActivity
 import org.oppia.app.settings.profile.ProfileResetPinActivity
+import org.oppia.app.splash.SplashActivity
 import org.oppia.app.story.StoryActivity
-import org.oppia.app.story.testing.StoryFragmentTestActivity
 import org.oppia.app.testing.AudioFragmentTestActivity
 import org.oppia.app.testing.BindableAdapterTestActivity
 import org.oppia.app.testing.ConceptCardFragmentTestActivity
 import org.oppia.app.testing.ContentCardTestActivity
-import org.oppia.app.testing.ContinuePlayingFragmentTestActivity
 import org.oppia.app.testing.ExplorationInjectionActivity
 import org.oppia.app.testing.ExplorationTestActivity
 import org.oppia.app.testing.HtmlParserTestActivity
 import org.oppia.app.testing.NavigationDrawerTestActivity
+import org.oppia.app.testing.RecentlyPlayedFragmentTestActivity
+import org.oppia.app.testing.StoryFragmentTestActivity
 import org.oppia.app.testing.TopicTestActivity
 import org.oppia.app.testing.TopicTestActivityForStory
 import org.oppia.app.topic.TopicActivity
 import org.oppia.app.topic.questionplayer.QuestionPlayerActivity
+import org.oppia.app.topic.reviewcard.ReviewCardActivity
+import org.oppia.app.walkthrough.WalkthroughActivity
 import javax.inject.Provider
 
 /** Root subcomponent for all activities. */
@@ -51,31 +66,46 @@
 
   fun inject(addProfileActivity: AddProfileActivity)
   fun inject(adminAuthActivity: AdminAuthActivity)
+  fun inject(administratorControlsActivity: AdministratorControlsActivity)
   fun inject(adminPinActivity: AdminPinActivity)
+  fun inject(appLanguageActivity: AppLanguageActivity)
+  fun inject(appVersionActivity: AppVersionActivity)
   fun inject(audioFragmentTestActivity: AudioFragmentTestActivity)
   fun inject(bindableAdapterTestActivity: BindableAdapterTestActivity)
+  fun inject(completedStoryListActivity: CompletedStoryListActivity)
   fun inject(conceptCardFragmentTestActivity: ConceptCardFragmentTestActivity)
   fun inject(contentCardTestActivity: ContentCardTestActivity)
-  fun inject(continuePlayingActivity: ContinuePlayingActivity)
-  fun inject(continuePlayingFragmentTestActivity: ContinuePlayingFragmentTestActivity)
+  fun inject(defaultAudioActivity: DefaultAudioActivity)
   fun inject(explorationActivity: ExplorationActivity)
   fun inject(explorationInjectionActivity: ExplorationInjectionActivity)
   fun inject(explorationTestActivity: ExplorationTestActivity)
+  fun inject(faqActivity: FAQActivity)
   fun inject(helpActivity: HelpActivity)
   fun inject(homeActivity: HomeActivity)
   fun inject(htmlParserTestActivity: HtmlParserTestActivity)
   fun inject(myDownloadsActivity: MyDownloadsActivity)
   fun inject(navigationDrawerTestActivity: NavigationDrawerTestActivity)
+  fun inject(onboardingActivity: OnboardingActivity)
+  fun inject(ongoingTopicListActivity: OngoingTopicListActivity)
+  fun inject(optionActivity: OptionsActivity)
   fun inject(pinPasswordActivity: PinPasswordActivity)
   fun inject(profileActivity: ProfileActivity)
   fun inject(questionPlayerActivity: QuestionPlayerActivity)
   fun inject(profileEditActivity: ProfileEditActivity)
   fun inject(profileListActivity: ProfileListActivity)
+  fun inject(profilePictureActivity: ProfilePictureActivity)
+  fun inject(profileProgressActivity: ProfileProgressActivity)
   fun inject(profileRenameActivity: ProfileRenameActivity)
   fun inject(profileResetPinActivity: ProfileResetPinActivity)
+  fun inject(recentlyPlayedActivity: RecentlyPlayedActivity)
+  fun inject(recentlyPlayedFragmentTestActivity: RecentlyPlayedFragmentTestActivity)
+  fun inject(reviewCardActivity: ReviewCardActivity)
+  fun inject(splashActivity: SplashActivity)
   fun inject(storyActivity: StoryActivity)
+  fun inject(storyTextSizeActivity: StoryTextSizeActivity)
   fun inject(topicActivity: TopicActivity)
   fun inject(topicTestActivity: TopicTestActivity)
   fun inject(topicTestActivityForStory: TopicTestActivityForStory)
   fun inject(storyFragmentTestActivity: StoryFragmentTestActivity)
+  fun inject(walkthroughActivity: WalkthroughActivity)
 }
Index: app/src/main/java/org/oppia/app/profileprogress/ProfileProgressFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfileProgressFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfileProgressFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,82 @@
+package org.oppia.app.profileprogress
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import org.oppia.app.databinding.ProfileProgressFragmentBinding
+import org.oppia.app.databinding.ProfileProgressHeaderBinding
+import org.oppia.app.databinding.ProfileProgressRecentlyPlayedStoryCardBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.viewmodel.ViewModelProvider
+import javax.inject.Inject
+
+/** The presenter for [ProfileProgressFragment]. */
+@FragmentScope
+class ProfileProgressFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val viewModelProvider: ViewModelProvider<ProfileProgressViewModel>
+) {
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?, internalProfileId: Int): View? {
+    val binding = ProfileProgressFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    // NB: Both the view model and lifecycle owner must be set in order to correctly bind LiveData elements to
+    // data-bound view models.
+    binding.lifecycleOwner = fragment
+
+    binding.profileProgressToolbar.setNavigationOnClickListener {
+      (activity as ProfileProgressActivity).finish()
+    }
+    binding.profileProgressList.apply {
+      layoutManager = LinearLayoutManager(activity)
+      adapter = createRecyclerViewAdapter()
+    }
+
+    val viewModel = getProfileProgressViewModel()
+    viewModel.setProfileId(internalProfileId)
+
+    // NB: Both the view model and lifecycle owner must be set in order to correctly bind LiveData elements to
+    // data-bound view models.
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.viewModel = viewModel
+    }
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<ProfileProgressItemViewModel> {
+    return BindableAdapter.MultiTypeBuilder
+      .newBuilder<ProfileProgressItemViewModel, ViewType> { viewModel ->
+        when (viewModel) {
+          is ProfileProgressHeaderViewModel -> ViewType.VIEW_TYPE_HEADER
+          is RecentlyPlayedStorySummaryViewModel -> ViewType.VIEW_TYPE_RECENTLY_PLAYED_STORY
+          else -> throw IllegalArgumentException("Encountered unexpected view model: $viewModel")
+        }
+      }
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_HEADER,
+        inflateDataBinding = ProfileProgressHeaderBinding::inflate,
+        setViewModel = ProfileProgressHeaderBinding::setViewModel,
+        transformViewModel = { it as ProfileProgressHeaderViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_RECENTLY_PLAYED_STORY,
+        inflateDataBinding = ProfileProgressRecentlyPlayedStoryCardBinding::inflate,
+        setViewModel = ProfileProgressRecentlyPlayedStoryCardBinding::setViewModel,
+        transformViewModel = { it as RecentlyPlayedStorySummaryViewModel }
+      )
+      .build()
+  }
+
+  private fun getProfileProgressViewModel(): ProfileProgressViewModel {
+    return viewModelProvider.getForFragment(fragment, ProfileProgressViewModel::class.java)
+  }
+
+  private enum class ViewType {
+    VIEW_TYPE_HEADER,
+    VIEW_TYPE_RECENTLY_PLAYED_STORY
+  }
+}
Index: app/src/main/java/org/oppia/app/profileprogress/RouteToOngoingTopicListListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/RouteToOngoingTopicListListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/RouteToOngoingTopicListListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.profileprogress
+
+/** Listener for when an activity should route to [OngoingTopicListActivity]. */
+interface RouteToOngoingTopicListListener {
+  fun routeToOngoingTopic()
+}
Index: app/src/main/java/org/oppia/app/profileprogress/RouteToCompletedStoryListListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/RouteToCompletedStoryListListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/RouteToCompletedStoryListListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.profileprogress
+
+/** Listener for when an activity should route to [CompletedStoryListActivity]. */
+interface RouteToCompletedStoryListListener {
+  fun routeToCompletedStory()
+}
Index: app/src/main/java/org/oppia/app/profileprogress/ProfileProgressActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfileProgressActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfileProgressActivity.kt	(date 1584626399000)
@@ -0,0 +1,65 @@
+package org.oppia.app.profileprogress
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.completedstorylist.CompletedStoryListActivity
+import org.oppia.app.home.RouteToRecentlyPlayedListener
+import org.oppia.app.home.recentlyplayed.RecentlyPlayedActivity
+import org.oppia.app.ongoingtopiclist.OngoingTopicListActivity
+import javax.inject.Inject
+
+/** Activity to display profile progress. */
+class ProfileProgressActivity : InjectableAppCompatActivity(), RouteToCompletedStoryListListener,
+  RouteToOngoingTopicListListener, RouteToRecentlyPlayedListener, ProfilePictureClickListener, ProfilePictureDialogInterface {
+
+  @Inject lateinit var profileProgressActivityPresenter: ProfileProgressActivityPresenter
+  private var internalProfileId = -1
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    internalProfileId = intent.getIntExtra(PROFILE_PROGRESS_ACTIVITY_PROFILE_ID_KEY, -1)
+    profileProgressActivityPresenter.handleOnCreate(internalProfileId)
+  }
+
+  override fun routeToRecentlyPlayed() {
+    startActivity(RecentlyPlayedActivity.createRecentlyPlayedActivityIntent(this, internalProfileId))
+  }
+
+  override fun routeToCompletedStory() {
+    startActivity(CompletedStoryListActivity.createCompletedStoryListActivityIntent(this, internalProfileId))
+  }
+
+  override fun routeToOngoingTopic() {
+    startActivity(OngoingTopicListActivity.createOngoingTopicListActivityIntent(this, internalProfileId))
+  }
+
+  companion object {
+    internal const val PROFILE_PROGRESS_ACTIVITY_PROFILE_ID_KEY = "ProfileProgressActivity.internal_profile_id"
+
+    fun createProfileProgressActivityIntent(context: Context, internalProfileId: Int): Intent {
+      val intent = Intent(context, ProfileProgressActivity::class.java)
+      intent.putExtra(PROFILE_PROGRESS_ACTIVITY_PROFILE_ID_KEY, internalProfileId)
+      return intent
+    }
+  }
+
+  override fun onProfilePictureClicked() {
+    profileProgressActivityPresenter.showPictureEditDialog()
+  }
+
+  override fun showProfilePicture() {
+    startActivity(ProfilePictureActivity.createProfilePictureActivityIntent(this, internalProfileId))
+  }
+
+  override fun showGalleryForProfilePicture() {
+    profileProgressActivityPresenter.openGalleryIntent()
+  }
+
+  override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+    super.onActivityResult(requestCode, resultCode, data)
+    profileProgressActivityPresenter.handleOnActivityResult(data)
+  }
+}
Index: app/src/Test/java/org/oppia/app/topic/conceptcard/ConceptCardFragmentTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/topic/conceptcard/ConceptCardFragmentTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/topic/conceptcard/ConceptCardFragmentTest.kt	(date 1584626399000)
@@ -8,6 +8,7 @@
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.action.ViewActions.click
 import androidx.test.espresso.assertion.ViewAssertions.matches
+import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withParent
 import androidx.test.espresso.matcher.ViewMatchers.withText
@@ -27,6 +28,7 @@
 import org.oppia.app.R
 import org.oppia.app.parser.RichTextViewMatcher.Companion.containsRichText
 import org.oppia.app.testing.ConceptCardFragmentTestActivity
+import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
 import javax.inject.Singleton
@@ -59,6 +61,26 @@
     ).check(matches(withText(R.string.concept_card_toolbar_title)))
   }
 
+  @Test
+  fun testConceptCardFragment_configurationChange_toolbarTitle_isDisplayedSuccessfully() {
+    onView(isRoot()).perform(orientationLandscape())
+    onView(withId(R.id.open_dialog_0)).perform(click())
+    onView(
+      allOf(
+        instanceOf(TextView::class.java),
+        withParent(withId(R.id.concept_card_toolbar))
+      )
+    ).check(matches(withText(R.string.concept_card_toolbar_title)))
+  }
+
+  @Test
+  fun testConceptCardFragment_configurationChange_conceptCardIsDisplayedCorrectly() {
+    onView(isRoot()).perform(orientationLandscape())
+    onView(withId(R.id.open_dialog_0)).perform(click())
+    onView(withId(R.id.concept_card_explanation_text)).check(matches(withText("Hello. Welcome to Oppia.")))
+    onView(withId(R.id.concept_card_explanation_text)).check(matches(not(containsRichText())))
+  }
+
   @Test
   fun testConceptCardFragment_openDialogFragment0_checkSkillAndExplanationAreDisplayedWithoutRichText() {
     onView(withId(R.id.open_dialog_0)).perform(click())
Index: app/src/main/java/org/oppia/app/profileprogress/ProfileProgressHeaderViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfileProgressHeaderViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfileProgressHeaderViewModel.kt	(date 1584626399000)
@@ -0,0 +1,46 @@
+package org.oppia.app.profileprogress
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.databinding.ObservableField
+import org.oppia.app.home.RouteToRecentlyPlayedListener
+import org.oppia.app.model.Profile
+
+/** Header [ViewModel] for the recycler view in [ProfileProgressFragment]. */
+class ProfileProgressHeaderViewModel(activity: AppCompatActivity) : ProfileProgressItemViewModel() {
+  private val routeToCompletedStoryListListener = activity as RouteToCompletedStoryListListener
+  private val routeToOngoingTopicListListener = activity as RouteToOngoingTopicListListener
+  private val routeToRecentlyPlayedActivity = activity as RouteToRecentlyPlayedListener
+  private val profilePictureEditListener = activity as ProfilePictureClickListener
+
+  val profile = ObservableField<Profile>(Profile.getDefaultInstance())
+  val ongoingTopicCount = ObservableField(0)
+  val completedStoryCount = ObservableField(0)
+
+  fun setProfile(currentProfile: Profile) {
+    profile.set(currentProfile)
+  }
+
+  fun setOngoingTopicCount(topicCount: Int) {
+    ongoingTopicCount.set(topicCount)
+  }
+
+  fun setCompletedStoryCount(storyCount: Int) {
+    completedStoryCount.set(storyCount)
+  }
+
+  fun clickOnCompletedStoryCount() {
+    routeToCompletedStoryListListener.routeToCompletedStory()
+  }
+
+  fun clickOnOngoingTopicCount() {
+    routeToOngoingTopicListListener.routeToOngoingTopic()
+  }
+
+  fun clickOnViewAll() {
+    routeToRecentlyPlayedActivity.routeToRecentlyPlayed()
+  }
+
+  fun clickOnProfilePicture() {
+    profilePictureEditListener.onProfilePictureClicked()
+  }
+}
Index: app/src/Test/java/org/oppia/app/topic/TopicFragmentTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/topic/TopicFragmentTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/topic/TopicFragmentTest.kt	(date 1584626399000)
@@ -37,35 +37,37 @@
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.atPositionOnView
 import org.oppia.app.utility.EspressoTestsMatchers.matchCurrentTabTitle
 import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
-import org.oppia.domain.topic.TEST_TOPIC_ID_0
+import org.oppia.domain.topic.FRACTIONS_TOPIC_ID
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
 import javax.inject.Singleton
 
-private const val TOPIC_NAME = "First Test Topic"
+private const val TOPIC_NAME = "Fractions"
 
 /** Tests for [TopicFragment]. */
 @RunWith(AndroidJUnit4::class)
 class TopicFragmentTest {
 
+  private val internalProfileId = 0
+
   @Test
   fun testTopicFragment_toolbarTitle_isDisplayedSuccessfully() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(allOf(instanceOf(TextView::class.java), withParent(withId(R.id.topic_toolbar))))
-        .check(matches(withText("Topic: First Test Topic")))
+        .check(matches(withText("Topic: Fractions")))
     }
   }
 
   @Test
   fun testTopicFragment_showsTopicFragmentWithMultipleTabs() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(withId(R.id.topic_tabs_container)).perform(click()).check(matches(isDisplayed()))
     }
   }
 
   @Test
   fun testTopicFragment_swipePage_hasSwipedPage() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(withId(R.id.topic_tabs_viewpager)).check(matches(isDisplayed()))
       onView(withId(R.id.topic_tabs_viewpager)).perform(swipeLeft())
       onView(withId(R.id.topic_tabs_container)).check(matches(matchCurrentTabTitle(TopicTab.getTabForPosition(1).name)))
@@ -74,21 +76,21 @@
 
   @Test
   fun testTopicFragment_infoTopicTab_isDisplayedInTabLayout() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(withText(TopicTab.getTabForPosition(0).name)).check(matches(isDescendantOfA(withId(R.id.topic_tabs_container))))
     }
   }
 
   @Test
   fun testTopicFragment_defaultTabIsInfo_isSuccessful() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(withId(R.id.topic_tabs_container)).check(matches(matchCurrentTabTitle(TopicTab.getTabForPosition(0).name)))
     }
   }
 
   @Test
   fun testTopicFragment_defaultTabIsInfo_showsMatchingContent() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(withId(R.id.topic_name_text_view)).check(
         matches(
           withText(
@@ -101,7 +103,7 @@
 
   @Test
   fun testTopicFragment_clickOnPlayTab_showsPlayTabSelected() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(1).name),
@@ -114,7 +116,7 @@
 
   @Test
   fun testTopicFragment_clickOnPlayTab_showsPlayTabWithContentMatched() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(1).name),
@@ -131,13 +133,13 @@
           R.id.story_summary_recycler_view,
           1
         )
-      ).check(matches(ViewMatchers.hasDescendant(withText(containsString("First Story")))))
+      ).check(matches(ViewMatchers.hasDescendant(withText(containsString("Matthew Goes to the Bakery")))))
     }
   }
 
   @Test
-  fun testTopicFragment_clickOnTrainTab_showsTrainTabSelected() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+  fun testTopicFragment_clickOnPracticeTab_showsPracticeTabSelected() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(2).name),
@@ -149,8 +151,8 @@
   }
 
   @Test
-  fun testTopicFragment_clickOnTrainTab_showsTrainTabWithContentMatched() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+  fun testTopicFragment_clickOnPracticeTab_showsPracticeTabWithContentMatched() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(2).name),
@@ -163,7 +165,7 @@
 
   @Test
   fun testTopicFragment_clickOnReviewTab_showsReviewTabSelected() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(3).name),
@@ -176,18 +178,18 @@
 
   @Test
   fun testTopicFragment_clickOnReviewTab_showsReviewTabWithContentMatched() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(3).name),
           isDescendantOfA(withId(R.id.topic_tabs_container))
         )
       ).perform(click())
-      onView(atPositionOnView(R.id.review_skill_recycler_view, 0, R.id.skill_name)).check(
+      onView(atPositionOnView(R.id.review_recycler_view, 0, R.id.subtopic_title)).check(
         matches(
           withText(
             containsString(
-              "An important skill"
+              "What is a Fraction?"
             )
           )
         )
@@ -197,7 +199,7 @@
 
   @Test
   fun testTopicFragment_clickOnReviewTab_thenInfoTab_showsInfoTab() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(3).name),
@@ -222,7 +224,7 @@
 
   @Test
   fun testTopicFragment_clickOnReviewTab_thenInfoTab_showsInfoTabWithContentMatched() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(3).name),
@@ -248,7 +250,7 @@
   @Test
   @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
   fun testTopicFragment_clickOnPlayTab_configurationChange_showsSameTabAndItsContent() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(1).name),
@@ -279,8 +281,8 @@
 
   @Test
   @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
-  fun testTopicFragment_clickOnTrainTab_configurationChange_showsSameTabAndItsContent() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+  fun testTopicFragment_clickOnPracticeTab_configurationChange_showsSameTabAndItsContent() {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(2).name),
@@ -303,7 +305,7 @@
   @Test
   @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
   fun testTopicFragment_clickOnReviewTab_configurationChange_showsSameTabAndItsContent() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(
         allOf(
           withText(TopicTab.getTabForPosition(3).name),
@@ -319,15 +321,15 @@
         )
       )
       onView(
-        atPositionOnView(R.id.review_skill_recycler_view, 0, R.id.skill_name)
-      ).check(matches(withText(containsString("An important skill"))))
+        atPositionOnView(R.id.review_recycler_view, 0, R.id.subtopic_title)
+      ).check(matches(withText(containsString("What is a Fraction?"))))
     }
   }
 
   @Test
   @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
   fun testTopicFragment_configurationChange_showsDefaultTabAndItsContent() {
-    launchTopicActivityIntent(TEST_TOPIC_ID_0).use {
+    launchTopicActivityIntent(internalProfileId, FRACTIONS_TOPIC_ID).use {
       onView(isRoot()).perform(orientationLandscape())
       onView(withId(R.id.topic_tabs_container)).check(
         matches(
@@ -346,8 +348,9 @@
     }
   }
 
-  private fun launchTopicActivityIntent(topicId: String): ActivityScenario<TopicActivity> {
-    val intent = TopicActivity.createTopicActivityIntent(ApplicationProvider.getApplicationContext(), topicId)
+  private fun launchTopicActivityIntent(internalProfileId: Int, topicId: String): ActivityScenario<TopicActivity> {
+    val intent =
+      TopicActivity.createTopicActivityIntent(ApplicationProvider.getApplicationContext(), internalProfileId, topicId)
     return launch(intent)
   }
 
Index: app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,76 @@
+package org.oppia.app.profileprogress
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.databinding.DataBindingUtil
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Observer
+import androidx.lifecycle.Transformations
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.databinding.ProfilePictureActivityBinding
+import org.oppia.app.model.Profile
+import org.oppia.app.model.ProfileAvatar
+import org.oppia.app.model.ProfileId
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The presenter for [ProfilePictureActivity]. */
+@ActivityScope
+class ProfilePictureActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val profileManagementController: ProfileManagementController,
+  private val logger: Logger
+) {
+  private lateinit var profilePictureActivityViewModel: ProfilePictureActivityViewModel
+  private lateinit var profileId: ProfileId
+
+  fun handleOnCreate(internalProfileId: Int) {
+    val binding = DataBindingUtil.setContentView<ProfilePictureActivityBinding>(activity, R.layout.profile_picture_activity)
+    profilePictureActivityViewModel = ProfilePictureActivityViewModel()
+
+    binding.apply {
+      viewModel = profilePictureActivityViewModel
+      presenter = this@ProfilePictureActivityPresenter
+      lifecycleOwner = activity
+    }
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+
+    subscribeToProfileLiveData()
+  }
+
+  private val profileLiveData: LiveData<Profile> by lazy {
+    getProfileData()
+  }
+
+  private fun getProfileData(): LiveData<Profile> {
+    return Transformations.map(
+      profileManagementController.getProfile(profileId),
+      ::processGetProfileResult
+    )
+  }
+
+  private fun subscribeToProfileLiveData() {
+    profileLiveData.observe(activity, Observer<Profile> { result ->
+      setProfileAvatar(result.avatar)
+    })
+  }
+
+  private fun processGetProfileResult(profileResult: AsyncResult<Profile>): Profile {
+    if (profileResult.isFailure()) {
+      logger.e(
+        "ProfilePictureActivity",
+        "Failed to retrieve profile",
+        profileResult.getErrorOrNull()!!
+      )
+    }
+    return profileResult.getOrDefault(Profile.getDefaultInstance())
+  }
+
+  private fun setProfileAvatar(avatar: ProfileAvatar) {
+    if (::profilePictureActivityViewModel.isInitialized) {
+      profilePictureActivityViewModel.profileAvatar.set(avatar)
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/profileprogress/ProfileProgressFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfileProgressFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfileProgressFragment.kt	(date 1584626399000)
@@ -0,0 +1,38 @@
+package org.oppia.app.profileprogress
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** Fragment that displays profile progress in the app. */
+class ProfileProgressFragment : InjectableFragment() {
+  companion object {
+    internal const val PROFILE_PROGRESS_FRAGMENT_PROFILE_ID_KEY = "ProfileProgressFragment.internal_profile_id"
+
+    /** Returns a new [ProfileProgressFragment] to display the progress for a specified profile ID. */
+    fun newInstance(internalProfileId: Int): ProfileProgressFragment {
+      val profileProgressFragment = ProfileProgressFragment()
+      val args = Bundle()
+      args.putInt(PROFILE_PROGRESS_FRAGMENT_PROFILE_ID_KEY, internalProfileId)
+      profileProgressFragment.arguments = args
+      return profileProgressFragment
+    }
+  }
+
+  @Inject lateinit var profileProgressFragmentPresenter: ProfileProgressFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, ProfileProgressFragment: Bundle?): View? {
+    val args = checkNotNull(arguments) { "Expected arguments to be passed to ProfileProgressFragment" }
+    val internalProfileId = args.getInt(PROFILE_PROGRESS_FRAGMENT_PROFILE_ID_KEY, -1)
+    return profileProgressFragmentPresenter.handleCreateView(inflater, container, internalProfileId)
+  }
+}
Index: app/src/main/java/org/oppia/app/fragment/FragmentComponent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/fragment/FragmentComponent.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/fragment/FragmentComponent.kt	(date 1584626399000)
@@ -3,30 +3,42 @@
 import androidx.fragment.app.Fragment
 import dagger.BindsInstance
 import dagger.Subcomponent
+import org.oppia.app.administratorcontrols.AdministratorControlsFragment
+import org.oppia.app.administratorcontrols.appversion.AppVersionFragment
+import org.oppia.app.completedstorylist.CompletedStoryListFragment
 import org.oppia.app.drawer.NavigationDrawerFragment
 import org.oppia.app.help.HelpFragment
+import org.oppia.app.help.faq.FAQFragment
 import org.oppia.app.home.HomeFragment
-import org.oppia.app.home.continueplaying.ContinuePlayingFragment
+import org.oppia.app.home.recentlyplayed.RecentlyPlayedFragment
 import org.oppia.app.mydownloads.DownloadsTabFragment
 import org.oppia.app.mydownloads.MyDownloadsFragment
 import org.oppia.app.mydownloads.UpdatesTabFragment
+import org.oppia.app.onboarding.OnboardingFragment
+import org.oppia.app.ongoingtopiclist.OngoingTopicListFragment
+import org.oppia.app.options.OptionsFragment
 import org.oppia.app.player.audio.AudioFragment
 import org.oppia.app.player.exploration.ExplorationFragment
 import org.oppia.app.player.state.StateFragment
-import org.oppia.app.profile.AdminSettingsDialogFragment
 import org.oppia.app.player.state.itemviewmodel.InteractionViewModelModule
+import org.oppia.app.profile.AdminSettingsDialogFragment
 import org.oppia.app.profile.ProfileChooserFragment
 import org.oppia.app.profile.ResetPinDialogFragment
+import org.oppia.app.profileprogress.ProfileProgressFragment
 import org.oppia.app.story.StoryFragment
 import org.oppia.app.testing.BindableAdapterTestFragment
 import org.oppia.app.topic.TopicFragment
 import org.oppia.app.topic.conceptcard.ConceptCardFragment
 import org.oppia.app.topic.info.TopicInfoFragment
-import org.oppia.app.topic.play.TopicPlayFragment
+import org.oppia.app.topic.lessons.TopicLessonsFragment
+import org.oppia.app.topic.practice.TopicPracticeFragment
 import org.oppia.app.topic.questionplayer.QuestionPlayerFragment
 import org.oppia.app.topic.review.TopicReviewFragment
-import org.oppia.app.topic.train.TopicTrainFragment
+import org.oppia.app.topic.reviewcard.ReviewCardFragment
 import org.oppia.app.view.ViewComponent
+import org.oppia.app.walkthrough.end.WalkthroughFinalFragment
+import org.oppia.app.walkthrough.topiclist.WalkthroughTopicListFragment
+import org.oppia.app.walkthrough.welcome.WalkthroughWelcomeFragment
 import javax.inject.Provider
 
 /** Root subcomponent for all fragments. */
@@ -43,26 +55,38 @@
 
   fun getViewComponentBuilderProvider(): Provider<ViewComponent.Builder>
 
+  fun inject(administratorControlsFragment: AdministratorControlsFragment)
   fun inject(adminSettingsDialogFragment: AdminSettingsDialogFragment)
+  fun inject(appVersionFragment: AppVersionFragment)
   fun inject(audioFragment: AudioFragment)
   fun inject(bindableAdapterTestFragment: BindableAdapterTestFragment)
+  fun inject(completedStoryListFragment: CompletedStoryListFragment)
   fun inject(conceptCardFragment: ConceptCardFragment)
-  fun inject(continuePlayingFragment: ContinuePlayingFragment)
   fun inject(downloadsTabFragment: DownloadsTabFragment)
   fun inject(explorationFragment: ExplorationFragment)
+  fun inject(faqFragment: FAQFragment)
   fun inject(helpFragment: HelpFragment)
   fun inject(homeFragment: HomeFragment)
   fun inject(myDownloadsFragment: MyDownloadsFragment)
   fun inject(navigationDrawerFragment: NavigationDrawerFragment)
+  fun inject(onboardingFragment: OnboardingFragment)
+  fun inject(ongoingTopicListFragment: OngoingTopicListFragment)
+  fun inject(optionFragment: OptionsFragment)
   fun inject(profileChooserFragment: ProfileChooserFragment)
+  fun inject(profileProgressFragment: ProfileProgressFragment)
   fun inject(questionPlayerFragment: QuestionPlayerFragment)
+  fun inject(recentlyPlayedFragment: RecentlyPlayedFragment)
   fun inject(resetPinDialogFragment: ResetPinDialogFragment)
+  fun inject(reviewCardFragment: ReviewCardFragment)
   fun inject(stateFragment: StateFragment)
   fun inject(storyFragment: StoryFragment)
   fun inject(topicFragment: TopicFragment)
   fun inject(topicInfoFragment: TopicInfoFragment)
-  fun inject(topicPlayFragment: TopicPlayFragment)
+  fun inject(topicLessonsFragment: TopicLessonsFragment)
   fun inject(topicReviewFragment: TopicReviewFragment)
-  fun inject(topicTrainFragment: TopicTrainFragment)
+  fun inject(topicPracticeFragment: TopicPracticeFragment)
   fun inject(updatesTabFragment: UpdatesTabFragment)
+  fun inject(walkthroughFinalFragment: WalkthroughFinalFragment)
+  fun inject(walkthroughTopicListFragment: WalkthroughTopicListFragment)
+  fun inject(walkthroughWelcomeFragment: WalkthroughWelcomeFragment)
 }
Index: app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/profileprogress/ProfilePictureActivity.kt	(date 1584626399000)
@@ -0,0 +1,32 @@
+package org.oppia.app.profileprogress
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+/** Activity to display profile picture. */
+class ProfilePictureActivity : InjectableAppCompatActivity() {
+
+  @Inject
+  lateinit var profilePictureActivityPresenter: ProfilePictureActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    val internalProfileId = intent.getIntExtra(PROFILE_PICTURE_ACTIVITY_PROFILE_ID_KEY, -1)
+    profilePictureActivityPresenter.handleOnCreate(internalProfileId)
+  }
+
+  companion object {
+    internal const val PROFILE_PICTURE_ACTIVITY_PROFILE_ID_KEY =
+      "ProfilePictureActivity.internal_profile_id"
+
+    fun createProfilePictureActivityIntent(context: Context, internalProfileId: Int): Intent {
+      val intent = Intent(context, ProfilePictureActivity::class.java)
+      intent.putExtra(PROFILE_PICTURE_ACTIVITY_PROFILE_ID_KEY, internalProfileId)
+      return intent
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/help/faq/FAQFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/FAQFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/FAQFragment.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.help.faq
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** Fragment that contains FAQ in the app. */
+class FAQFragment : InjectableFragment() {
+  @Inject lateinit var faqFragmentPresenter: FAQFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return faqFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/Test/java/org/oppia/app/player/exploration/ExplorationActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/player/exploration/ExplorationActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/player/exploration/ExplorationActivityTest.kt	(date 1584626399000)
@@ -5,6 +5,7 @@
 import android.content.Intent
 import android.widget.TextView
 import androidx.test.core.app.ActivityScenario
+import androidx.test.core.app.ActivityScenario.launch
 import androidx.test.core.app.ApplicationProvider
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.Espresso.pressBack
@@ -41,6 +42,8 @@
 import org.oppia.domain.exploration.TEST_EXPLORATION_ID_30
 import org.oppia.domain.topic.FRACTIONS_EXPLORATION_ID_0
 import org.oppia.domain.topic.RATIOS_EXPLORATION_ID_0
+import org.oppia.domain.topic.TEST_STORY_ID_0
+import org.oppia.domain.topic.TEST_TOPIC_ID_0
 import org.oppia.util.networking.NetworkConnectionUtil
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
@@ -55,6 +58,8 @@
   @Inject
   lateinit var context: Context
 
+  private val internalProfileId: Int = 0
+
   @Before
   fun setUp() {
     setUpTestApplicationComponent()
@@ -68,7 +73,7 @@
   }
 
   private fun getApplicationDependencies(id: String) {
-    ActivityScenario.launch(ExplorationInjectionActivity::class.java).use {
+    launch(ExplorationInjectionActivity::class.java).use {
       it.onActivity { activity ->
         networkConnectionUtil = activity.networkConnectionUtil
         explorationDataController = activity.explorationDataController
@@ -86,7 +91,7 @@
   @Test
   fun testExploration_toolbarTitle_isDisplayedSuccessfully() {
     getApplicationDependencies(TEST_EXPLORATION_ID_30)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(TEST_EXPLORATION_ID_30)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, TEST_EXPLORATION_ID_30)).use {
       onView(allOf(instanceOf(TextView::class.java), withParent(withId(R.id.exploration_toolbar))))
         .check(matches(withText("Prototype Exploration")))
     }
@@ -96,7 +101,7 @@
   @Test
   fun testAudioWithNoVoiceover_openPrototypeExploration_checkAudioButtonIsHidden() {
     getApplicationDependencies(TEST_EXPLORATION_ID_30)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(TEST_EXPLORATION_ID_30)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, TEST_EXPLORATION_ID_30)).use {
       onView(withId(R.id.action_audio_player)).check(matches(not(isDisplayed())))
     }
     explorationDataController.stopPlayingExploration()
@@ -106,7 +111,7 @@
   fun testAudioWithNoConnection_openRatioExploration_clickAudioIcon_checkOpensNoConnectionDialog() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.NONE)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.action_audio_player)).perform(click())
       onView(withText(context.getString(R.string.audio_dialog_offline_message))).check(matches(isDisplayed()))
     }
@@ -117,7 +122,7 @@
   fun testAudioWithCellular_openRatioExploration_clickAudioIcon_checkOpensCellularAudioDialog() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.CELLULAR)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.action_audio_player)).perform(click())
       onView(withText(context.getString(R.string.cellular_data_alert_dialog_title))).check(matches(isDisplayed()))
     }
@@ -128,7 +133,7 @@
   fun testAudioWithCellular_openRatioExploration_clickAudioIcon_clickNegative_checkAudioFragmentIsHidden() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.CELLULAR)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.action_audio_player)).perform(click())
       onView(withText(context.getString(R.string.cellular_data_alert_dialog_title))).check(matches(isDisplayed()))
 
@@ -143,7 +148,7 @@
   fun testAudioWithCellular_openRatioExploration_clickAudioIcon_clickPositive_checkAudioFragmentIsVisible() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.CELLULAR)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.action_audio_player)).perform(click())
       onView(withText(context.getString(R.string.cellular_data_alert_dialog_title))).check(matches(isDisplayed()))
 
@@ -158,7 +163,7 @@
   fun testAudioWithCellular_openRatioExploration_clickCheckboxAndNegative_clickAudioIcon_checkAudioFragmentIsHiddenAndDialogIsNotDisplayed() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.CELLULAR)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.action_audio_player)).perform(click())
       onView(withText(context.getString(R.string.cellular_data_alert_dialog_title))).check(matches(isDisplayed()))
       onView(withId(R.id.cellular_data_dialog_checkbox)).perform(click())
@@ -176,7 +181,7 @@
   fun testAudioWithCellular_openRatioExploration_clickCheckboxAndPositive_clickAudioIconTwice_checkAudioFragmentIsVisibleAndDialogIsNotDisplayed() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.CELLULAR)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.action_audio_player)).perform(click())
       onView(withText(context.getString(R.string.cellular_data_alert_dialog_title))).check(matches(isDisplayed()))
       onView(withId(R.id.cellular_data_dialog_checkbox)).perform(click())
@@ -195,7 +200,7 @@
   fun testAudioWithWifi_openRatioExploration_clickAudioIcon_checkAudioFragmentHasDefaultLanguageAndAutoPlays() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.LOCAL)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.action_audio_player)).perform(click())
       onView(withId(R.id.ivPlayPauseAudio)).check(matches(isDisplayed()))
 
@@ -210,7 +215,7 @@
   fun testAudioWithWifi_openFractionsExploration_changeLanguage_clickNext_checkLanguageIsHinglish() {
     getApplicationDependencies(FRACTIONS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.LOCAL)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(FRACTIONS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, FRACTIONS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.continue_button)).perform(click())
       onView(withId(R.id.action_audio_player)).perform(click())
 
@@ -228,7 +233,7 @@
   fun testAudioWithWifi_openRatioExploration_continueToInteraction_clickAudioButton_submitAnswer_checkFeedbackAudioPlays() {
     getApplicationDependencies(RATIOS_EXPLORATION_ID_0)
     networkConnectionUtil.setCurrentConnectionStatus(NetworkConnectionUtil.ConnectionStatus.LOCAL)
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(RATIOS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, RATIOS_EXPLORATION_ID_0)).use {
       // Clicks continue until we reach the first interaction.
       onView(withId(R.id.continue_button)).perform(click())
       onView(withId(R.id.continue_button)).perform(click())
@@ -248,14 +253,14 @@
 
   @Test
   fun testExplorationActivity_loadExplorationFragment_hasDummyString() {
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(FRACTIONS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, FRACTIONS_EXPLORATION_ID_0)).use {
       onView(withId(R.id.exploration_fragment_placeholder)).check(matches(isDisplayed()))
     }
   }
 
   @Test
   fun testExplorationActivity_onBackPressed_showsStopExplorationDialog() {
-    ActivityScenario.launch<ExplorationActivity>(createExplorationActivityIntent(FRACTIONS_EXPLORATION_ID_0)).use {
+    launch<ExplorationActivity>(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, FRACTIONS_EXPLORATION_ID_0)).use {
       pressBack()
       onView(withText(R.string.stop_exploration_dialog_title)).inRoot(isDialog()).check(matches(isDisplayed()))
     }
@@ -264,7 +269,7 @@
   // TODO(#89): Check this test case too. It works in pair with below test case.
   @Test
   fun testExplorationActivity_onBackPressed_showsStopExplorationDialog_clickCancel_dismissesDialog() {
-    explorationActivityTestRule.launchActivity(createExplorationActivityIntent(FRACTIONS_EXPLORATION_ID_0))
+    explorationActivityTestRule.launchActivity(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, FRACTIONS_EXPLORATION_ID_0))
     pressBack()
     onView(withText(R.string.stop_exploration_dialog_cancel_button)).inRoot(isDialog()).perform(click())
     assertThat(explorationActivityTestRule.activity.isFinishing).isFalse()
@@ -274,15 +279,15 @@
   @Test
   @Ignore("The ExplorationActivity takes time to finish, needs to fixed in #89.")
   fun testExplorationActivity_onBackPressed_showsStopExplorationDialog_clickLeave_closesExplorationActivity() {
-    explorationActivityTestRule.launchActivity(createExplorationActivityIntent(FRACTIONS_EXPLORATION_ID_0))
+    explorationActivityTestRule.launchActivity(createExplorationActivityIntent(internalProfileId, TEST_TOPIC_ID_0, TEST_STORY_ID_0, FRACTIONS_EXPLORATION_ID_0))
     pressBack()
     onView(withText(R.string.stop_exploration_dialog_leave_button)).inRoot(isDialog()).perform(click())
     assertThat(explorationActivityTestRule.activity.isFinishing).isTrue()
   }
 
-  private fun createExplorationActivityIntent(explorationId: String): Intent {
+  private fun createExplorationActivityIntent(internalProfileId: Int, topicId: String, storyId: String, explorationId: String): Intent {
     return ExplorationActivity.createExplorationActivityIntent(
-      ApplicationProvider.getApplicationContext(), explorationId, /* topicId= */  null
+      ApplicationProvider.getApplicationContext(), internalProfileId, topicId, storyId, explorationId
     )
   }
 
Index: app/src/main/java/org/oppia/app/help/faq/FAQActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/FAQActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/FAQActivity.kt	(date 1584626399000)
@@ -0,0 +1,33 @@
+package org.oppia.app.help.faq
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.view.Menu
+import org.oppia.app.R
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+/** The FAQ page activity for placement of different FAQs. */
+class FAQActivity : InjectableAppCompatActivity() {
+
+  @Inject lateinit var faqActivityPresenter: FAQActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    faqActivityPresenter.handleOnCreate()
+  }
+
+  override fun onCreateOptionsMenu(menu: Menu?): Boolean {
+    menuInflater.inflate(R.menu.menu_faq_activity, menu)
+    return super.onCreateOptionsMenu(menu)
+  }
+
+  companion object {
+    fun createFAQActivityIntent(context: Context): Intent {
+      val intent = Intent(context, FAQActivity::class.java)
+      return intent
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/help/faq/FAQFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/FAQFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/FAQFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,83 @@
+package org.oppia.app.help.faq
+
+import android.content.res.Resources
+import android.util.DisplayMetrics
+import android.util.TypedValue
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.LinearSmoothScroller
+import androidx.recyclerview.widget.RecyclerView
+import org.oppia.app.databinding.FaqContentBinding
+import org.oppia.app.databinding.FaqFragmentBinding
+import org.oppia.app.databinding.FaqItemHeaderBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.help.faq.faqItemViewModel.FAQContentViewModel
+import org.oppia.app.help.faq.faqItemViewModel.FAQHeaderViewModel
+import org.oppia.app.help.faq.faqItemViewModel.FAQItemViewModel
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.viewmodel.ViewModelProvider
+import javax.inject.Inject
+
+/** The presenter for [FAQFragment]. */
+@FragmentScope
+class FAQFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val viewModelProvider: ViewModelProvider<FAQViewModel>
+) {
+  private lateinit var binding: FaqFragmentBinding
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    val viewModel = getFAQViewModel()
+
+    binding = FaqFragmentBinding.inflate(inflater, container, /* attachToRoot = */ false)
+
+    binding.faqFragmentRecyclerView.apply {
+      layoutManager = LinearLayoutManager(activity.applicationContext)
+      adapter = createRecyclerViewAdapter()
+    }
+
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.viewModel = viewModel
+    }
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<FAQItemViewModel> {
+    return BindableAdapter.MultiTypeBuilder
+      .newBuilder<FAQItemViewModel, ViewType> { viewModel ->
+        when (viewModel) {
+          is FAQHeaderViewModel -> ViewType.VIEW_TYPE_HEADER
+          is FAQContentViewModel -> ViewType.VIEW_TYPE_CONTENT
+          else -> throw IllegalArgumentException("Encountered unexpected view model: $viewModel")
+        }
+      }
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_HEADER,
+        inflateDataBinding = FaqItemHeaderBinding::inflate,
+        setViewModel = FaqItemHeaderBinding::setViewModel,
+        transformViewModel = { it as FAQHeaderViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_CONTENT,
+        inflateDataBinding = FaqContentBinding::inflate,
+        setViewModel = FaqContentBinding::setViewModel,
+        transformViewModel = { it as FAQContentViewModel }
+      )
+      .build()
+  }
+
+  private fun getFAQViewModel(): FAQViewModel {
+    return viewModelProvider.getForFragment(fragment, FAQViewModel::class.java)
+  }
+
+  private enum class ViewType {
+    VIEW_TYPE_HEADER,
+    VIEW_TYPE_CONTENT
+  }
+}
Index: app/src/Test/java/org/oppia/app/player/state/StateFragmentTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/player/state/StateFragmentTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/player/state/StateFragmentTest.kt	(date 1584626399000)
@@ -4,7 +4,6 @@
 import android.content.Context
 import android.content.res.Configuration
 import androidx.recyclerview.widget.RecyclerView
-import androidx.test.core.app.ActivityScenario
 import androidx.test.core.app.ActivityScenario.launch
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.action.ViewActions.click
@@ -66,7 +65,7 @@
 
   @Test
   fun testStateFragment_clickPlayExploration_explorationLoadsSuccessfully() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       intended(hasComponent(ExplorationActivity::class.java.name))
       onView(atPosition(R.id.state_recycler_view, 0)).check(matches(hasDescendant(withId(R.id.interaction_button))))
@@ -75,7 +74,7 @@
 
   @Test
   fun testStateFragment_loadExplorationTest5_submitAnswer_submitChangesToContinueButton() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       onView(
         atPositionOnView(
@@ -97,7 +96,7 @@
 
   @Test
   fun testStateFragment_loadExplorationTest5_previousAndNextButtonIsNotDisplayed() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.previous_state_image_view)).check(
         matches(
@@ -118,7 +117,7 @@
 
   @Test
   fun testStateFragment_loadExplorationTest5_submitAnswer_clickContinueButton_previousButtonIsDisplayed() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.interaction_button)).perform(click())
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.interaction_button)).perform(click())
@@ -134,7 +133,7 @@
 
   @Test
   fun testStateFragment_loadExplorationTest5_submitAnswer_clickContinueButton_clickPreviousButton_previousButtonIsHiddenAndNextButtonIsDisplayed() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.interaction_button)).perform(click())
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.interaction_button)).perform(click())
@@ -153,7 +152,7 @@
   // TODO(#257): This test case corresponds to the special test-case mentioned in #257 and discussed in #251.
   @Test
   fun testStateFragment_loadExplorationTest5_submitAnswer_clickContinueButton_submitAnswer_clickPreviousButton_clickNextButton_continueButtonIsDisplayed() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       // State 0: Welcome! - MultipleChoiceInout Interaction
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.interaction_button)).perform(click())
@@ -175,7 +174,7 @@
   @Test
   @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
   fun testStateFragment_loadExplorationTest5_submitAnswer_clickContinueButton_configurationChange_previousAndInteractionButtonIsDisplayed() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       // State 0: MultipleChoiceInput
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.interaction_button)).perform(click())
@@ -196,7 +195,7 @@
 
   @Test
   fun testStateFragment_loadExplorationTest5_continueToEndExploration_endExplorationButtonIsDisplayedInFinal() {
-    ActivityScenario.launch(HomeActivity::class.java).use {
+    launch(HomeActivity::class.java).use {
       onView(withId(R.id.play_exploration_button)).perform(click())
       // State 0: Welcome! - MultipleChoiceInout Interaction
       onView(atPositionOnView(R.id.state_recycler_view, 0, R.id.interaction_button)).perform(click())
Index: app/src/Test/java/org/oppia/app/splash/SplashActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/splash/SplashActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/splash/SplashActivityTest.kt	(date 1584626399000)
@@ -1,16 +1,45 @@
 package org.oppia.app.splash
 
+import android.app.Application
+import android.content.Context
+import android.os.Handler
+import android.os.Looper
+import androidx.test.core.app.ActivityScenario.launch
+import androidx.test.core.app.ApplicationProvider
+import androidx.test.espresso.Espresso.onIdle
+import androidx.test.espresso.IdlingRegistry
+import androidx.test.espresso.idling.CountingIdlingResource
 import androidx.test.espresso.intent.Intents
 import androidx.test.espresso.intent.Intents.intended
 import androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent
 import androidx.test.ext.junit.runners.AndroidJUnit4
 import androidx.test.rule.ActivityTestRule
+import dagger.BindsInstance
+import dagger.Component
+import dagger.Module
+import dagger.Provides
+import kotlinx.coroutines.CoroutineDispatcher
+import kotlinx.coroutines.ExperimentalCoroutinesApi
+import kotlinx.coroutines.asCoroutineDispatcher
+import kotlinx.coroutines.test.TestCoroutineDispatcher
 import org.junit.After
 import org.junit.Before
 import org.junit.Rule
 import org.junit.Test
 import org.junit.runner.RunWith
+import org.oppia.app.onboarding.OnboardingActivity
 import org.oppia.app.profile.ProfileActivity
+import org.oppia.domain.onboarding.OnboardingFlowController
+import org.oppia.util.logging.EnableConsoleLog
+import org.oppia.util.logging.EnableFileLog
+import org.oppia.util.logging.GlobalLogLevel
+import org.oppia.util.logging.LogLevel
+import org.oppia.util.threading.BackgroundDispatcher
+import org.oppia.util.threading.BlockingDispatcher
+import java.util.concurrent.AbstractExecutorService
+import java.util.concurrent.TimeUnit
+import javax.inject.Qualifier
+import javax.inject.Singleton
 
 /**
  * Tests for [SplashActivity]. For context on the activity test rule setup see:
@@ -18,6 +47,18 @@
  */
 @RunWith(AndroidJUnit4::class)
 class SplashActivityTest {
+  @Before
+  fun setUp() {
+    Intents.init()
+    IdlingRegistry.getInstance().register(MainThreadExecutor.countingResource)
+    simulateNewAppInstance()
+  }
+
+  @After
+  fun tearDown() {
+    IdlingRegistry.getInstance().unregister(MainThreadExecutor.countingResource)
+    Intents.release()
+  }
 
   // The initialTouchMode enables the activity to be launched in touch mode. The launchActivity is
   // disabled to launch Activity explicitly within each test case.
@@ -26,19 +67,140 @@
     SplashActivity::class.java, /* initialTouchMode= */ true, /* launchActivity= */ false
   )
 
-  @Before
-  fun setUp() {
-    Intents.init()
-  }
-
   @Test
-  fun testSplashActivity_initialOpen_routesToHomeActivity() {
+  fun testSplashActivity_initialOpen_routesToOnboardingActivity() {
     activityTestRule.launchActivity(null)
-    intended(hasComponent(ProfileActivity::class.java.name))
-  }
+    intended(hasComponent(OnboardingActivity::class.java.name))
+  }
+
+  @Test
+  fun testSplashActivity_secondOpen_routesToChooseProfileActivity() {
+    simulateAppAlreadyOnboarded()
+    launch(SplashActivity::class.java).use {
+      intended(hasComponent(ProfileActivity::class.java.name))
+    }
+  }
+
+  private fun simulateNewAppInstance() {
+    // Simulate a fresh app install by clearing any potential on-disk caches using an isolated onboarding flow controller.
+    createTestRootComponent()
+    onIdle()
+  }
+
+  private fun simulateAppAlreadyOnboarded() {
+    // Simulate the app was already onboarded by creating an isolated onboarding flow controller and saving the onboarding status
+    // on the system before the activity is opened.
+    createTestRootComponent().getOnboardingFlowController().markOnboardingFlowCompleted()
+    onIdle()
+  }
+
+  private fun createTestRootComponent(): TestApplicationComponent {
+    return DaggerSplashActivityTest_TestApplicationComponent.builder()
+      .setApplication(ApplicationProvider.getApplicationContext())
+      .build()
+  }
+
+  @Qualifier
+  annotation class TestDispatcher
+
+  @Module
+  class TestModule {
+    @Provides
+    @Singleton
+    fun provideContext(application: Application): Context {
+      return application
+    }
+
+    @ExperimentalCoroutinesApi
+    @Singleton
+    @Provides
+    @TestDispatcher
+    fun provideTestDispatcher(): CoroutineDispatcher {
+      return TestCoroutineDispatcher()
+    }
+
+    @Singleton
+    @Provides
+    @BackgroundDispatcher
+    fun provideBackgroundDispatcher(@TestDispatcher testDispatcher: CoroutineDispatcher): CoroutineDispatcher {
+      return testDispatcher
+    }
+
+    // TODO(#59): Either isolate these to their own shared test module, or use the real logging
+    // module in tests to avoid needing to specify these settings for tests.
+    @EnableConsoleLog
+    @Provides
+    fun provideEnableConsoleLog(): Boolean = true
+
+    @EnableFileLog
+    @Provides
+    fun provideEnableFileLog(): Boolean = false
+
+    @GlobalLogLevel
+    @Provides
+    fun provideGlobalLogLevel(): LogLevel = LogLevel.VERBOSE
+
+    @Singleton
+    @Provides
+    @BlockingDispatcher
+    fun provideBlockingDispatcher(): CoroutineDispatcher {
+      return MainThreadExecutor.asCoroutineDispatcher()
+    }
+  }
+
+  @Singleton
+  @Component(modules = [TestModule::class])
+  interface TestApplicationComponent {
+    @Component.Builder
+    interface Builder {
+      @BindsInstance
+      fun setApplication(application: Application): Builder
+
+      fun build(): TestApplicationComponent
+    }
+
+    fun getOnboardingFlowController(): OnboardingFlowController
+    fun inject(splashActivityTest: SplashActivityTest)
+  }
+
+  // TODO(#59): Move this to a general-purpose testing library that replaces all CoroutineExecutors with an
+  //  Espresso-enabled executor service. This service should also allow for background threads to run in both Espresso
+  //  and Robolectric to help catch potential race conditions, rather than forcing parallel execution to be sequential
+  //  and immediate.
+  //  NB: This also blocks on #59 to be able to actually create a test-only library.
+  /**
+   * An executor service that schedules all [Runnable]s to run asynchronously on the main thread. This is based on:
+   * https://android.googlesource.com/platform/packages/apps/TV/+/android-live-tv/src/com/android/tv/util/MainThreadExecutor.java.
+   */
+  private object MainThreadExecutor : AbstractExecutorService() {
+    override fun isTerminated(): Boolean = false
+
+    private val handler = Handler(Looper.getMainLooper())
+    val countingResource = CountingIdlingResource("main_thread_executor_counting_idling_resource")
 
-  @After
-  fun tearDown() {
-    Intents.release()
+    override fun execute(command: Runnable?) {
+      countingResource.increment()
+      handler.post {
+        try {
+          command?.run()
+        } finally {
+          countingResource.decrement()
+        }
+      }
+    }
+
+    override fun shutdown() {
+      throw UnsupportedOperationException()
+    }
+
+    override fun shutdownNow(): MutableList<Runnable> {
+      throw UnsupportedOperationException()
+    }
+
+    override fun isShutdown(): Boolean = false
+
+    override fun awaitTermination(timeout: Long, unit: TimeUnit?): Boolean {
+      throw UnsupportedOperationException()
+    }
   }
 }
Index: app/src/main/java/org/oppia/app/help/faq/FAQActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/FAQActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/FAQActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,45 @@
+package org.oppia.app.help.faq
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.databinding.DataBindingUtil
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.databinding.FaqActivityBinding
+import javax.inject.Inject
+
+/** The presenter for [FAQActivity]. */
+@ActivityScope
+class FAQActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity
+) {
+  private lateinit var faqActivityToolbar: Toolbar
+
+  fun handleOnCreate() {
+    val binding = DataBindingUtil.setContentView<FaqActivityBinding>(activity, R.layout.faq_activity)
+    binding.apply {
+      lifecycleOwner = activity
+    }
+
+    faqActivityToolbar = binding.faqActivityToolbar
+    activity.setSupportActionBar(faqActivityToolbar)
+    activity.supportActionBar!!.title = activity.getString(R.string.FAQs)
+    activity.supportActionBar!!.setDisplayShowHomeEnabled(true)
+    activity.supportActionBar!!.setDisplayHomeAsUpEnabled(true)
+
+    binding.faqActivityToolbar.setNavigationOnClickListener {
+      (activity as FAQActivity).finish()
+    }
+
+    if (getFAQFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.faq_fragment_placeholder,
+        FAQFragment()
+      ).commitNow()
+    }
+  }
+
+  private fun getFAQFragment(): FAQFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.faq_fragment_placeholder) as FAQFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/help/faq/FAQViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/FAQViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/FAQViewModel.kt	(date 1584626399000)
@@ -0,0 +1,37 @@
+package org.oppia.app.help.faq
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.lifecycle.ViewModel
+import org.oppia.app.R
+import org.oppia.app.help.faq.faqItemViewModel.FAQContentViewModel
+import org.oppia.app.help.faq.faqItemViewModel.FAQHeaderViewModel
+import org.oppia.app.help.faq.faqItemViewModel.FAQItemViewModel
+import javax.inject.Inject
+
+/** View model in [FAQFragment]. */
+class FAQViewModel @Inject constructor(
+  val activity: AppCompatActivity
+) : ViewModel() {
+  private val arrayList = ArrayList<FAQItemViewModel>()
+
+  val faqItemList: List<FAQItemViewModel> by lazy {
+    getRecyclerViewItemList()
+  }
+
+  private fun getRecyclerViewItemList(): ArrayList<FAQItemViewModel> {
+    val faqHeaderViewModel = FAQHeaderViewModel()
+    arrayList.add(faqHeaderViewModel)
+
+    val questions: Array<String> = activity.resources.getStringArray(R.array.faq_questions)
+    for (question in questions) {
+      val faqContentViewModel = FAQContentViewModel(question)
+      if (questions[questions.size - 1] == question) {
+        faqContentViewModel.showDivider.set(false)
+      } else {
+        faqContentViewModel.showDivider.set(true)
+      }
+      arrayList.add(faqContentViewModel)
+    }
+    return arrayList
+  }
+}
Index: app/src/Test/java/org/oppia/app/profile/AdminAuthActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/profile/AdminAuthActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/profile/AdminAuthActivityTest.kt	(date 1584626399000)
@@ -2,7 +2,7 @@
 
 import android.app.Application
 import android.content.Context
-import androidx.test.core.app.ActivityScenario
+import androidx.test.core.app.ActivityScenario.launch
 import androidx.test.core.app.ApplicationProvider
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.action.ViewActions.click
@@ -13,6 +13,8 @@
 import androidx.test.espresso.intent.Intents.intended
 import androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent
 import androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA
+import androidx.test.espresso.matcher.ViewMatchers.isEnabled
+import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
 import androidx.test.ext.junit.runners.AndroidJUnit4
@@ -29,6 +31,7 @@
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
+import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
 import org.oppia.util.logging.GlobalLogLevel
@@ -65,7 +68,7 @@
 
   @Test
   fun testAdminAuthActivity_inputCorrectPassword_opensAddProfileActivity() {
-    ActivityScenario.launch<AdminAuthActivity>(
+    launch<AdminAuthActivity>(
       AdminAuthActivity.createAdminAuthActivityIntent(
         context,
         "12345",
@@ -83,7 +86,7 @@
 
   @Test
   fun testAdminAuthActivity_inputIncorrectPassword_checkError() {
-    ActivityScenario.launch<AdminAuthActivity>(
+    launch<AdminAuthActivity>(
       AdminAuthActivity.createAdminAuthActivityIntent(
         context,
         "12345",
@@ -112,7 +115,7 @@
 
   @Test
   fun testAdminAuthActivity_inputIncorrectPassword_inputAgain_checkErrorIsGone() {
-    ActivityScenario.launch<AdminAuthActivity>(
+    launch<AdminAuthActivity>(
       AdminAuthActivity.createAdminAuthActivityIntent(
         context,
         "12345",
@@ -132,6 +135,76 @@
     }
   }
 
+  @Test
+  fun testAdminAuthActivity_buttonState_configurationChanged_buttonStateIsPreserved() {
+    launch<AdminAuthActivity>(
+      AdminAuthActivity.createAdminAuthActivityIntent(
+        context,
+        "12345",
+        -10710042
+      )
+    ).use {
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("12345"),
+        closeSoftKeyboard()
+      )
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.submit_button)).check(matches(isEnabled()))
+    }
+  }
+
+  @Test
+  fun testAdminAuthActivity_inputText_configurationChanged_inputTextIsPreserved() {
+    launch<AdminAuthActivity>(
+      AdminAuthActivity.createAdminAuthActivityIntent(
+        context,
+        "12345",
+        -10710042
+      )
+    ).use {
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("12345"),
+        closeSoftKeyboard()
+      )
+      onView(isRoot()).perform(orientationLandscape())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).check(
+        matches(
+          withText("12345")
+        )
+      )
+    }
+  }
+
+  @Test
+  fun testAdminAuthActivity_inputIncorrectPasswordLandscape_checkError() {
+    launch<AdminAuthActivity>(
+      AdminAuthActivity.createAdminAuthActivityIntent(
+        context,
+        "12345",
+        -10710042
+      )
+    ).use {
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("123"),
+        closeSoftKeyboard()
+      )
+      onView(withId(R.id.submit_button)).perform(click())
+      onView(
+        allOf(
+          withId(R.id.error_text),
+          isDescendantOfA(withId(R.id.input_pin))
+        )
+      ).check(matches(withText(context.resources.getString(R.string.admin_auth_incorrect))))
+      onView(isRoot()).perform(orientationLandscape())
+      onView(
+        allOf(
+          withId(R.id.error_text),
+          isDescendantOfA(withId(R.id.input_pin))
+        )
+      ).check(matches(withText(context.resources.getString(R.string.admin_auth_incorrect))))
+    }
+  }
+
   @Qualifier
   annotation class TestDispatcher
 
Index: app/src/Test/java/org/oppia/app/profile/AddProfileActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/profile/AddProfileActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/profile/AddProfileActivityTest.kt	(date 1584626399000)
@@ -1,7 +1,14 @@
 package org.oppia.app.profile
 
+import android.app.Activity.RESULT_OK
 import android.app.Application
+import android.app.Instrumentation.ActivityResult
+import android.content.ContentResolver
 import android.content.Context
+import android.content.Intent
+import android.content.res.Resources
+import android.net.Uri
+import android.provider.MediaStore
 import androidx.test.core.app.ActivityScenario
 import androidx.test.core.app.ApplicationProvider
 import androidx.test.espresso.Espresso.onView
@@ -12,9 +19,13 @@
 import androidx.test.espresso.assertion.ViewAssertions.matches
 import androidx.test.espresso.intent.Intents
 import androidx.test.espresso.intent.Intents.intended
+import androidx.test.espresso.intent.Intents.intending
+import androidx.test.espresso.intent.matcher.IntentMatchers.hasAction
 import androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent
+import androidx.test.espresso.intent.matcher.IntentMatchers.hasData
 import androidx.test.espresso.matcher.ViewMatchers.isClickable
 import androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA
+import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
 import androidx.test.ext.junit.runners.AndroidJUnit4
@@ -25,6 +36,7 @@
 import kotlinx.coroutines.CoroutineDispatcher
 import kotlinx.coroutines.ExperimentalCoroutinesApi
 import kotlinx.coroutines.test.TestCoroutineDispatcher
+import org.hamcrest.Matcher
 import org.hamcrest.Matchers.allOf
 import org.hamcrest.Matchers.not
 import org.junit.After
@@ -46,10 +58,8 @@
 @RunWith(AndroidJUnit4::class)
 class AddProfileActivityTest {
 
-  @Inject
-  lateinit var context: Context
-  @Inject
-  lateinit var profileTestHelper: ProfileTestHelper
+  @Inject lateinit var context: Context
+  @Inject lateinit var profileTestHelper: ProfileTestHelper
 
   @Before
   @ExperimentalCoroutinesApi
@@ -81,6 +91,21 @@
     }
   }
 
+  @Test
+  fun testAddProfileActivity_createPin_checkOpensProfileActivity() {
+    ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(allOf(withId(R.id.checkbox_pin))).perform(click())
+      onView(withId(R.id.input_pin)).check(matches(isDisplayed()))
+    }
+  }
+
+  @Test
+  fun testAddProfileActivity_createPinNotVisible_checkOpensProfileActivity() {
+    ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.input_pin)).check(matches(not(isDisplayed())))
+    }
+  }
+
   @Test
   fun testAddProfileActivity_inputName_inputPin_clickCreate_checkOpensProfileActivity() {
     ActivityScenario.launch(AddProfileActivity::class.java).use {
@@ -88,6 +113,7 @@
         typeText("test"),
         closeSoftKeyboard()
       )
+      onView(withId(R.id.checkbox_pin)).perform(click())
       onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
         typeText("123"), closeSoftKeyboard()
       )
@@ -180,6 +206,7 @@
   @Test
   fun testAddProfileActivity_inputShortPin_clickCreate_checkPinLengthError() {
     ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.checkbox_pin)).perform(click())
       onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
         typeText("12"), closeSoftKeyboard()
       )
@@ -196,6 +223,7 @@
   @Test
   fun testAddProfileActivity_inputShortPin_clickCreate_inputPin_checkErrorIsCleared() {
     ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.checkbox_pin)).perform(click())
       onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
         typeText("12"), closeSoftKeyboard()
       )
@@ -210,6 +238,7 @@
   @Test
   fun testAddProfileActivity_inputWrongConfirmPin_checkConfirmWrongError() {
     ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.checkbox_pin)).perform(click())
       onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
         typeText("123"), closeSoftKeyboard()
       )
@@ -229,6 +258,7 @@
   @Test
   fun testAddProfileActivity_inputWrongConfirmPin_inputConfirmPin_checkErrorIsCleared() {
     ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.checkbox_pin)).perform(click())
       onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
         typeText("123"), closeSoftKeyboard()
       )
@@ -250,6 +280,7 @@
   @Test
   fun testAddProfileActivity_inputPin_checkAllowDownloadNotClickable() {
     ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.checkbox_pin)).perform(click())
       onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
         typeText("123"), closeSoftKeyboard()
       )
@@ -260,6 +291,7 @@
   @Test
   fun testAddProfileActivity_inputPin_inputConfirmPin_checkAllowDownloadClickable() {
     ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.checkbox_pin)).perform(click())
       onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
         typeText("123"), closeSoftKeyboard()
       )
@@ -269,8 +301,48 @@
     }
   }
 
-  @Qualifier
-  annotation class TestDispatcher
+  @Test
+  fun testAddProfileActivity_imageSelectAvatar_checkGalleryIntent() {
+    val expectedIntent: Matcher<Intent> = allOf(
+      hasAction(Intent.ACTION_PICK),
+      hasData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
+    )
+    val activityResult = createGalleryPickActivityResultStub()
+    intending(expectedIntent).respondWith(activityResult)
+    ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.upload_image_button)).perform(click())
+      intended(expectedIntent)
+    }
+  }
+
+  @Test
+  fun testAddProfileActivity_imageSelectEdit_checkGalleryIntent() {
+    val expectedIntent: Matcher<Intent> = allOf(
+      hasAction(Intent.ACTION_PICK),
+      hasData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
+    )
+    val activityResult = createGalleryPickActivityResultStub()
+    intending(expectedIntent).respondWith(activityResult)
+    ActivityScenario.launch(AddProfileActivity::class.java).use {
+      onView(withId(R.id.edit_image_fab)).perform(click())
+      intended(expectedIntent)
+    }
+  }
+
+  private fun createGalleryPickActivityResultStub(): ActivityResult {
+    val resources: Resources = context.resources
+    val imageUri = Uri.parse(
+      ContentResolver.SCHEME_ANDROID_RESOURCE + "://" +
+          resources.getResourcePackageName(R.mipmap.ic_launcher) + '/' +
+          resources.getResourceTypeName(R.mipmap.ic_launcher) + '/' +
+          resources.getResourceEntryName(R.mipmap.ic_launcher)
+    )
+    val resultIntent = Intent()
+    resultIntent.setData(imageUri)
+    return ActivityResult(RESULT_OK, resultIntent)
+  }
+
+  @Qualifier annotation class TestDispatcher
 
   @Module
   class TestModule {
Index: app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQContentViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQContentViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQContentViewModel.kt	(date 1584626399000)
@@ -0,0 +1,10 @@
+package org.oppia.app.help.faq.faqItemViewModel
+
+import androidx.databinding.ObservableField
+
+/** Content view model for the recycler view in [FAQFragment]. */
+class FAQContentViewModel(val title: String) : FAQItemViewModel() {
+
+  /** Used to control visibility of divider. */
+  val showDivider = ObservableField(true)
+}
Index: app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.help.faq.faqItemViewModel
+
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** Super-class for generalising different views for the recyclerView in [FAQFragment]. */
+abstract class FAQItemViewModel : ObservableViewModel()
Index: app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQHeaderViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQHeaderViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/faq/faqItemViewModel/FAQHeaderViewModel.kt	(date 1584626399000)
@@ -0,0 +1,4 @@
+package org.oppia.app.help.faq.faqItemViewModel
+
+/** Header view model for the recycler view in [FAQFragment]. */
+class FAQHeaderViewModel : FAQItemViewModel()
Index: app/src/Test/java/org/oppia/app/profile/PinPasswordActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/profile/PinPasswordActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/profile/PinPasswordActivityTest.kt	(date 1584626399000)
@@ -4,8 +4,6 @@
 import android.content.Context
 import androidx.test.core.app.ActivityScenario
 import androidx.test.core.app.ApplicationProvider
-import androidx.test.ext.junit.runners.AndroidJUnit4
-import kotlinx.coroutines.ExperimentalCoroutinesApi
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.action.ViewActions.click
 import androidx.test.espresso.action.ViewActions.closeSoftKeyboard
@@ -14,16 +12,19 @@
 import androidx.test.espresso.intent.Intents
 import androidx.test.espresso.intent.Intents.intended
 import androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent
+import androidx.test.espresso.matcher.ViewMatchers.hasFocus
 import androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA
 import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
+import androidx.test.ext.junit.runners.AndroidJUnit4
 import dagger.BindsInstance
 import dagger.Component
 import dagger.Module
 import dagger.Provides
 import kotlinx.coroutines.CoroutineDispatcher
 import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.ExperimentalCoroutinesApi
 import kotlinx.coroutines.GlobalScope
 import kotlinx.coroutines.launch
 import kotlinx.coroutines.test.TestCoroutineDispatcher
@@ -48,7 +49,7 @@
 @RunWith(AndroidJUnit4::class)
 class PinPasswordActivityTest {
 
-  @Inject  lateinit var context: Context
+  @Inject lateinit var context: Context
   @Inject lateinit var profileTestHelper: ProfileTestHelper
 
   private val adminPin = "12345"
@@ -77,9 +78,28 @@
       .inject(this)
   }
 
+  @Test
+  fun testPinPasswordActivityWithAdmin_checkKeyboardIsVisibleByDefault() {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        adminId
+      )
+    ).use {
+      onView(withId(R.id.input_pin)).check(matches(hasFocus()))
+    }
+  }
+
   @Test
   fun testPinPasswordActivityWithAdmin_inputCorrectPin_checkOpensHomeActivity() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, adminId)).use {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        adminId
+      )
+    ).use {
       onView(withId(R.id.input_pin)).perform(typeText("12345"))
       intended(hasComponent(HomeActivity::class.java.name))
     }
@@ -87,7 +107,13 @@
 
   @Test
   fun testPinPasswordActivityWithUser_inputCorrectPin_checkOpensHomeActivity() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, userId)).use {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        userId
+      )
+    ).use {
       onView(withId(R.id.input_pin)).perform(typeText("123"))
       intended(hasComponent(HomeActivity::class.java.name))
     }
@@ -96,23 +122,42 @@
   @Test
   @ExperimentalCoroutinesApi
   fun testPinPasswordActivityWithAdmin_inputWrongPin_checkIncorrectPinShows() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, adminId)).use {
-      onView(withId(R.id.input_pin)).perform(typeText("54321") , closeSoftKeyboard())
-      onView(withId(R.id.error_text)).check(matches(withText(context.getString(R.string.pin_password_incorrect_pin))))
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        adminId
+      )
+    ).use {
+      onView(withId(R.id.input_pin)).perform(typeText("54321"), closeSoftKeyboard())
+      onView(withText(context.getString(R.string.pin_password_incorrect_pin))).check(matches(isDisplayed()))
     }
   }
 
   @Test
   fun testPinPasswordActivityWithUser_inputWrongPin_checkIncorrectPinShows() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, userId)).use {
-      onView(withId(R.id.input_pin)).perform(typeText("321") , closeSoftKeyboard())
-      onView(withId(R.id.error_text)).check(matches(withText(context.getString(R.string.pin_password_incorrect_pin))))
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        userId
+      )
+    ).use {
+      onView(withId(R.id.input_pin)).perform(typeText("321"), closeSoftKeyboard())
+      onView(withText(context.getString(R.string.pin_password_incorrect_pin))).check(matches(isDisplayed()))
     }
   }
 
   @Test
   fun testPinPasswordActivityWithAdmin_clickForgot_checkOpensAdminForgotDialog() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, adminId)).use {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        adminId
+      )
+    ).use {
+      onView(withId(R.id.input_pin)).perform(typeText(""), closeSoftKeyboard())
       onView(withId(R.id.forgot_pin)).perform(click())
       onView(withText(context.getString(R.string.pin_password_forgot_message))).check(matches(isDisplayed()))
     }
@@ -120,53 +165,115 @@
 
   @Test
   fun testPinPasswordActivityWithUser_clickForgot_inputWrongAdminPin_checkWrongAdminPinError() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, userId)).use {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        userId
+      )
+    ).use {
       onView(withId(R.id.forgot_pin)).perform(click())
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("1234") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("1234"),
+        closeSoftKeyboard()
+      )
       onView(withText(context.getString(R.string.admin_settings_submit))).perform(click())
-      onView(allOf(withId(R.id.error_text), isDescendantOfA(withId(R.id.input_pin)))).check(matches(withText(context.getString(R.string.admin_settings_incorrect))))
+      onView(
+        allOf(
+          withId(R.id.error_text),
+          isDescendantOfA(withId(R.id.input_pin))
+        )
+      ).check(matches(withText(context.getString(R.string.admin_settings_incorrect))))
 
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("5") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("5"),
+        closeSoftKeyboard()
+      )
       onView(allOf(withId(R.id.error_text), isDescendantOfA(withId(R.id.input_pin)))).check(matches(withText("")))
     }
   }
 
   @Test
   fun testPinPasswordActivityWithUser_clickForgot_inputAdminPin_inputShortPin_checkPinLengthError() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, userId)).use {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        userId
+      )
+    ).use {
       onView(withId(R.id.forgot_pin)).perform(click())
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("12345") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("12345"),
+        closeSoftKeyboard()
+      )
       onView(withText(context.getString(R.string.admin_settings_submit))).perform(click())
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("32") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("32"),
+        closeSoftKeyboard()
+      )
       onView(withText(context.getString(R.string.admin_settings_submit))).perform(click())
-      onView(allOf(withId(R.id.error_text), isDescendantOfA(withId(R.id.input_pin)))).check(matches(withText(context.getString(R.string.add_profile_error_pin_length))))
+      onView(
+        allOf(
+          withId(R.id.error_text),
+          isDescendantOfA(withId(R.id.input_pin))
+        )
+      ).check(matches(withText(context.getString(R.string.add_profile_error_pin_length))))
 
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("1") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("1"),
+        closeSoftKeyboard()
+      )
       onView(allOf(withId(R.id.error_text), isDescendantOfA(withId(R.id.input_pin)))).check(matches(withText("")))
     }
   }
 
   @Test
   fun testPinPasswordActivityWithUser_clickForgot_inputAdminPin_inputNewPin_inputOldPin_checkWrongPinError() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, userId)).use {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        userId
+      )
+    ).use {
+      onView(withId(R.id.input_pin)).perform(typeText(""), closeSoftKeyboard())
       onView(withId(R.id.forgot_pin)).perform(click())
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("12345") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("12345"),
+        closeSoftKeyboard()
+      )
       onView(withText(context.getString(R.string.admin_settings_submit))).perform(click())
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("321") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("321"),
+        closeSoftKeyboard()
+      )
       onView(withText(context.getString(R.string.admin_settings_submit))).perform(click())
       onView(withText(context.getString(R.string.pin_password_close))).perform(click())
-      onView(withId(R.id.input_pin)).perform(typeText("123") , closeSoftKeyboard())
-      onView(withId(R.id.error_text)).check(matches(withText(context.getString(R.string.pin_password_incorrect_pin))))
+      onView(withId(R.id.input_pin)).perform(typeText("123"), closeSoftKeyboard())
+      onView(withText(context.getString(R.string.pin_password_incorrect_pin))).check(matches(isDisplayed()))
     }
   }
 
   @Test
   fun testPinPasswordActivityWithUser_clickForgot_inputAdminPin_inputNewPin_inputNewPin_checkOpensHomeActivity() {
-    ActivityScenario.launch<PinPasswordActivity>(PinPasswordActivity.createPinPasswordActivityIntent(context, adminPin, userId)).use {
+    ActivityScenario.launch<PinPasswordActivity>(
+      PinPasswordActivity.createPinPasswordActivityIntent(
+        context,
+        adminPin,
+        userId
+      )
+    ).use {
       onView(withId(R.id.forgot_pin)).perform(click())
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("12345") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("12345"),
+        closeSoftKeyboard()
+      )
       onView(withText(context.getString(R.string.admin_settings_submit))).perform(click())
-      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(typeText("321") , closeSoftKeyboard())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_pin)))).perform(
+        typeText("321"),
+        closeSoftKeyboard()
+      )
       onView(withText(context.getString(R.string.admin_settings_submit))).perform(click())
       onView(withText(context.getString(R.string.pin_password_close))).perform(click())
       onView(withId(R.id.input_pin)).perform(typeText("321"))
@@ -174,8 +281,7 @@
     }
   }
 
-  @Qualifier
-  annotation class TestDispatcher
+  @Qualifier annotation class TestDispatcher
 
   // TODO(#89): Move this to a common test application component.
   @Module
Index: app/src/Test/java/org/oppia/app/profile/ProfileChooserFragmentTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/profile/ProfileChooserFragmentTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/profile/ProfileChooserFragmentTest.kt	(date 1584626399000)
@@ -29,6 +29,9 @@
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.StoryTextSize
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.atPosition
 import org.oppia.app.recyclerview.RecyclerViewMatcher.Companion.atPositionOnView
 import org.oppia.domain.profile.ProfileManagementController
@@ -133,7 +136,7 @@
 
   @Test
   fun testProfileChooserFragment_clickAdminProfileWithNoPin_checkOpensAdminPinActivity() {
-    profileManagementController.addProfile("Sean", "", null, true, -10710042, true)
+    profileManagementController.addProfile("Sean", "", null, true, -10710042, true, StoryTextSize.SMALL_TEXT_SIZE, AppLanguage.ENGLISH_APP_LANGUAGE, AudioLanguage.NO_AUDIO)
     ActivityScenario.launch(ProfileActivity::class.java).use {
       onView(atPosition(R.id.profile_recycler_view, 1)).perform(click())
       intended(hasComponent(AdminPinActivity::class.java.name))
Index: app/src/Test/java/org/oppia/app/testing/InputInteractionViewTestActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/testing/InputInteractionViewTestActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/testing/InputInteractionViewTestActivityTest.kt	(date 1584626399000)
@@ -2,7 +2,9 @@
 
 import android.content.res.Configuration
 import androidx.test.core.app.ActivityScenario
+import androidx.test.espresso.Espresso.closeSoftKeyboard
 import androidx.test.espresso.Espresso.onView
+import androidx.test.espresso.action.ViewActions.click
 import androidx.test.espresso.action.ViewActions.typeText
 import androidx.test.espresso.assertion.ViewAssertions.matches
 import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
@@ -20,83 +22,6 @@
 @RunWith(AndroidJUnit4::class)
 class InputInteractionViewTestActivityTest {
 
-  @Test
-  fun testNumericInputInteractionView_withNoInputText_hasCorrectPendingAnswerType() {
-    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
-    activityScenario.onActivity { activity ->
-      val pendingAnswer = activity.numericInputViewModel.getPendingAnswer()
-      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
-      assertThat(pendingAnswer.answer.real).isWithin(1e-5).of(0.0)
-    }
-  }
-
-  @Test
-  fun testNumericInputInteractionView_withInputtedText_hasCorrectPendingAnswer() {
-    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
-    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("9"))
-    activityScenario.onActivity { activity ->
-      val pendingAnswer = activity.numericInputViewModel.getPendingAnswer()
-      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
-      assertThat(pendingAnswer.answer.objectTypeCase).isEqualTo(InteractionObject.ObjectTypeCase.REAL)
-      assertThat(pendingAnswer.answer.real).isEqualTo(9.0)
-    }
-  }
-
-  @Test
-  fun testNumericInputInteractionView_withInputtedText_hasCorrectPendingAnswerWithDecimalValues() {
-    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
-    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("9.5"))
-    activityScenario.onActivity { activity ->
-      val pendingAnswer = activity.numericInputViewModel.getPendingAnswer()
-      assertThat(pendingAnswer.answer.objectTypeCase).isEqualTo(InteractionObject.ObjectTypeCase.REAL)
-      assertThat(pendingAnswer.answer.real).isEqualTo(9.5)
-    }
-  }
-
-  @Test
-  @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
-  fun testNumberInputInteractionView_withInputtedText_onConfigurationChange_hasCorrectPendingAnswer() {
-    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
-    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("9"))
-    activityScenario.onActivity { activity ->
-      activity.requestedOrientation = Configuration.ORIENTATION_LANDSCAPE
-    }
-    onView(withId(R.id.test_number_input_interaction_view)).check(matches(isDisplayed())).check(matches(withText("9")))
-  }
-
-  @Test
-  fun testTextInputInteractionView_withNoInputText_hasCorrectPendingAnswerType() {
-    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
-    activityScenario.onActivity { activity ->
-      val pendingAnswer = activity.textInputViewModel.getPendingAnswer()
-      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
-      assertThat(pendingAnswer.answer.normalizedString).isEmpty()
-    }
-  }
-
-  @Test
-  fun testTextInputInteractionView_withInputtedText_hasCorrectPendingAnswer() {
-    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
-    onView(withId(R.id.test_text_input_interaction_view)).perform(typeText("abc"))
-    activityScenario.onActivity { activity ->
-      val pendingAnswer = activity.textInputViewModel.getPendingAnswer()
-      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
-      assertThat(pendingAnswer.answer.objectTypeCase).isEqualTo(InteractionObject.ObjectTypeCase.NORMALIZED_STRING)
-      assertThat(pendingAnswer.answer.normalizedString).isEqualTo("abc")
-    }
-  }
-
-  @Test
-  @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
-  fun testTextInputInteractionView_withInputtedText_onConfigurationChange_hasCorrectPendingAnswer() {
-    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
-    onView(withId(R.id.test_text_input_interaction_view)).perform(typeText("abc"))
-    activityScenario.onActivity { activity ->
-      activity.requestedOrientation = Configuration.ORIENTATION_LANDSCAPE
-    }
-    onView(withId(R.id.test_text_input_interaction_view)).check(matches(isDisplayed())).check(matches(withText("abc")))
-  }
-
   @Test
   fun testFractionInputInteractionView_withNoInputText_hasCorrectPendingAnswerType() {
     val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
@@ -204,4 +129,245 @@
     onView(withId(R.id.test_fraction_input_interaction_view)).check(matches(isDisplayed()))
       .check(matches(withText("9/5")))
   }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedNegativeSymbolOtherThanAt0_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("55-"))
+    onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_invalid_format)))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedNegativeSymbolAt0AndMoreThanOnce_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("--55"))
+    onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_invalid_format)))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedDividerMoreThanOnce_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("5/5/"))
+    onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_invalid_format)))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedDividerAtStart_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("/5"))
+    onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_invalid_format)))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedPartialValue_numberFormatErrorIsNotDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("5 5/"))
+    onView(withId(R.id.fraction_input_error)).check(matches(withText("")))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedPartialValue_clickSubmitButton_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("5 5/"))
+    closeSoftKeyboard()
+    onView(withId(R.id.submit_button)).check(matches(isDisplayed())).perform(click())
+    onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_invalid_format)))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedValidValue_clickSubmitButton_noErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("3 1/2"))
+    closeSoftKeyboard()
+    onView(withId(R.id.submit_button)).check(matches(isDisplayed())).perform(click())
+    onView(withId(R.id.fraction_input_error)).check(matches(withText("")))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedDivideByZero_errorIsNotDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("1/0"))
+    onView(withId(R.id.fraction_input_error)).check(matches(withText("")))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedDivideByZero_clickSubmitButton_divideByZeroErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("1/0"))
+    closeSoftKeyboard()
+    onView(withId(R.id.submit_button)).check(matches(isDisplayed())).perform(click())
+    onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_divide_by_zero)))
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedInvalidCharacter_invalidCharacterErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java).use {
+      onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("."))
+      onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_invalid_chars)))
+    }
+  }
+
+  @Test
+  fun testFractionInputInteractionView_withInputtedLongNumber_clickSubmitButton_numberTooLongErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java).use {
+      onView(withId(R.id.test_fraction_input_interaction_view)).perform(typeText("12345678"))
+      closeSoftKeyboard()
+      onView(withId(R.id.submit_button)).check(matches(isDisplayed())).perform(click())
+      onView(withId(R.id.fraction_input_error)).check(matches(withText(R.string.fraction_error_larger_than_seven_digits)))
+    }
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withNoInputText_hasCorrectPendingAnswerType() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    activityScenario.onActivity { activity ->
+      val pendingAnswer = activity.numericInputViewModel.getPendingAnswer()
+      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
+      assertThat(pendingAnswer.answer.real).isWithin(1e-5).of(0.0)
+    }
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedText_hasCorrectPendingAnswer() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("9"))
+    activityScenario.onActivity { activity ->
+      val pendingAnswer = activity.numericInputViewModel.getPendingAnswer()
+      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
+      assertThat(pendingAnswer.answer.objectTypeCase).isEqualTo(InteractionObject.ObjectTypeCase.REAL)
+      assertThat(pendingAnswer.answer.real).isEqualTo(9.0)
+    }
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedText_hasCorrectPendingAnswerWithDecimalValues() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("9.5"))
+    activityScenario.onActivity { activity ->
+      val pendingAnswer = activity.numericInputViewModel.getPendingAnswer()
+      assertThat(pendingAnswer.answer.objectTypeCase).isEqualTo(InteractionObject.ObjectTypeCase.REAL)
+      assertThat(pendingAnswer.answer.real).isEqualTo(9.5)
+    }
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedNegativeDecimal_hasCorrectPendingAnswerWithDecimalValues() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("-9.5"))
+    activityScenario.onActivity { activity ->
+      val pendingAnswer = activity.numericInputViewModel.getPendingAnswer()
+      assertThat(pendingAnswer.answer.objectTypeCase).isEqualTo(InteractionObject.ObjectTypeCase.REAL)
+      assertThat(pendingAnswer.answer.real).isEqualTo(-9.5)
+      assertThat(pendingAnswer.answer.real).isLessThan(0.0)
+    }
+  }
+
+  @Test
+  @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
+  fun testNumberInputInteractionView_withInputtedText_onConfigurationChange_hasCorrectPendingAnswer() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("9"))
+    activityScenario.onActivity { activity ->
+      activity.requestedOrientation = Configuration.ORIENTATION_LANDSCAPE
+    }
+    onView(withId(R.id.test_number_input_interaction_view)).check(matches(isDisplayed())).check(matches(withText("9")))
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedInvalidCharacter_invalidCharacterErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java).use {
+      onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("/"))
+      onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_invalid_format)))
+    }
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedLongNumber_clickSubmitButton_numberTooLongErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java).use {
+      onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("-12345678.6787687678"))
+      closeSoftKeyboard()
+      onView(withId(R.id.submit_button)).check(matches(isDisplayed())).perform(click())
+      onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_larger_than_fifteen_characters)))
+    }
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedLongNonDecimalNumber_clickSubmitButton_numberTooLongErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java).use {
+      onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("1234567886787687678"))
+      closeSoftKeyboard()
+      onView(withId(R.id.submit_button)).check(matches(isDisplayed())).perform(click())
+      onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_larger_than_fifteen_characters)))
+    }
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedMinusSymbol_clickSubmitButton_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java).use {
+      onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("-"))
+      closeSoftKeyboard()
+      onView(withId(R.id.submit_button)).check(matches(isDisplayed())).perform(click())
+      onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_invalid_format)))
+    }
+  }
+
+  fun testNumericInputInteractionView_withInputtedNegativeSymbolOtherThanAt0_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("55-"))
+    onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_invalid_format)))
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedNegativeSymbolAt0AndMoreThanOnce_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("--55"))
+    onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_invalid_format)))
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedFloatingPointMoreThanOnce_numberFormatErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText("5.5."))
+    onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_invalid_format)))
+  }
+
+  @Test
+  fun testNumericInputInteractionView_withInputtedFloatingPointAtStart_numberStartingWithFloatingPointErrorIsDisplayed() {
+    ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_number_input_interaction_view)).perform(typeText(".5"))
+    onView(withId(R.id.number_input_error)).check(matches(withText(R.string.number_error_starting_with_floating_point)))
+  }
+
+  @Test
+  fun testTextInputInteractionView_withNoInputText_hasCorrectPendingAnswerType() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    activityScenario.onActivity { activity ->
+      val pendingAnswer = activity.textInputViewModel.getPendingAnswer()
+      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
+      assertThat(pendingAnswer.answer.normalizedString).isEmpty()
+    }
+  }
+
+  @Test
+  fun testTextInputInteractionView_withInputtedText_hasCorrectPendingAnswer() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_text_input_interaction_view)).perform(typeText("abc"))
+    activityScenario.onActivity { activity ->
+      val pendingAnswer = activity.textInputViewModel.getPendingAnswer()
+      assertThat(pendingAnswer.answer).isInstanceOf(InteractionObject::class.java)
+      assertThat(pendingAnswer.answer.objectTypeCase).isEqualTo(InteractionObject.ObjectTypeCase.NORMALIZED_STRING)
+      assertThat(pendingAnswer.answer.normalizedString).isEqualTo("abc")
+    }
+  }
+
+  @Test
+  @Ignore("Landscape not properly supported") // TODO(#56): Reenable once landscape is supported.
+  fun testTextInputInteractionView_withInputtedText_onConfigurationChange_hasCorrectPendingAnswer() {
+    val activityScenario = ActivityScenario.launch(InputInteractionViewTestActivity::class.java)
+    onView(withId(R.id.test_text_input_interaction_view)).perform(typeText("abc"))
+    activityScenario.onActivity { activity ->
+      activity.requestedOrientation = Configuration.ORIENTATION_LANDSCAPE
+    }
+    onView(withId(R.id.test_text_input_interaction_view)).check(matches(isDisplayed())).check(matches(withText("abc")))
+  }
 }
Index: app/src/Test/java/org/oppia/app/testing/NavigationDrawerTestActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/testing/NavigationDrawerTestActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/testing/NavigationDrawerTestActivityTest.kt	(date 1584626399000)
@@ -1,7 +1,12 @@
 package org.oppia.app.testing
 
+import android.app.Application
+import android.content.Context
+import android.content.Intent
+import android.content.res.Resources
 import android.widget.TextView
-import androidx.test.core.app.ActivityScenario
+import androidx.test.core.app.ActivityScenario.launch
+import androidx.test.core.app.ApplicationProvider
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.action.ViewActions.click
 import androidx.test.espresso.assertion.ViewAssertions.matches
@@ -9,27 +14,130 @@
 import androidx.test.espresso.contrib.DrawerActions.open
 import androidx.test.espresso.contrib.DrawerMatchers.isClosed
 import androidx.test.espresso.contrib.DrawerMatchers.isOpen
+import androidx.test.espresso.intent.Intents
+import androidx.test.espresso.intent.Intents.intended
+import androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent
+import androidx.test.espresso.intent.matcher.IntentMatchers.hasExtra
 import androidx.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed
+import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
 import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withContentDescription
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withParent
 import androidx.test.espresso.matcher.ViewMatchers.withText
 import androidx.test.ext.junit.runners.AndroidJUnit4
+import dagger.BindsInstance
+import dagger.Component
+import dagger.Module
+import dagger.Provides
+import kotlinx.coroutines.CoroutineDispatcher
+import kotlinx.coroutines.ExperimentalCoroutinesApi
+import kotlinx.coroutines.test.TestCoroutineDispatcher
 import org.hamcrest.Matchers.allOf
 import org.hamcrest.Matchers.instanceOf
+import org.hamcrest.Matchers.not
+import org.junit.After
+import org.junit.Before
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
+import org.oppia.app.administratorcontrols.AdministratorControlsActivity
+import org.oppia.app.model.ProfileId
+import org.oppia.app.mydownloads.MyDownloadsActivity
+import org.oppia.app.profile.ProfileActivity
 import org.oppia.app.recyclerview.RecyclerViewMatcher
 import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
+import org.oppia.domain.profile.ProfileTestHelper
+import org.oppia.domain.topic.StoryProgressTestHelper
+import org.oppia.util.logging.EnableConsoleLog
+import org.oppia.util.logging.EnableFileLog
+import org.oppia.util.logging.GlobalLogLevel
+import org.oppia.util.logging.LogLevel
+import org.oppia.util.threading.BackgroundDispatcher
+import org.oppia.util.threading.BlockingDispatcher
+import javax.inject.Inject
+import javax.inject.Qualifier
+import javax.inject.Singleton
 
 /** Tests for [NavigationDrawerTestActivity]. */
 @RunWith(AndroidJUnit4::class)
 class NavigationDrawerTestActivityTest {
+
+  @Inject lateinit var profileTestHelper: ProfileTestHelper
+  @Inject lateinit var storyProfileTestHelper: StoryProgressTestHelper
+  @Inject lateinit var context: Context
+
+  private val internalProfileId = 0
+  private val internalProfileId1 = 1
+
+  @Before
+  @ExperimentalCoroutinesApi
+  fun setUp() {
+    Intents.init()
+    setUpTestApplicationComponent()
+    profileTestHelper.initializeProfiles()
+    storyProfileTestHelper.markFullStoryPartialTopicProgressForRatios(
+      ProfileId.newBuilder().setInternalId(
+        internalProfileId
+      ).build(),
+      timestampOlderThanAWeek = false
+    )
+  }
+
+  @After
+  fun tearDown() {
+    Intents.release()
+  }
+
+  private fun createNavigationDrawerActivityIntent(internalProfileId: Int): Intent {
+    return NavigationDrawerTestActivity.createNavigationDrawerTestActivity(
+      ApplicationProvider.getApplicationContext(),
+      internalProfileId
+    )
+  }
+
+  private fun setUpTestApplicationComponent() {
+    DaggerNavigationDrawerTestActivityTest_TestApplicationComponent.builder()
+      .setApplication(ApplicationProvider.getApplicationContext())
+      .build()
+      .inject(this)
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_clickNavigationDrawerHamburger_defaultProfileNameAtIndex0_displayProfileNameSuccessfully() {
+    launch<NavigationDrawerTestActivity>(createNavigationDrawerActivityIntent(internalProfileId)).use {
+      onView(withContentDescription(R.string.drawer_open_content_description)).check(
+        matches(isCompletelyDisplayed())
+      ).perform(click())
+      onView(withId(R.id.nav_header_profile_name))
+        .check(matches(withText("Sean")))
+    }
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_clickNavigationDrawerHamburger_checkProfileProgress_displayProfileProgressSuccessfully() {
+    launch<NavigationDrawerTestActivity>(createNavigationDrawerActivityIntent(internalProfileId)).use {
+      onView(withContentDescription(R.string.drawer_open_content_description)).check(
+        matches(isCompletelyDisplayed())
+      ).perform(click())
+      onView(withId(R.id.profile_progress_text_view)).check(matches(withText("1 Story Completed | 1 Topic in Progress")))
+    }
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_clickNavigationDrawerHamburger_defaultProfileNameAtIndex1_displayProfileNameSuccessfully() {
+    launch<NavigationDrawerTestActivity>(createNavigationDrawerActivityIntent(internalProfileId1)).use {
+      onView(withContentDescription(R.string.drawer_open_content_description)).check(
+        matches(isCompletelyDisplayed())
+      ).perform(click())
+      onView(withId(R.id.nav_header_profile_name))
+        .check(matches(withText("Ben")))
+    }
+  }
+
   @Test
   fun testNavigationDrawerTestActivity_clickNavigationDrawerHamburger_navigationDrawerIsOpenedSuccessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withContentDescription(R.string.drawer_open_content_description)).check(
         matches(isCompletelyDisplayed())
       ).perform(click())
@@ -40,8 +148,8 @@
   }
 
   @Test
-  fun testNavigationDrawerTestActivity_openNavigationDrawerAndRotate_navigationDrawerIsNotClosedAfterRotationIsVerifiedSucessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+  fun testNavigationDrawerTestActivity_openNavigationDrawerAndRotate_navigationDrawerIsNotClosedAfterRotationIsVerifiedSuccessfully() {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withContentDescription(R.string.drawer_open_content_description)).perform(click())
       onView(isRoot()).perform(orientationLandscape())
       onView(withId(R.id.home_activity_drawer_layout)).check(matches(isOpen()))
@@ -49,17 +157,43 @@
   }
 
   @Test
-  fun testNavigationDrawerTestActivity_openNavigationDrawerAndClose_closingOfNavigationDrawerIsVerifiedSucessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+  fun testNavigationDrawerTestActivity_openNavigationDrawerAndClose_closingOfNavigationDrawerIsVerifiedSuccessfully() {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withContentDescription(R.string.drawer_open_content_description)).perform(click())
       onView(withId(R.id.home_activity_drawer_layout)).perform(close())
       onView(withId(R.id.home_activity_drawer_layout)).check(matches(isClosed()))
     }
   }
 
+  @Test
+  fun testNavigationDrawerTestActivity_withAdminProfile_openNavigationDrawer_checkAdministratorControlsDisplayed() {
+    launch<NavigationDrawerTestActivity>(createNavigationDrawerActivityIntent(0)).use {
+      onView(withContentDescription(R.string.drawer_open_content_description)).perform(click())
+      onView(withId(R.id.administrator_controls_linear_layout)).check(matches(isDisplayed()))
+    }
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_withAdminProfile_openNavigationDrawer_clickAdministratorControls_checkOpensAdministratorControlsActivity() {
+    launch<NavigationDrawerTestActivity>(createNavigationDrawerActivityIntent(internalProfileId)).use {
+      onView(withContentDescription(R.string.drawer_open_content_description)).perform(click())
+      onView(withId(R.id.administrator_controls_linear_layout)).check(matches(isDisplayed())).perform(click())
+      intended(hasComponent(AdministratorControlsActivity::class.java.name))
+      intended(hasExtra(AdministratorControlsActivity.getIntentKey(), 0))
+    }
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_withUserProfile_openNavigationDrawer_checkAdministratorControlsNotDisplayed() {
+    launch<NavigationDrawerTestActivity>(createNavigationDrawerActivityIntent(internalProfileId1)).use {
+      onView(withContentDescription(R.string.drawer_open_content_description)).perform(click())
+      onView(withId(R.id.administrator_controls_linear_layout)).check(matches(not(isDisplayed())))
+    }
+  }
+
   @Test
   fun testNavigationDrawerTestActivity_openNavigationDrawer_selectHelpMenuInNavigationDrawer_showsHelpFragmentSuccessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withId(R.id.home_activity_drawer_layout)).perform(open())
       onView(withText(R.string.menu_help)).perform(click())
       onView(
@@ -71,9 +205,56 @@
     }
   }
 
+  @Test
+  fun testNavigationDrawerTestActivity_openNavigationDrawer_selectMyDownloadsMenuInNavigationDrawer_showsMyDownloadsFragmentSuccessfully() {
+    launch(NavigationDrawerTestActivity::class.java).use {
+      onView(withId(R.id.home_activity_drawer_layout)).perform(open())
+      onView(withText(R.string.menu_my_downloads)).perform(click())
+      intended(hasComponent(MyDownloadsActivity::class.java.name))
+    }
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_openNavigationDrawer_selectSwitchProfileMenu_showsExitToProfileChooserDialog() {
+    launch(NavigationDrawerTestActivity::class.java).use {
+      onView(withId(R.id.home_activity_drawer_layout)).perform(open())
+      onView(withText(R.string.menu_switch_profile)).perform(click())
+      onView(withText(R.string.home_activity_back_dialog_message)).check(matches(isDisplayed()))
+    }
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_openNavigationDrawer_selectSwitchProfileMenu_showsExitToProfileChooserDialog_clickExit_checkOpensProfileActivity() {
+    launch(NavigationDrawerTestActivity::class.java).use {
+      onView(withId(R.id.home_activity_drawer_layout)).perform(open())
+      onView(withText(R.string.menu_switch_profile)).perform(click())
+      onView(withText(R.string.home_activity_back_dialog_message)).check(matches(isDisplayed()))
+      onView(withText(R.string.home_activity_back_dialog_exit)).perform(click())
+      intended(hasComponent(ProfileActivity::class.java.name))
+    }
+  }
+
+  @Test
+  fun testNavigationDrawerTestActivity_openNavigationDrawer_selectSwitchProfileMenu_showsExitToProfileChooserDialog_clickCancel_checkDrawerIsClosed() {
+    launch(NavigationDrawerTestActivity::class.java).use {
+      onView(withId(R.id.home_activity_drawer_layout)).perform(open())
+      onView(withText(R.string.menu_switch_profile)).perform(click())
+      onView(withText(R.string.home_activity_back_dialog_message)).check(matches(isDisplayed()))
+      onView(withText(R.string.home_activity_back_dialog_cancel)).perform(click())
+      onView(withId(R.id.home_activity_drawer_layout)).check(matches(isClosed()))
+      onView(withId(R.id.home_activity_drawer_layout)).perform(open())
+      onView(
+        allOf(
+          instanceOf(TextView::class.java),
+          withParent(withId(R.id.home_activity_toolbar))
+        )
+      ).check(matches(withText(R.string.menu_home)))
+    }
+  }
+
   @Test
   fun testNavigationDrawerTestActivity_openNavigationDrawer_selectHelpMenuInNavigationDrawer_clickNavigationDrawerHamburger_navigationDrawerIsOpenedAndVerifiedSuccessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withId(R.id.home_activity_drawer_layout)).perform(open())
       onView(withText(R.string.menu_help)).perform(click())
       onView(
@@ -91,7 +272,7 @@
 
   @Test
   fun testNavigationDrawerTestActivity_openNavigationDrawer_selectHelpMenuInNavigationDrawer_openingAndClosingOfDrawerIsVerifiedSuccessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withId(R.id.home_activity_drawer_layout)).perform(open())
       onView(withText(R.string.menu_help)).perform(click())
       onView(withContentDescription(R.string.drawer_open_content_description))
@@ -111,7 +292,7 @@
 
   @Test
   fun testNavigationDrawerTestActivity_openNavigationDrawer_selectHelpMenuInNavigationDrawer_navigationDrawerClosingIsVerifiedSuccessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withId(R.id.home_activity_drawer_layout)).perform(open())
       onView(withText(R.string.menu_help)).perform(click())
       onView(withId(R.id.help_activity_drawer_layout)).perform(open())
@@ -128,7 +309,7 @@
 
   @Test
   fun testNavigationDrawerTestActivity_openNavigationDrawer_selectHelpMenuInNavigationDrawer_selectHomeMenuInNavigationDrawer_showsHomeFragmentSuccessfully() {
-    ActivityScenario.launch(NavigationDrawerTestActivity::class.java).use {
+    launch(NavigationDrawerTestActivity::class.java).use {
       onView(withId(R.id.home_activity_drawer_layout)).perform(open())
       onView(withText(R.string.menu_help)).perform(click())
       onView(withId(R.id.help_activity_drawer_layout)).perform(open())
@@ -148,4 +329,69 @@
       ).check(matches(withText("Welcome to Oppia!")))
     }
   }
+
+  private fun getResources(): Resources {
+    return ApplicationProvider.getApplicationContext<Context>().resources
+  }
+
+  @Qualifier annotation class TestDispatcher
+
+  @Module
+  class TestModule {
+    @Provides
+    @Singleton
+    fun provideContext(application: Application): Context {
+      return application
+    }
+
+    @ExperimentalCoroutinesApi
+    @Singleton
+    @Provides
+    @TestDispatcher
+    fun provideTestDispatcher(): CoroutineDispatcher {
+      return TestCoroutineDispatcher()
+    }
+
+    @Singleton
+    @Provides
+    @BackgroundDispatcher
+    fun provideBackgroundDispatcher(@TestDispatcher testDispatcher: CoroutineDispatcher): CoroutineDispatcher {
+      return testDispatcher
+    }
+
+    @Singleton
+    @Provides
+    @BlockingDispatcher
+    fun provideBlockingDispatcher(@TestDispatcher testDispatcher: CoroutineDispatcher): CoroutineDispatcher {
+      return testDispatcher
+    }
+
+    // TODO(#59): Either isolate these to their own shared test module, or use the real logging
+    // module in tests to avoid needing to specify these settings for tests.
+    @EnableConsoleLog
+    @Provides
+    fun provideEnableConsoleLog(): Boolean = true
+
+    @EnableFileLog
+    @Provides
+    fun provideEnableFileLog(): Boolean = false
+
+    @GlobalLogLevel
+    @Provides
+    fun provideGlobalLogLevel(): LogLevel = LogLevel.VERBOSE
+  }
+
+  @Singleton
+  @Component(modules = [TestModule::class])
+  interface TestApplicationComponent {
+    @Component.Builder
+    interface Builder {
+      @BindsInstance
+      fun setApplication(application: Application): Builder
+
+      fun build(): TestApplicationComponent
+    }
+
+    fun inject(navigationDrawerTestActivityTest: NavigationDrawerTestActivityTest)
+  }
 }
Index: app/src/Test/java/org/oppia/app/settings/profile/ProfileRenameActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/settings/profile/ProfileRenameActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/settings/profile/ProfileRenameActivityTest.kt	(date 1584626399000)
@@ -14,6 +14,8 @@
 import androidx.test.espresso.intent.Intents.intended
 import androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent
 import androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA
+import androidx.test.espresso.matcher.ViewMatchers.isEnabled
+import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
 import dagger.BindsInstance
@@ -23,11 +25,13 @@
 import kotlinx.coroutines.CoroutineDispatcher
 import kotlinx.coroutines.test.TestCoroutineDispatcher
 import org.hamcrest.CoreMatchers.allOf
+import org.hamcrest.CoreMatchers.not
 import org.junit.After
 import org.junit.Before
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
+import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
 import org.oppia.domain.profile.ProfileTestHelper
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
@@ -75,6 +79,24 @@
     }
   }
 
+  @Test
+  fun testProfileRenameActivity_inputNewName_configurationChange_checkSaveIsEnabled() {
+    ActivityScenario.launch<ProfileRenameActivity>(ProfileRenameActivity.createProfileRenameActivity(context, 1)).use {
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_name)))).perform(typeText("James"))
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.profile_rename_save_button)).check(matches(isEnabled()))
+    }
+  }
+
+  @Test
+  fun testProfileRenameActivity_inputNewName_configurationChange_inputTextExists() {
+    ActivityScenario.launch<ProfileRenameActivity>(ProfileRenameActivity.createProfileRenameActivity(context, 1)).use {
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_name)))).perform(typeText("James"))
+      onView(isRoot()).perform(orientationLandscape())
+      onView(allOf(withId(R.id.input), isDescendantOfA(withId(R.id.input_name)))).check(matches(withText("James")))
+    }
+  }
+
   @Test
   fun testProfileRenameActivity_inputNotUniqueName_clickSave_checkNameNotUniqueError() {
     ActivityScenario.launch<ProfileRenameActivity>(ProfileRenameActivity.createProfileRenameActivity(context, 1)).use {
Index: app/src/Test/java/org/oppia/app/settings/profile/ProfileEditActivityTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/settings/profile/ProfileEditActivityTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/settings/profile/ProfileEditActivityTest.kt	(date 1584626399000)
@@ -4,8 +4,6 @@
 import android.content.Context
 import androidx.test.core.app.ActivityScenario
 import androidx.test.core.app.ApplicationProvider
-import androidx.test.ext.junit.runners.AndroidJUnit4
-import kotlinx.coroutines.ExperimentalCoroutinesApi
 import androidx.test.espresso.Espresso.onView
 import androidx.test.espresso.action.ViewActions.click
 import androidx.test.espresso.assertion.ViewAssertions.matches
@@ -15,13 +13,16 @@
 import androidx.test.espresso.matcher.ViewMatchers.hasDescendant
 import androidx.test.espresso.matcher.ViewMatchers.isChecked
 import androidx.test.espresso.matcher.ViewMatchers.isDisplayed
+import androidx.test.espresso.matcher.ViewMatchers.isRoot
 import androidx.test.espresso.matcher.ViewMatchers.withId
 import androidx.test.espresso.matcher.ViewMatchers.withText
+import androidx.test.ext.junit.runners.AndroidJUnit4
 import dagger.BindsInstance
 import dagger.Component
 import dagger.Module
 import dagger.Provides
 import kotlinx.coroutines.CoroutineDispatcher
+import kotlinx.coroutines.ExperimentalCoroutinesApi
 import kotlinx.coroutines.test.TestCoroutineDispatcher
 import org.hamcrest.Matchers.not
 import org.junit.After
@@ -29,6 +30,9 @@
 import org.junit.Test
 import org.junit.runner.RunWith
 import org.oppia.app.R
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.StoryTextSize
 import org.oppia.domain.profile.ProfileManagementController
 import org.oppia.domain.profile.ProfileTestHelper
 import org.oppia.util.logging.EnableConsoleLog
@@ -37,6 +41,7 @@
 import org.oppia.util.logging.LogLevel
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
+import org.oppia.app.utility.OrientationChangeAction.Companion.orientationLandscape
 import javax.inject.Inject
 import javax.inject.Qualifier
 import javax.inject.Singleton
@@ -78,6 +83,17 @@
     }
   }
 
+  @Test
+  fun testProfileEditActivity_configurationChange_startActivityWithAdminProfile_checkAdminInfoIsDisplayed() {
+    ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 0)).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.action_bar)).check(matches(hasDescendant(withText("Sean"))))
+      onView(withId(R.id.profile_edit_name)).check(matches(withText("Sean")))
+      onView(withId(R.id.profile_edit_allow_download_container)).check(matches(not(isDisplayed())))
+      onView(withId(R.id.profile_delete_button)).check(matches(not(isDisplayed())))
+    }
+  }
+
   @Test
   fun testProfileEditActivity_startActivityWithUserProfile_checkUserInfoIsDisplayed() {
     ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
@@ -88,6 +104,17 @@
     }
   }
 
+  @Test
+  fun testProfileEditActivity_configurationChange_startActivityWithUserProfile_checkUserInfoIsDisplayed() {
+    ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.action_bar)).check(matches(hasDescendant(withText("Ben"))))
+      onView(withId(R.id.profile_edit_name)).check(matches(withText("Ben")))
+      onView(withId(R.id.profile_edit_allow_download_container)).check(matches((isDisplayed())))
+      onView(withId(R.id.profile_delete_button)).check(matches((isDisplayed())))
+    }
+  }
+
   @Test
   fun testProfileEditActivity_startActivityWithUserProfile_clickRenameButton_checkOpensProfileRenameActivity() {
     ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
@@ -96,6 +123,15 @@
     }
   }
 
+  @Test
+  fun testProfileEditActivity_configurationChange_startActivityWithUserProfile_clickRenameButton_checkOpensProfileRenameActivity() {
+    ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.profile_rename_button)).perform(click())
+      intended(hasComponent(ProfileRenameActivity::class.java.name))
+    }
+  }
+
   @Test
   fun testProfileEditActivity_startActivityWithUserProfile_clickResetPin_checkOpensProfileResetPinActivity() {
     ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
@@ -104,6 +140,16 @@
     }
   }
 
+
+  @Test
+  fun testProfileEditActivity_configurationChange_startActivityWithUserProfile_clickResetPin_checkOpensProfileResetPinActivity() {
+    ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.profile_reset_button)).perform(click())
+      intended(hasComponent(ProfileResetPinActivity::class.java.name))
+    }
+  }
+
   @Test
   fun testProfileEditActivity_startActivityWithUserProfile_clickProfileDeletionButton_checkOpensDeletionDialog() {
     ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
@@ -111,6 +157,15 @@
       onView(withText(R.string.profile_edit_delete_dialog_message)).check(matches(isDisplayed()))
     }
   }
+
+  @Test
+  fun testProfileEditActivity_configurationChange_startActivityWithUserProfile_clickProfileDeletionButton_checkOpensDeletionDialog() {
+    ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.profile_delete_button)).perform(click())
+      onView(withText(R.string.profile_edit_delete_dialog_message)).check(matches(isDisplayed()))
+    }
+  }
 
   @Test
   fun testProfileEditActivity_startActivityWithUserProfile_clickProfileDeletionButton_clickDelete_checkReturnsToProfileListActivity() {
@@ -120,6 +175,16 @@
       intended(hasComponent(ProfileListActivity::class.java.name))
     }
   }
+
+  @Test
+  fun testProfileEditActivity_configurationChange_startActivityWithUserProfile_clickProfileDeletionButton_clickDelete_checkReturnsToProfileListActivity() {
+    ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 1)).use {
+      onView(isRoot()).perform(orientationLandscape())
+      onView(withId(R.id.profile_delete_button)).perform(click())
+      onView(withText(R.string.profile_edit_delete_dialog_positive)).perform(click())
+      intended(hasComponent(ProfileListActivity::class.java.name))
+    }
+  }
 
   @Test
   fun testProfileEditActivity_startActivityWithUserHasDownloadAccess_checkSwitchIsChecked() {
@@ -129,9 +194,31 @@
       avatarImagePath = null,
       allowDownloadAccess = true,
       colorRgb = -10710042,
-      isAdmin = false
+      isAdmin = false,
+      storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+      appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+      audioLanguage = AudioLanguage.NO_AUDIO
+    )
+    ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 2)).use {
+      onView(withId(R.id.profile_edit_allow_download_switch)).check(matches(isChecked()))
+    }
+  }
+
+  @Test
+  fun testProfileEditActivity_configurationChange_startActivityWithUserHasDownloadAccess_checkSwitchIsChecked() {
+    profileManagementController.addProfile(
+      name = "James",
+      pin = "123",
+      avatarImagePath = null,
+      allowDownloadAccess = true,
+      colorRgb = -10710042,
+      isAdmin = false,
+      storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+      appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+      audioLanguage = AudioLanguage.NO_AUDIO
     )
     ActivityScenario.launch<ProfileEditActivity>(ProfileEditActivity.createProfileEditActivity(context, 2)).use {
+      onView(isRoot()).perform(orientationLandscape())
       onView(withId(R.id.profile_edit_allow_download_switch)).check(matches(isChecked()))
     }
   }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(date 1584621433000)
+++ app/build.gradle	(date 1584626399000)
@@ -75,7 +75,7 @@
       'androidx.recyclerview:recyclerview:1.0.0',
       'com.chaos.view:pinview:1.4.3',
       'com.github.bumptech.glide:glide:4.9.0',
-      'com.google.android.material:material:1.0.0-alpha1',
+      'com.google.android.material:material:1.2.0-alpha02',
       'com.google.dagger:dagger:2.24',
       'com.google.guava:guava:28.1-android',
       'de.hdodenhof:circleimageview:3.0.1',
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(date 1584621433000)
+++ app/src/main/AndroidManifest.xml	(date 1584626399000)
@@ -14,22 +14,53 @@
     android:supportsRtl="true"
     android:theme="@style/OppiaTheme">
     <activity
-      android:name=".home.continueplaying.ContinuePlayingActivity"
+      android:name=".administratorcontrols.AdministratorControlsActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".administratorcontrols.appversion.AppVersionActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".completedstorylist.CompletedStoryListActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".help.faq.FAQActivity"
       android:screenOrientation="portrait"
       android:theme="@style/OppiaThemeWithoutActionBar" />
-    <activity android:name=".testing.AudioFragmentTestActivity" />
+    <activity
+      android:name=".help.HelpActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity
       android:name=".home.HomeActivity"
       android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity
-      android:name=".help.HelpActivity"
+      android:name=".home.recentlyplayed.RecentlyPlayedActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".mydownloads.MyDownloadsActivity"
       android:screenOrientation="portrait"
       android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity
-      android:name=".mydownloads.MyDownloadsActivity"
+      android:name=".onboarding.OnboardingActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".ongoingtopiclist.OngoingTopicListActivity"
+      android:screenOrientation="portrait"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".options.AppLanguageActivity"
+      android:screenOrientation="portrait"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".options.DefaultAudioActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".options.OptionsActivity"
       android:screenOrientation="portrait"
       android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity
+      android:name=".options.StoryTextSizeActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
       android:name=".player.exploration.ExplorationActivity"
       android:screenOrientation="portrait"
       android:theme="@style/OppiaThemeWithoutActionBar"
@@ -39,7 +70,6 @@
       android:screenOrientation="portrait" />
     <activity
       android:name=".profile.AdminAuthActivity"
-      android:screenOrientation="portrait"
       android:theme="@style/OppiaThemeWithoutActionBar"
       android:windowSoftInputMode="adjustResize" />
     <activity
@@ -48,19 +78,24 @@
     <activity
       android:name=".profile.PinPasswordActivity"
       android:screenOrientation="portrait"
-      android:theme="@style/OppiaThemeWithoutActionBar" />
+      android:theme="@style/OppiaThemeWithoutActionBar"
+      android:windowSoftInputMode="adjustResize" />
     <activity
       android:name=".profile.ProfileActivity"
       android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity
-      android:name=".settings.profile.ProfileEditActivity"
-      android:screenOrientation="portrait" />
+      android:name=".profileprogress.ProfilePictureActivity"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity
-      android:name=".settings.profile.ProfileListActivity"
-      android:screenOrientation="portrait" />
+      android:name=".profileprogress.ProfileProgressActivity"
+      android:screenOrientation="portrait"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".settings.profile.ProfileEditActivity" />
     <activity
-      android:name=".settings.profile.ProfileRenameActivity"
+      android:name=".settings.profile.ProfileListActivity"
       android:screenOrientation="portrait" />
+    <activity android:name=".settings.profile.ProfileRenameActivity" />
     <activity
       android:name=".settings.profile.ProfileResetPinActivity"
       android:screenOrientation="portrait" />
@@ -79,20 +114,22 @@
     </activity>
     <activity
       android:name=".story.StoryActivity"
-      android:screenOrientation="portrait"
       android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity
-      android:name=".story.testing.StoryFragmentTestActivity"
+      android:name=".testing.StoryFragmentTestActivity"
       android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity android:name=".testing.AudioFragmentTestActivity" />
     <activity android:name=".testing.BindableAdapterTestActivity" />
+    <activity android:name=".testing.ConceptCardFragmentTestActivity" />
     <activity android:name=".testing.ContentCardTestActivity" />
-    <activity android:name=".testing.ContinuePlayingFragmentTestActivity" />
+    <activity android:name=".testing.ExplorationInjectionActivity" />
     <activity android:name=".testing.ExplorationTestActivity" />
     <activity
       android:name=".testing.GridAutoFitLayoutManagerTestActivity"
       android:theme="@style/OppiaThemeWithoutActionBar" />
     <activity android:name=".testing.HtmlParserTestActivity" />
     <activity android:name=".testing.InputInteractionViewTestActivity" />
+    <activity android:name=".testing.RecentlyPlayedFragmentTestActivity" />
     <activity
       android:name=".testing.NavigationDrawerTestActivity"
       android:screenOrientation="portrait"
@@ -103,14 +140,19 @@
     <activity
       android:name=".testing.TopicTestActivityForStory"
       android:theme="@style/OppiaThemeWithoutActionBar" />
-    <activity android:name=".testing.ExplorationInjectionActivity" />
-    <activity android:name=".testing.ConceptCardFragmentTestActivity" />
     <activity
       android:name=".topic.questionplayer.QuestionPlayerActivity"
       android:screenOrientation="portrait" />
     <activity
       android:name=".topic.TopicActivity"
+      android:launchMode="singleInstance"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".topic.reviewcard.ReviewCardActivity"
       android:screenOrientation="portrait"
+      android:theme="@style/OppiaThemeWithoutActionBar" />
+    <activity
+      android:name=".walkthrough.WalkthroughActivity"
       android:theme="@style/OppiaThemeWithoutActionBar" />
   </application>
 </manifest>
Index: app/src/main/java/org/oppia/app/topic/TopicActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/TopicActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/TopicActivity.kt	(date 1584626399000)
@@ -7,72 +7,90 @@
 import org.oppia.app.home.RouteToExplorationListener
 import org.oppia.app.player.exploration.ExplorationActivity
 import org.oppia.app.story.StoryActivity
-import org.oppia.app.topic.conceptcard.ConceptCardFragment
-import org.oppia.app.topic.conceptcard.ConceptCardListener
 import org.oppia.app.topic.questionplayer.QuestionPlayerActivity
+import org.oppia.app.topic.reviewcard.ReviewCardActivity
 import javax.inject.Inject
 
-const val TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY = "TopicActivity.topic_id"
+private const val TOPIC_ACTIVITY_INTERNAL_PROFILE_ID_ARGUMENT_KEY = "TopicActivity.internal_profile_id"
+private const val TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY = "TopicActivity.topic_id"
+private const val TOPIC_ACTIVITY_STORY_ID_ARGUMENT_KEY = "TopicActivity.story_id"
 
 /** The activity for displaying [TopicFragment]. */
-class TopicActivity : InjectableAppCompatActivity(), RouteToQuestionPlayerListener, RouteToConceptCardListener,
-  RouteToStoryListener, RouteToExplorationListener, ConceptCardListener {
+class TopicActivity : InjectableAppCompatActivity(), RouteToQuestionPlayerListener,
+  RouteToStoryListener, RouteToExplorationListener, RouteToReviewCardListener {
+
+  private var internalProfileId: Int = -1
   private lateinit var topicId: String
   private var storyId: String? = null
-  @Inject lateinit var topicActivityPresenter: TopicActivityPresenter
+  @Inject
+  lateinit var topicActivityPresenter: TopicActivityPresenter
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
-    topicId = checkNotNull(intent?.getStringExtra(org.oppia.app.topic.TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY)) {
+    internalProfileId = intent?.getIntExtra(TOPIC_ACTIVITY_INTERNAL_PROFILE_ID_ARGUMENT_KEY, -1)!!
+    topicId = checkNotNull(intent?.getStringExtra(TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY)) {
       "Expected topic ID to be included in intent for TopicActivity."
     }
     storyId = intent?.getStringExtra(TOPIC_ACTIVITY_STORY_ID_ARGUMENT_KEY)
-    topicActivityPresenter.handleOnCreate(topicId, storyId)
+    topicActivityPresenter.handleOnCreate(internalProfileId, topicId, storyId)
   }
 
   override fun routeToQuestionPlayer(skillIdList: ArrayList<String>) {
     startActivity(QuestionPlayerActivity.createQuestionPlayerActivityIntent(this, skillIdList))
   }
 
-  override fun routeToStory(storyId: String) {
-    startActivity(StoryActivity.createStoryActivityIntent(this, storyId))
+  override fun routeToStory(internalProfileId: Int, topicId: String, storyId: String) {
+    startActivity(StoryActivity.createStoryActivityIntent(this, internalProfileId, topicId, storyId))
   }
 
-  override fun routeToConceptCard(skillId: String) {
-    if (getConceptCardFragment() == null) {
-      val conceptCardFragment: ConceptCardFragment = ConceptCardFragment.newInstance(skillId)
-      conceptCardFragment.showNow(supportFragmentManager, TAG_CONCEPT_CARD_DIALOG)
-    }
+  override fun routeToReviewCard(topicId: String, subtopicId: String) {
+    startActivity(ReviewCardActivity.createReviewCardActivityIntent(this, topicId, subtopicId))
   }
 
-  override fun dismiss() {
-    getConceptCardFragment()?.dismiss()
-  }
-
-  override fun routeToExploration(explorationId: String, topicId: String?) {
-    startActivity(ExplorationActivity.createExplorationActivityIntent(this, explorationId, topicId))
-  }
-
-  private fun getConceptCardFragment(): ConceptCardFragment? {
-    return supportFragmentManager.findFragmentByTag(TAG_CONCEPT_CARD_DIALOG) as ConceptCardFragment?
+  override fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    startActivity(
+      ExplorationActivity.createExplorationActivityIntent(
+        this,
+        internalProfileId,
+        topicId,
+        storyId,
+        explorationId
+      )
+    )
   }
 
   companion object {
-    internal const val TAG_CONCEPT_CARD_DIALOG = "CONCEPT_CARD_DIALOG"
-    internal const val TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY = "TopicActivity.topic_id"
-    internal const val TOPIC_ACTIVITY_STORY_ID_ARGUMENT_KEY = "TopicActivity.story_id"
+
+    fun getProfileIdKey(): String {
+      return TOPIC_ACTIVITY_INTERNAL_PROFILE_ID_ARGUMENT_KEY
+    }
+
+    fun getTopicIdKey(): String {
+      return TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY
+    }
+
+    fun getStoryIdKey(): String {
+      return TOPIC_ACTIVITY_STORY_ID_ARGUMENT_KEY
+    }
 
     /** Returns a new [Intent] to route to [TopicActivity] for a specified topic ID. */
-    fun createTopicActivityIntent(context: Context, topicId: String): Intent {
+    fun createTopicActivityIntent(context: Context, internalProfileId: Int, topicId: String): Intent {
       val intent = Intent(context, TopicActivity::class.java)
+      intent.putExtra(TOPIC_ACTIVITY_INTERNAL_PROFILE_ID_ARGUMENT_KEY, internalProfileId)
       intent.putExtra(TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, topicId)
       return intent
     }
 
-    /** Returns a new [Intent] to route to [TopicPlayFragment] for a specified story ID. */
-    fun createTopicPlayStoryActivityIntent(context: Context, topicId: String, storyId: String): Intent {
+    /** Returns a new [Intent] to route to [TopicLessonsFragment] for a specified story ID. */
+    fun createTopicPlayStoryActivityIntent(
+      context: Context,
+      internalProfileId: Int,
+      topicId: String,
+      storyId: String
+    ): Intent {
       val intent = Intent(context, TopicActivity::class.java)
+      intent.putExtra(TOPIC_ACTIVITY_INTERNAL_PROFILE_ID_ARGUMENT_KEY, internalProfileId)
       intent.putExtra(TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, topicId)
       intent.putExtra(TOPIC_ACTIVITY_STORY_ID_ARGUMENT_KEY, storyId)
       return intent
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(date 1584621433000)
+++ app/src/main/res/values/dimens.xml	(date 1584626399000)
@@ -23,4 +23,8 @@
   <dimen name="padding_20">20dp</dimen>
   <dimen name="margin_32">32dp</dimen>
   <dimen name="margin_8">8dp</dimen>
+  <dimen name="dot_width_height">8dp</dimen>
+  <dimen name="dot_gap">4dp</dimen>
+  <dimen name="enter_text_view_padding_start">60dp</dimen>
+  <dimen name="enter_text_view_padding_end">60dp</dimen>
 </resources>
Index: model/src/main/proto/example.proto
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/src/main/proto/example.proto	(date 1584621433000)
+++ model/src/main/proto/example.proto	(date 1584626399000)
@@ -5,10 +5,6 @@
 option java_package = "org.oppia.app.model";
 option java_multiple_files = true;
 
-message UserAppHistory {
-  bool already_opened_app = 1;
-}
-
 message TestMessage {
   int32 version = 1;
 }
Index: model/src/main/proto/topic.proto
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/src/main/proto/topic.proto	(date 1584621433000)
+++ model/src/main/proto/topic.proto	(date 1584626399000)
@@ -32,6 +32,9 @@
 
   // The number of on-disk bytes this topic consumes.
   int64 disk_size_bytes = 7;
+
+  // A list of subtopic contained within this topic.
+  repeated Subtopic subtopic = 8;
 }
 
 // Corresponds to a concept card that can be displayed for a specific skill.
@@ -65,8 +68,11 @@
   // The name of the story.
   string story_name = 2;
 
+  // The thumbnail corresponding to this story.
+  LessonThumbnail story_thumbnail = 3;
+
   // A list of summarized chapters/explorations that can be played within the story.
-  repeated ChapterSummary chapter = 3;
+  repeated ChapterSummary chapter = 4;
 }
 
 // A summary of a chapter/exploration that can be played.
@@ -80,20 +86,6 @@
   // Summary of this chapter.
   string summary = 3;
 
-  enum Playability {
-    // The completion status is unknown.
-    COMPLETION_STATUS_UNSPECIFIED = 0;
-
-    // The chapter has not yet been started, but can be started by the player.
-    NOT_STARTED = 1;
-
-    // The chapter has not yet been started, and can't since the player is missing prerequisites.
-    MISSING_PREREQUISITES = 2;
-
-    // The chapter has been completed by the player.
-    COMPLETED = 3;
-  }
-
   // Indicates the playable state of the current chapter, including whether it's already been completed.
   ChapterPlayState chapter_play_state = 4;
 
@@ -126,17 +118,41 @@
   int64 last_update_time_ms = 2;
 }
 
+// Corresponds to the list of topics that are currently being played and are not fully finished.
+message OngoingTopicList {
+  // All topics that are currently being played and have not finished.
+  repeated Topic topic = 1;
+}
+
 // Corresponds to the list of topics that can be shown on the homescreen.
 message TopicList {
-  // Corresponds to the story promoted at the top of the homescreen. Either the story is in-progress, or it's a
-  // recommended story if no other stories are in progress.
-  PromotedStory promoted_story = 1;
 
   // All topics that are available to the player.
   repeated TopicSummary topic_summary = 2;
 }
 
-// Corresponds to the list of stories the player is currently playing.
+// Corresponds to the list of stories that have been completed across all topics.
+message CompletedStoryList {
+  // List of completed stories
+  repeated CompletedStory completed_story = 1;
+}
+
+// The summary of a story that has been completed for a profile.
+message CompletedStory {
+  // The ID of the story being completed.
+  string story_id = 1;
+
+  // The name of the story being completed.
+  string story_name = 2;
+
+  // The name of the topic this story is part of.
+  string topic_name = 3;
+
+  // The thumbnail that should be displayed for this completed story.
+  LessonThumbnail lesson_thumbnail = 4;
+}
+
+// Corresponds to the list of stories the player is currently playing across all topics.
 message OngoingStoryList {
   // Ongoing stories from within the last 7 days.
   repeated PromotedStory recent_story = 1;
@@ -221,24 +237,47 @@
   // The chapter has not yet been started, and cannot be started since the player is missing prerequisites.
   NOT_PLAYABLE_MISSING_PREREQUISITES = 2;
 
+  // The chapter has been started but not completed by the player.
+  STARTED_NOT_COMPLETED = 3;
+
   // The chapter has been completed by the player.
-  COMPLETED = 3;
+  COMPLETED = 4;
+}
+
+// Top level proto used to store topic progress per-profile.
+message TopicProgressDatabase {
+  // Map from topic ID to TopicProgress.
+  map<string, TopicProgress> topic_progress = 1;
 }
 
-// Represents the progress a player has made for a story.
+// Represents the topic progress.
+message TopicProgress {
+  // The ID corresponding to the topic.
+  string topic_id = 1;
+
+  // Map from story ID to StoryProgress.
+  map<string, StoryProgress> story_progress = 2;
+}
+
+// Represents the story progress.
 message StoryProgress {
-  // Represents the progress a learner has made on a single chapter. These chapters are kept in the same order they
-  // should be completed within the story.
-  repeated ChapterProgress chapter_progress = 1;
+  // The ID corresponding to the story.
+  string story_id = 1;
+
+  // Map from exploration ID to ChapterPlayState.
+  map<string, ChapterProgress> chapter_progress = 2;
 }
 
-// Represents the progress a player has made on a single chapter.
+// Represents the chapter progress.
 message ChapterProgress {
-  // The exploration ID of the chapter with possible progress made.
+  // The ID corresponding to the exploration.
   string exploration_id = 1;
 
-  // Corresponds to whether this chapter is playable or has been started.
-  ChapterPlayState play_state = 2;
+  // The playability state of chapter.
+  ChapterPlayState chapter_play_state = 2;
+
+  // Timestamp to record last time the exploration was played in ms.
+  int64 last_played_timestamp = 3;
 }
 
 // Represents user's preference for using cellular data
@@ -249,3 +288,39 @@
   // Preference on whether to use cellular data
   bool use_cellular_data = 2;
 }
+
+// Corresponds to a single subtopic.
+message Subtopic {
+  // The ID of the subtopic.
+  string subtopic_id = 1;
+
+  // The title of the subtopic.
+  string title = 2;
+
+  // The list of skill ids associated with the subtopic.
+  repeated string skill_ids = 3;
+
+  // A URL corresponding to a thumbnail associated with this subtopic. If this is absent, the UI should show a reasonable
+  // alternative.
+  string thumbnail_url = 4;
+
+  // The thumbnail corresponding to this subtopic.
+  SubtopicThumbnail subtopic_thumbnail = 5;
+}
+
+// Corresponds to a review card that can be displayed for a specific subtopic.
+message ReviewCard {
+  // The title corresponding to the subtopic.
+  string subtopic_title = 1;
+
+  // The core explanation of the subtopic being reviewed.
+  SubtitledHtml page_contents = 3;
+
+  // Mapping from content_id to a VoiceoverMapping for each SubtitledHtml in this review card that has corresponding
+  // recorded audio to play.
+  map<string, VoiceoverMapping> recorded_voiceover = 5;
+
+  // Mapping from content_id to a TranslationMapping for each SubtitledHtml in this review card that has corresponding
+  // translations.
+  map<string, TranslationMapping> written_translation = 6;
+}
Index: model/src/main/proto/thumbnail.proto
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/src/main/proto/thumbnail.proto	(date 1584621433000)
+++ model/src/main/proto/thumbnail.proto	(date 1584626399000)
@@ -75,3 +75,28 @@
   // Corresponds to Derive a ratio from a description or picture skill.
   DERIVE_A_RATIO = 8;
 }
+
+// Represents the thumbnail that should be rendered for a subtopic.
+message SubtopicThumbnail {
+  // The graphic corresponding to this thumbnail.
+  SubtopicThumbnailGraphic thumbnail_graphic = 1;
+}
+
+// Corresponds to different types of thumbnails that may be used by subtopics in a topic. These currently only
+// correspond to in-app thumbnails, but may later indicate that a subtopic has a downloadable thumbnail to use, instead.
+enum SubtopicThumbnailGraphic {
+  // Corresponds to Identifying the parts of a fraction subtopic. Also, acts as default thumbnail for subtopic.
+  WHAT_IS_A_FRACTION = 0;
+
+  // Corresponds to Grouping Fractions subtopic.
+  FRACTION_OF_A_GROUP = 1;
+
+  // Corresponds to Mixed Numberes Fractions subtopic.
+  MIXED_NUMBERS = 2;
+
+  // Corresponds to Adding Fractions subtopic.
+  ADDING_FRACTIONS = 3;
+
+  // Corresponds to Number line Fractions subtopic.
+  THE_NUMBER_LINE = 4;
+}
Index: app/src/main/java/org/oppia/app/player/state/StateFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/StateFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/StateFragmentPresenter.kt	(date 1584626399000)
@@ -36,12 +36,14 @@
 import org.oppia.app.model.AnswerOutcome
 import org.oppia.app.model.EphemeralState
 import org.oppia.app.model.Interaction
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.State
 import org.oppia.app.model.SubtitledHtml
-import org.oppia.app.player.audio.AudioButtonListener
 import org.oppia.app.model.UserAnswer
+import org.oppia.app.player.audio.AudioButtonListener
 import org.oppia.app.player.audio.AudioFragment
 import org.oppia.app.player.audio.AudioUiManager
+import org.oppia.app.player.state.answerhandling.InteractionAnswerErrorReceiver
 import org.oppia.app.player.state.answerhandling.InteractionAnswerReceiver
 import org.oppia.app.player.state.itemviewmodel.ContentViewModel
 import org.oppia.app.player.state.itemviewmodel.ContinueInteractionViewModel
@@ -68,6 +70,9 @@
 import org.oppia.util.parser.HtmlParser
 import javax.inject.Inject
 
+const val STATE_FRAGMENT_PROFILE_ID_ARGUMENT_KEY = "STATE_FRAGMENT_PROFILE_ID_ARGUMENT_KEY"
+const val STATE_FRAGMENT_TOPIC_ID_ARGUMENT_KEY = "STATE_FRAGMENT_TOPIC_ID_ARGUMENT_KEY"
+const val STATE_FRAGMENT_STORY_ID_ARGUMENT_KEY = "STATE_FRAGMENT_STORY_ID_ARGUMENT_KEY"
 const val STATE_FRAGMENT_EXPLORATION_ID_ARGUMENT_KEY = "STATE_FRAGMENT_EXPLORATION_ID_ARGUMENT_KEY"
 private const val TAG_AUDIO_FRAGMENT = "AUDIO_FRAGMENT"
 
@@ -87,6 +92,9 @@
 ) : StateNavigationButtonListener, PreviousResponsesHeaderClickListener {
 
   private var feedbackId: String? = null
+  private lateinit var profileId: ProfileId
+  private lateinit var topicId: String
+  private lateinit var storyId: String
   private lateinit var explorationId: String
   private lateinit var currentStateName: String
   private lateinit var binding: StateFragmentBinding
@@ -100,7 +108,7 @@
   /**
    * A list of view models corresponding to past view models that are hidden by default. These are intentionally not
    * retained upon configuration changes since the user can just re-expand the list. Note that the first element of this
-   * list (when initialized), will always be the previous answers header to help locate the items in the recycler view
+   * list (when initialized), will always be the previous answer's header to help locate the items in the recycler view
    * (when present).
    */
   private val previousAnswerViewModels: MutableList<StateItemViewModel> = mutableListOf()
@@ -109,8 +117,13 @@
    * configuration changes since the user can just re-expand the list.
    */
   private var hasPreviousResponsesExpanded: Boolean = false
+  private lateinit var stateNavigationButtonViewModel: StateNavigationButtonViewModel
 
   fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    val internalProfileId = fragment.arguments!!.getInt(STATE_FRAGMENT_PROFILE_ID_ARGUMENT_KEY, -1)
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+    topicId = fragment.arguments!!.getString(STATE_FRAGMENT_TOPIC_ID_ARGUMENT_KEY)!!
+    storyId = fragment.arguments!!.getString(STATE_FRAGMENT_STORY_ID_ARGUMENT_KEY)!!
     explorationId = fragment.arguments!!.getString(STATE_FRAGMENT_EXPLORATION_ID_ARGUMENT_KEY)!!
 
     binding = StateFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
@@ -399,7 +412,7 @@
     Handler().postDelayed({
       binding.congratulationTextview.clearAnimation()
       binding.congratulationTextview.visibility = View.INVISIBLE
-    },2000)
+    }, 2000)
   }
 
   /** Helper for subscribeToAnswerOutcome. */
@@ -440,7 +453,8 @@
 
   fun handleKeyboardAction() {
     hideKeyboard()
-    handleSubmitAnswer(viewModel.getPendingAnswer())
+    if (stateNavigationButtonViewModel.isInteractionButtonActive.get()!!)
+      handleSubmitAnswer(viewModel.getPendingAnswer())
   }
 
   override fun onContinueButtonClicked() {
@@ -473,7 +487,7 @@
   ) {
     val interactionViewModelFactory = interactionViewModelFactoryMap.getValue(interaction.id)
     pendingItemList += interactionViewModelFactory(
-      explorationId, interaction, fragment as InteractionAnswerReceiver
+      explorationId, interaction, fragment as InteractionAnswerReceiver, fragment as InteractionAnswerErrorReceiver
     )
   }
 
@@ -559,7 +573,7 @@
     hasGeneralContinueButton: Boolean,
     stateIsTerminal: Boolean
   ) {
-    val stateNavigationButtonViewModel =
+    stateNavigationButtonViewModel =
       StateNavigationButtonViewModel(context, this as StateNavigationButtonListener)
     stateNavigationButtonViewModel.updatePreviousButton(isEnabled = hasPreviousState)
 
@@ -611,4 +625,13 @@
   }
 
   private fun isAudioShowing(): Boolean = viewModel.isAudioBarVisible.get()!!
+
+  /** Updates submit button UI as active if pendingAnswerError null else inactive. */
+  fun updateSubmitButton(pendingAnswerError: String?) {
+    if (pendingAnswerError != null) {
+      stateNavigationButtonViewModel.isInteractionButtonActive.set(false)
+    } else {
+      stateNavigationButtonViewModel.isInteractionButtonActive.set(true)
+    }
+  }
 }
Index: utility/src/main/java/org/oppia/util/data/AsyncResult.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- utility/src/main/java/org/oppia/util/data/AsyncResult.kt	(date 1584621433000)
+++ utility/src/main/java/org/oppia/util/data/AsyncResult.kt	(date 1584626399000)
@@ -65,20 +65,67 @@
    * Note also that the specified transformation function should have no side effects, and be non-blocking.
    */
   fun <O> transform(transformFunction: (T) -> O): AsyncResult<O> {
-    return when(status) {
-      Status.PENDING -> pending()
-      Status.FAILED -> failed(ChainedFailureException(error!!))
-      Status.SUCCEEDED -> success(transformFunction(value!!))
+    return transformWithResult { value ->
+      success(transformFunction(value))
     }
   }
 
   /**
    * Returns a transformed version of this result in the same way as [transform] except it supports using a blocking
    * transformation function instead of a non-blocking one. Note that the transform function is only used if the current
-   * result is a success, at which case the function's result becomes the new transformed result.
+   * result is a success, at which case the function's result becomes the new, transformed result.
    */
   suspend fun <O> transformAsync(transformFunction: suspend (T) -> AsyncResult<O>): AsyncResult<O> {
-    return when(status) {
+    return transformWithResultAsync { value ->
+      transformFunction(value)
+    }
+  }
+
+  /**
+   * Returns a version of this result that retains its pending and failed states, but combines its success state with
+   * the success state of another result, according to the specified combine function.
+   *
+   * Note that if the other result is either pending or failed, that pending or failed state will be propagated to the
+   * returned result rather than attempting to combine the two states. Only successful states are combined.
+   *
+   * Note that if the current result is a failure, the transformed result's failure will be a chained exception with
+   * this result's failure as the root cause to preserve this combination in the exception's stacktrace.
+   *
+   * Note also that the specified combine function should have no side effects, and be non-blocking.
+   */
+  fun <O, T2> combineWith(otherResult: AsyncResult<T2>, combineFunction: (T, T2) -> O): AsyncResult<O> {
+    return transformWithResult { value1 ->
+      otherResult.transformWithResult { value2 ->
+        success(combineFunction(value1, value2))
+      }
+    }
+  }
+
+  /**
+   * Returns a version of this result that is combined with another result in the same way as [combineWith], except it
+   * supports using a blocking combine function instead of a non-blocking one. Note that the combine function is only
+   * used if both results are a success, at which case the function's result becomes the new, combined result.
+   */
+  suspend fun <O, T2> combineWithAsync(
+    otherResult: AsyncResult<T2>, combineFunction: suspend (T, T2) -> AsyncResult<O>
+  ): AsyncResult<O> {
+    return transformWithResultAsync { value1 ->
+      otherResult.transformWithResultAsync { value2 ->
+        combineFunction(value1, value2)
+      }
+    }
+  }
+
+  private fun <O> transformWithResult(transformFunction: (T) -> AsyncResult<O>): AsyncResult<O> {
+    return when (status) {
+      Status.PENDING -> pending()
+      Status.FAILED -> failed(ChainedFailureException(error!!))
+      Status.SUCCEEDED -> transformFunction(value!!)
+    }
+  }
+
+  private suspend fun <O> transformWithResultAsync(transformFunction: suspend (T) -> AsyncResult<O>): AsyncResult<O> {
+    return when (status) {
       Status.PENDING -> pending()
       Status.FAILED -> failed(ChainedFailureException(error!!))
       Status.SUCCEEDED -> transformFunction(value!!)
Index: utility/src/main/java/org/oppia/util/data/DataProviders.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- utility/src/main/java/org/oppia/util/data/DataProviders.kt	(date 1584621433000)
+++ utility/src/main/java/org/oppia/util/data/DataProviders.kt	(date 1584626399000)
@@ -72,6 +72,57 @@
     }
   }
 
+  /**
+   * Returns a new [DataProvider] that combines two other providers by applying the specified function to produce a new
+   * value each time either data provider changes.
+   *
+   * Notifications to the original data providers will also notify subscribers to the combined data provider of
+   * changes, but not vice versa.
+   *
+   * Note that the combine function should be non-blocking, have no side effects, and be thread-safe since it may be
+   * called on different background threads at different times. It should perform no UI operations or otherwise interact
+   * with UI components.
+   */
+  fun <O, T1, T2> combine(
+    newId: Any, dataProvider1: DataProvider<T1>, dataProvider2: DataProvider<T2>, function: (T1, T2) -> O
+  ): DataProvider<O> {
+    asyncDataSubscriptionManager.associateIds(newId, dataProvider1.getId())
+    asyncDataSubscriptionManager.associateIds(newId, dataProvider2.getId())
+    return object: DataProvider<O> {
+      override fun getId(): Any {
+        return newId
+      }
+
+      override suspend fun retrieveData(): AsyncResult<O> {
+        return try {
+          dataProvider1.retrieveData().combineWith(dataProvider2.retrieveData(), function)
+        } catch (t: Throwable) {
+          AsyncResult.failed(t)
+        }
+      }
+    }
+  }
+
+  /**
+   * Returns a transformed [DataProvider] in the same way as [combine] except the combine function can be blocking.
+   */
+  fun <O, T1, T2> combineAsync(
+    newId: Any, dataProvider1: DataProvider<T1>, dataProvider2: DataProvider<T2>,
+    function: suspend (T1, T2) -> AsyncResult<O>
+  ): DataProvider<O> {
+    asyncDataSubscriptionManager.associateIds(newId, dataProvider1.getId())
+    asyncDataSubscriptionManager.associateIds(newId, dataProvider2.getId())
+    return object: DataProvider<O> {
+      override fun getId(): Any {
+        return newId
+      }
+
+      override suspend fun retrieveData(): AsyncResult<O> {
+        return dataProvider1.retrieveData().combineWithAsync(dataProvider2.retrieveData(), function)
+      }
+    }
+  }
+
   /**
    * Returns a new in-memory [DataProvider] with the specified function being called each time the provider's data is
    * retrieved, and the specified identifier.
Index: app/src/main/java/org/oppia/app/topic/TopicFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/TopicFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/TopicFragmentPresenter.kt	(date 1584626399000)
@@ -13,6 +13,7 @@
 import org.oppia.app.R
 import org.oppia.app.databinding.TopicFragmentBinding
 import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.Topic
 import org.oppia.domain.topic.TopicController
 import org.oppia.util.data.AsyncResult
@@ -28,20 +29,22 @@
 ) {
   private lateinit var tabLayout: TabLayout
   private lateinit var topicToolbar: Toolbar
+  private var internalProfileId: Int = -1
   private lateinit var topicId: String
   lateinit var storyId: String
   private lateinit var viewPager: ViewPager
   private val tabIcons =
     intArrayOf(
       R.drawable.ic_info_icon_24dp,
-      R.drawable.ic_play_icon_24dp,
-      R.drawable.ic_train_icon_24dp,
+      R.drawable.ic_lessons_icon_24dp,
+      R.drawable.ic_practice_icon_24dp,
       R.drawable.ic_review_icon_24dp
     )
 
   fun handleCreateView(
     inflater: LayoutInflater,
     container: ViewGroup?,
+    internalProfileId: Int,
     topicId: String
   ): View? {
     val binding = TopicFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
@@ -50,6 +53,7 @@
     viewPager = binding.root.findViewById(R.id.topic_tabs_viewpager) as ViewPager
     tabLayout = binding.root.findViewById(R.id.topic_tabs_container) as TabLayout
     topicToolbar = binding.root.findViewById(R.id.topic_toolbar) as Toolbar
+    this.internalProfileId = internalProfileId
     this.topicId = topicId
     setUpViewPager(viewPager, topicId)
     subscribeToTopicLiveData()
@@ -61,15 +65,15 @@
   }
 
   private fun setUpViewPager(viewPager: ViewPager, topicId: String) {
-    val adapter = ViewPagerAdapter(fragment.childFragmentManager, topicId, storyId)
+    val adapter = ViewPagerAdapter(fragment.childFragmentManager, internalProfileId, topicId, storyId)
     viewPager.adapter = adapter
     tabLayout.setupWithViewPager(viewPager)
     tabLayout.getTabAt(0)!!.setText(fragment.getString(R.string.info)).setIcon(tabIcons[0])
-    tabLayout.getTabAt(1)!!.setText(fragment.getString(R.string.play)).setIcon(tabIcons[1])
-    tabLayout.getTabAt(2)!!.setText(fragment.getString(R.string.train)).setIcon(tabIcons[2])
+    tabLayout.getTabAt(1)!!.setText(fragment.getString(R.string.lessons)).setIcon(tabIcons[1])
+    tabLayout.getTabAt(2)!!.setText(fragment.getString(R.string.practice)).setIcon(tabIcons[2])
     tabLayout.getTabAt(3)!!.setText(fragment.getString(R.string.review)).setIcon(tabIcons[3])
     if (topicId.isNotEmpty() && storyId.isNotEmpty())
-      setCurrentTab(TopicTab.PLAY)
+      setCurrentTab(TopicTab.LESSONS)
   }
 
   private val topicLiveData: LiveData<Topic> by lazy { getTopic() }
@@ -77,12 +81,12 @@
   private fun subscribeToTopicLiveData() {
     topicLiveData.observe(fragment, Observer<Topic> { result ->
       val topicName = result.name
-      topicToolbar.title = fragment.getString(R.string.topic_prefix) + " " + topicName
+      topicToolbar.title = fragment.getString(R.string.topic_heading, topicName)
     })
   }
 
   private val topicResultLiveData: LiveData<AsyncResult<Topic>> by lazy {
-    topicController.getTopic(topicId = topicId)
+    topicController.getTopic(ProfileId.newBuilder().setInternalId(internalProfileId).build(), topicId = topicId)
   }
 
   private fun getTopic(): LiveData<Topic> {
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(date 1584621433000)
+++ app/src/main/res/values/colors.xml	(date 1584626399000)
@@ -12,6 +12,7 @@
   <color name="oppiaDarkBlue">#2D4A9D</color>
   <color name="oppiaPrimaryText">#333333</color>
   <color name="oppiaPrimaryText30">#4D333333</color>
+  <color name="oppiaPrimaryTextDark">#DE000000</color>
   <color name="oppiaPrimaryDark">#00645C</color>
   <color name="oppiaSecondaryText">#666666</color>
   <color name="oppiaLightGreen">#F0FFFF</color>
@@ -26,8 +27,10 @@
   <color name="oppiaProgressChapterFinished">#E76F51</color>
   <color name="oppiaProgressChapterNotFinished">#999999</color>
   <color name="oppiaDisabledButtonBackground">#61999999</color>
+  <color name="oppiaTextShadow">#1F000000</color>
   <color name="oppiaGreyBorder">#DDDDDD</color>
   <color name="oppiaDashedDivider">#80707070</color>
+  <color name="oppiaBackgroundYellowIvory">#FFFFF0</color>
   <!-- BASIC COLORS -->
   <color name="white">#FFFFFF</color>
   <color name="white_80">#CCFFFFFF</color>
@@ -47,14 +50,20 @@
   <color name="profileChooserGreyTextColor">#999999</color>
   <color name="profileImagePlaceHolder">#26A69A</color>
   <color name="profileEditBackground">#E5E5E5</color>
+  <color name="appVersionBackground">#E5E5E5</color>
   <color name="highlightedNavMenuItem">#C55F45</color>
   <color name="navBarHeaderBackground">#264653</color>
   <!-- SUBMIT BUTTON INACTIVE -->
-  <color name="submitButtonInactive">#61000000</color>
+  <color name="defaultAudioActivityRadioButton">#00A89F</color>
+  <color name="submitButtonInactive">#61999999</color>
   <color name="grey">#CCCCCC</color>
   <!-- INPUT LAYOUT EDITTEXT -->
-  <color name="edit_text_hint">#80333333</color>
+  <color name="editTextError">#AB0517</color>
+  <color name="editTextHint">#80333333</color>
   <color name="mid_grey">#ff333333</color>
+  <color name="mid_grey_05">#0D000000</color>
+  <color name="mid_grey_03">#03000000</color>
+  <color name="mid_grey_30">#0D000000</color>
   <color name="blue_shade">#395FD0</color>
   <color name="blue_shade_80">#80395FD0</color>
   <color name="blue_shade_60">#60395FD0</color>
@@ -65,6 +74,7 @@
   <color name="grey_shade_20">#D6D6D6</color>
   <color name="grey_shade_30">#5CBABABA</color>
   <color name="grey_shade_40">#0000003D</color>
+  <color name="grey_shade_29">#4A000000</color>
   <color name="blue_shade_100">#0F0086FB</color>
   <color name="blue_shade_200">#6B0086FB</color>
   <color name="chapterCardShadow">#AAFFFFFF</color>
@@ -78,6 +88,9 @@
   <color name="green_shade_40">#6644A85A</color>
   <color name="green_shade_10">#1A44A85A</color>
   <color name="light_green">#D9F3E7</color>
+  <!-- ONBOARDING FLOW -->
+  <color name="onboardingDotActive">#333333</color>
+  <color name="onboardingDotInactive">#4D333333</color>
   <!-- AVATAR BACKGROUND COLORS -->
   <color name="avatar_background_1">#E65C5C</color>
   <color name="avatar_background_2">#E6935C</color>
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(date 1584621433000)
+++ app/src/main/res/values/styles.xml	(date 1584626399000)
@@ -1,13 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
 
-  <style name="OppiaTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+  <style name="OppiaTheme" parent="Theme.MaterialComponents.Light.DarkActionBar.Bridge">
     <item name="colorPrimary">@color/colorPrimary</item>
     <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
     <item name="colorAccent">@color/colorPrimary</item>
   </style>
 
-  <style name="OppiaThemeWithoutActionBar" parent="Theme.AppCompat.Light.NoActionBar">
+  <style name="OppiaThemeWithoutActionBar" parent="Theme.MaterialComponents.Light.NoActionBar.Bridge">
     <item name="colorPrimary">@color/colorPrimary</item>
     <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
     <item name="colorAccent">@color/colorAccent</item>
@@ -39,7 +39,7 @@
     <item name="android:activityOpenExitAnimation">@anim/fade_out</item>
   </style>
 
-  <style name="FullScreenDialogStyle" parent="Theme.AppCompat.Dialog">
+  <style name="FullScreenDialogStyle" parent="Theme.MaterialComponents.Dialog.Bridge">
     <item name="android:windowNoTitle">true</item>
     <item name="colorPrimaryDark">@color/colorConceptToolbarHeading</item>
     <!-- Set this to true if you want Full Screen without status bar -->
@@ -51,6 +51,19 @@
     <item name="android:windowEnterAnimation">@anim/slide_up</item>
     <item name="android:windowExitAnimation">@anim/slide_down</item>
   </style>
+
+  <style name="FullScreenReviewDialogStyle" parent="Theme.MaterialComponents.Dialog.Bridge">
+    <item name="android:windowNoTitle">true</item>
+    <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+    <!-- Set this to true if you want Full Screen without status bar -->
+    <item name="android:windowFullscreen">false</item>
+    <item name="android:windowIsFloating">false</item>
+    <!-- This is important! Don't forget to set window background -->
+    <item name="android:windowBackground">@color/white</item>
+    <!-- Additionally if you want animations when dialog opening -->
+    <item name="android:windowEnterAnimation">@anim/slide_up</item>
+    <item name="android:windowExitAnimation">@anim/slide_down</item>
+  </style>
   <!-- STATE BUTTON ACTIVE STYLE -->
   <style name="StateButtonActive" parent="TextAppearance.AppCompat.Widget.Button">
     <item name="android:layout_width">wrap_content</item>
@@ -66,11 +79,20 @@
     <item name="android:textSize">14sp</item>
     <item name="android:clickable">true</item>
   </style>
+
+  <style name="SwitchCompatTheme" parent="Theme.MaterialComponents.Light.NoActionBar.Bridge">
+    <item name="colorControlActivated">@color/colorPrimary</item>
+  </style>
 
   <style name="TabLayout" parent="Widget.Design.TabLayout">
     <item name="tabTextAppearance">@style/TabLayoutTextAppearance</item>
   </style>
 
+  <style name="ToolbarTextAppearance" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">
+    <item name="android:textSize">24sp</item>
+    <item name="android:textColor">@color/white</item>
+  </style>
+
   <style name="TabLayoutTextAppearance" parent="TextAppearance.Design.Tab">
     <item name="textAllCaps">true</item>
     <item name="android:textAllCaps">true</item>
@@ -92,12 +114,10 @@
     <item name="android:clickable">false</item>
   </style>
 
-  <style name="AlertDialogTheme" parent="Theme.AppCompat.Light.Dialog.Alert">
+  <style name="AlertDialogTheme" parent="Theme.MaterialComponents.Light.Dialog.Alert.Bridge">
     <item name="colorPrimary">@color/colorPrimary</item>
     <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
     <item name="colorAccent">@color/colorPrimary</item>
-    <item name="android:buttonBarNegativeButtonStyle">@style/textAllCaps</item>
-    <item name="android:buttonBarPositiveButtonStyle">@style/textAllCaps</item>
   </style>
 
   <style name="textAllCaps">
Index: utility/src/test/java/org/oppia/util/data/DataProvidersTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- utility/src/test/java/org/oppia/util/data/DataProvidersTest.kt	(date 1584621433000)
+++ utility/src/test/java/org/oppia/util/data/DataProvidersTest.kt	(date 1584626399000)
@@ -40,13 +40,19 @@
 import javax.inject.Qualifier
 import javax.inject.Singleton
 
-private const val BASE_PROVIDER_ID = "base_id"
+private const val BASE_PROVIDER_ID_0 = "base_id_0"
+private const val BASE_PROVIDER_ID_1 = "base_id_1"
 private const val OTHER_PROVIDER_ID = "other_id"
 private const val TRANSFORMED_PROVIDER_ID = "transformed_id"
-private const val FIRST_STR_VALUE = "first str value"
-private const val SECOND_STR_VALUE = "second and longer str value"
-private const val TRANSFORMED_FIRST_INT_VALUE = FIRST_STR_VALUE.length
-private const val TRANSFORMED_SECOND_INT_VALUE = SECOND_STR_VALUE.length
+private const val COMBINED_PROVIDER_ID = "combined_id"
+private const val STR_VALUE_0 = "I used to be indecisive."
+private const val STR_VALUE_1 = "Now I'm not so sure."
+private const val STR_VALUE_2 = "At least I thought I was."
+private const val INT_XFORMED_STR_VALUE_0 = STR_VALUE_0.length
+private const val INT_XFORMED_STR_VALUE_1 = STR_VALUE_1.length
+private const val COMBINED_STR_VALUE_01 = "I used to be indecisive. Now I'm not so sure."
+private const val COMBINED_STR_VALUE_21 = "At least I thought I was. Now I'm not so sure."
+private const val COMBINED_STR_VALUE_02 = "I used to be indecisive. At least I thought I was."
 
 /** Tests for [DataProviders], [DataProvider]s, and [AsyncDataSubscriptionManager]. */
 @RunWith(AndroidJUnit4::class)
@@ -111,24 +117,24 @@
 
   @Test
   fun testInMemoryDataProvider_toLiveData_deliversInMemoryValue() {
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val dataProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testInMemoryDataProvider_toLiveData_notifies_doesNotDeliverSameValueAgain() = runBlockingTest(testDispatcher) {
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val dataProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
     advanceUntilIdle()
 
     reset(mockStringLiveDataObserver)
-    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID)
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
     advanceUntilIdle()
 
     // The observer should not be notified again since the value hasn't changed.
@@ -137,61 +143,61 @@
 
   @Test
   fun testInMemoryDataProvider_toLiveData_withChangedValue_beforeReg_deliversSecondValue() {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
 
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(SECOND_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
   }
 
   @Test
   fun testInMemoryDataProvider_toLiveData_withChangedValue_afterReg_deliversFirstValue() {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
 
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testInMemoryDataProvider_changedValueAfterReg_notified_deliversSecondValue() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
-    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID)
+    inMemoryCachedStr = STR_VALUE_1
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
     advanceUntilIdle()
 
     verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(SECOND_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testInMemoryDataProvider_changedValue_notifiesDiffProvider_deliversFirstVal() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
     asyncDataSubscriptionManager.notifyChange(OTHER_PROVIDER_ID)
     advanceUntilIdle()
 
     // The first value should be observed since a completely different provider was notified.
     verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
@@ -201,9 +207,9 @@
     var fakeLoadMemoryCallbackCalled = false
     val fakeLoadMemoryCallback: () -> String = {
       fakeLoadMemoryCallbackCalled = true
-      FIRST_STR_VALUE
+      STR_VALUE_0
     }
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID, fakeLoadMemoryCallback)
+    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0, fakeLoadMemoryCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
@@ -216,9 +222,9 @@
     var fakeLoadMemoryCallbackCalled = false
     val fakeLoadMemoryCallback: () -> String = {
       fakeLoadMemoryCallbackCalled = true
-      FIRST_STR_VALUE
+      STR_VALUE_0
     }
-    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID, fakeLoadMemoryCallback)
+    val dataProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0, fakeLoadMemoryCallback)
 
     dataProviders.convertToLiveData(dataProvider)
 
@@ -228,8 +234,7 @@
 
   @Test
   fun testInMemoryDataProvider_toLiveData_throwsException_deliversFailure() {
-    val dataProvider: DataProvider<String> =
-      dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { throw IllegalStateException("Failed") }
+    val dataProvider = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Failed"))
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
@@ -240,63 +245,63 @@
 
   @Test
   fun testAsyncInMemoryDataProvider_toLiveData_deliversInMemoryValue() {
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID) {
-      AsyncResult.success(FIRST_STR_VALUE)
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0) {
+      AsyncResult.success(STR_VALUE_0)
     }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
   fun testAsyncInMemoryDataProvider_toLiveData_withChangedValue_beforeReg_deliversSecondValue() {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID) {
+    inMemoryCachedStr = STR_VALUE_0
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0) {
       AsyncResult.success(inMemoryCachedStr!!)
     }
 
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(SECOND_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
   }
 
   @Test
   fun testAsyncInMemoryDataProvider_toLiveData_withChangedValue_afterReg_deliversFirstValue() {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID) {
+    inMemoryCachedStr = STR_VALUE_0
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0) {
       AsyncResult.success(inMemoryCachedStr!!)
     }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
 
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testAsyncInMemoryDataProvider_changedValueAfterReg_notified_deliversValueTwo() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID) {
+    inMemoryCachedStr = STR_VALUE_0
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0) {
       AsyncResult.success(inMemoryCachedStr!!)
     }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
-    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID)
+    inMemoryCachedStr = STR_VALUE_1
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
     advanceUntilIdle()
 
     verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(SECOND_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
   }
 
   @Test
@@ -304,8 +309,8 @@
   fun testAsyncInMemoryDataProvider_blockingFunction_doesNotDeliver() = runBlockingTest(testDispatcher) {
     // Ensure the suspend operation is initially blocked.
     backgroundTestCoroutineDispatcher.pauseDispatcher()
-    val blockingOperation = backgroundTestCoroutineScope.async { FIRST_STR_VALUE }
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID) {
+    val blockingOperation = backgroundTestCoroutineScope.async { STR_VALUE_0 }
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0) {
       AsyncResult.success(blockingOperation.await())
     }
 
@@ -321,8 +326,8 @@
   fun testAsyncInMemoryDataProvider_blockingFunctionCompleted_deliversValue() = runBlockingTest(testDispatcher) {
     // Ensure the suspend operation is initially blocked.
     backgroundTestCoroutineDispatcher.pauseDispatcher()
-    val blockingOperation = backgroundTestCoroutineScope.async { FIRST_STR_VALUE }
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID) {
+    val blockingOperation = backgroundTestCoroutineScope.async { STR_VALUE_0 }
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0) {
       AsyncResult.success(blockingOperation.await())
     }
 
@@ -336,7 +341,7 @@
     // needed).
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
@@ -344,9 +349,9 @@
     var fakeLoadMemoryCallbackCalled = false
     val fakeLoadMemoryCallback: suspend () -> AsyncResult<String> = {
       fakeLoadMemoryCallbackCalled = true
-      AsyncResult.success(FIRST_STR_VALUE)
+      AsyncResult.success(STR_VALUE_0)
     }
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID, fakeLoadMemoryCallback)
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0, fakeLoadMemoryCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
@@ -359,9 +364,9 @@
     var fakeLoadMemoryCallbackCalled = false
     val fakeLoadMemoryCallback: suspend () -> AsyncResult<String> = {
       fakeLoadMemoryCallbackCalled = true
-      AsyncResult.success(FIRST_STR_VALUE)
+      AsyncResult.success(STR_VALUE_0)
     }
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID, fakeLoadMemoryCallback)
+    val dataProvider = dataProviders.createInMemoryDataProviderAsync(BASE_PROVIDER_ID_0, fakeLoadMemoryCallback)
 
     dataProviders.convertToLiveData(dataProvider)
 
@@ -371,7 +376,7 @@
 
   @Test
   fun testAsyncInMemoryDataProvider_toLiveData_pendingResult_deliversPendingResult() {
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) { AsyncResult.pending() }
+    val dataProvider = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
@@ -381,9 +386,7 @@
 
   @Test
   fun testAsyncInMemoryDataProvider_toLiveData_failure_deliversFailure() {
-    val dataProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) {
-      AsyncResult.failed(IllegalStateException("Failure"))
-    }
+    val dataProvider = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Failure"))
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
 
@@ -394,81 +397,81 @@
 
   @Test
   fun testTransform_toLiveData_deliversTransformedValue() {
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) { transformString(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
 
     verify(mockIntLiveDataObserver).onChanged(intResultCaptor.capture())
     assertThat(intResultCaptor.value.isSuccess()).isTrue()
-    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(TRANSFORMED_FIRST_INT_VALUE)
+    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(INT_XFORMED_STR_VALUE_0)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransform_toLiveData_differentValue_notifiesBase_deliversXformedValueTwo() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) { transformString(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
-    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID)
+    inMemoryCachedStr = STR_VALUE_1
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
     advanceUntilIdle()
 
     // Notifying the base results in observers of the transformed provider also being called.
     verify(mockIntLiveDataObserver, atLeastOnce()).onChanged(intResultCaptor.capture())
     assertThat(intResultCaptor.value.isSuccess()).isTrue()
-    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(TRANSFORMED_SECOND_INT_VALUE)
+    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(INT_XFORMED_STR_VALUE_1)
   }
 
   @Test
   @ExperimentalCoroutinesApi
-  fun testTransform_toLiveData_differentValue_notifiesXform_deliversXformedValueTwo() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+  fun testTransform_toLiveData_diffValue_notifiesXform_deliversXformedValueTwo() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) { transformString(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
     asyncDataSubscriptionManager.notifyChange(TRANSFORMED_PROVIDER_ID)
     advanceUntilIdle()
 
     // Notifying the transformed provider has the same result as notifying the base provider.
     verify(mockIntLiveDataObserver, atLeastOnce()).onChanged(intResultCaptor.capture())
     assertThat(intResultCaptor.value.isSuccess()).isTrue()
-    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(TRANSFORMED_SECOND_INT_VALUE)
+    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(INT_XFORMED_STR_VALUE_1)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransform_differentValue_notifiesBase_observeBase_deliversSecondValue() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) { transformString(it) }
 
     dataProviders.convertToLiveData(baseProvider).observeForever(mockStringLiveDataObserver)
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
-    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID)
+    inMemoryCachedStr = STR_VALUE_1
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
     advanceUntilIdle()
 
     // Having a transformed data provider with an observer does not change the base's notification behavior.
     verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(SECOND_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransform_differentValue_notifiesXformed_observeBase_deliversFirstValue() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) { transformString(it) }
 
     dataProviders.convertToLiveData(baseProvider).observeForever(mockStringLiveDataObserver)
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
     asyncDataSubscriptionManager.notifyChange(TRANSFORMED_PROVIDER_ID)
     advanceUntilIdle()
 
@@ -476,12 +479,12 @@
     // base has changed.
     verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
   fun testTransform_toLiveData_basePending_deliversPending() {
-    val baseProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) { AsyncResult.pending() }
+    val baseProvider = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) { transformString(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -492,9 +495,7 @@
 
   @Test
   fun testTransform_toLiveData_baseFailure_deliversFailure() {
-    val baseProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) {
-      AsyncResult.failed(IllegalStateException("Failed"))
-    }
+    val baseProvider = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Failure"))
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) { transformString(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -512,7 +513,7 @@
       fakeTransformCallbackCalled = true
       transformString(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -529,7 +530,7 @@
       fakeTransformCallbackCalled = true
       transformString(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider)
@@ -545,7 +546,7 @@
       fakeTransformCallbackCalled = true
       transformString(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) { AsyncResult.pending() }
+    val baseProvider = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -561,9 +562,7 @@
       fakeTransformCallbackCalled = true
       transformString(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) {
-      AsyncResult.failed(IllegalStateException("Base failure"))
-    }
+    val baseProvider = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base failure"))
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -574,7 +573,7 @@
 
   @Test
   fun testTransform_toLiveData_throwsException_deliversFailure() {
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transform<String, Int>(TRANSFORMED_PROVIDER_ID, baseProvider) {
       throw IllegalStateException("Transform failure")
     }
@@ -590,11 +589,8 @@
 
   @Test
   fun testTransform_toLiveData_baseThrowsException_deliversFailure() {
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) {
-      throw IllegalStateException("Base failure")
-    }
+    val baseProvider = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base failure"))
     val dataProvider = dataProviders.transform(TRANSFORMED_PROVIDER_ID, baseProvider) {
-      @Suppress("UNREACHABLE_CODE") // This is expected to be unreachable code for this test.
       transformString(it)
     }
 
@@ -610,81 +606,81 @@
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_toLiveData_deliversTransformedValue() {
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
 
     verify(mockIntLiveDataObserver).onChanged(intResultCaptor.capture())
     assertThat(intResultCaptor.value.isSuccess()).isTrue()
-    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(TRANSFORMED_FIRST_INT_VALUE)
+    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(INT_XFORMED_STR_VALUE_0)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_toLiveData_diffValue_notifiesBase_deliversXformedValueTwo() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
-    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID)
+    inMemoryCachedStr = STR_VALUE_1
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
     advanceUntilIdle()
 
     // Notifying the base results in observers of the transformed provider also being called.
     verify(mockIntLiveDataObserver, atLeastOnce()).onChanged(intResultCaptor.capture())
     assertThat(intResultCaptor.value.isSuccess()).isTrue()
-    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(TRANSFORMED_SECOND_INT_VALUE)
+    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(INT_XFORMED_STR_VALUE_1)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_toLiveData_diffVal_notifiesXform_deliversXformedValueTwo() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
     asyncDataSubscriptionManager.notifyChange(TRANSFORMED_PROVIDER_ID)
     advanceUntilIdle()
 
     // Notifying the transformed provider has the same result as notifying the base provider.
     verify(mockIntLiveDataObserver, atLeastOnce()).onChanged(intResultCaptor.capture())
     assertThat(intResultCaptor.value.isSuccess()).isTrue()
-    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(TRANSFORMED_SECOND_INT_VALUE)
+    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(INT_XFORMED_STR_VALUE_1)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_differentValue_notifiesBase_observeBase_deliversSecondVal() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(baseProvider).observeForever(mockStringLiveDataObserver)
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
-    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID)
+    inMemoryCachedStr = STR_VALUE_1
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
     advanceUntilIdle()
 
     // Having a transformed data provider with an observer does not change the base's notification behavior.
     verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(SECOND_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_diffValue_notifiesXformed_observeBase_deliversFirstVal() = runBlockingTest(testDispatcher) {
-    inMemoryCachedStr = FIRST_STR_VALUE
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { inMemoryCachedStr!! }
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(baseProvider).observeForever(mockStringLiveDataObserver)
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
-    inMemoryCachedStr = SECOND_STR_VALUE
+    inMemoryCachedStr = STR_VALUE_1
     asyncDataSubscriptionManager.notifyChange(TRANSFORMED_PROVIDER_ID)
     advanceUntilIdle()
 
@@ -692,7 +688,7 @@
     // base has changed.
     verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
@@ -700,7 +696,7 @@
   fun testTransformAsync_toLiveData_blockingFunction_doesNotDeliverValue() = runBlockingTest(testDispatcher) {
     // Block transformStringAsync().
     backgroundTestCoroutineDispatcher.pauseDispatcher()
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -715,7 +711,7 @@
   fun testTransformAsync_toLiveData_blockingFunction_completed_deliversXformedVal() = runBlockingTest(testDispatcher) {
     // Block transformStringAsync().
     backgroundTestCoroutineDispatcher.pauseDispatcher()
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -725,7 +721,7 @@
     // The value should now be delivered since the async function was unblocked.
     verify(mockIntLiveDataObserver).onChanged(intResultCaptor.capture())
     assertThat(intResultCaptor.value.isSuccess()).isTrue()
-    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(TRANSFORMED_FIRST_INT_VALUE)
+    assertThat(intResultCaptor.value.getOrThrow()).isEqualTo(INT_XFORMED_STR_VALUE_0)
   }
 
   @Test
@@ -733,7 +729,7 @@
   fun testTransformAsync_toLiveData_blockingFunction_baseObserved_deliversFirstVal() = runBlockingTest(testDispatcher) {
     // Block transformStringAsync().
     backgroundTestCoroutineDispatcher.pauseDispatcher()
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(baseProvider).observeForever(mockStringLiveDataObserver)
@@ -743,13 +739,13 @@
     // Verify that even though the transformed provider is blocked, the base can still properly publish changes.
     verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
     assertThat(stringResultCaptor.value.isSuccess()).isTrue()
-    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(FIRST_STR_VALUE)
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
   }
 
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_toLiveData_transformedPending_deliversPending() {
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync<String, Int>(TRANSFORMED_PROVIDER_ID, baseProvider) {
       AsyncResult.pending()
     }
@@ -764,7 +760,7 @@
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_toLiveData_transformedFailure_deliversFailure() {
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync<String, Int>(TRANSFORMED_PROVIDER_ID, baseProvider) {
       AsyncResult.failed(IllegalStateException("Transform failure"))
     }
@@ -781,7 +777,7 @@
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_toLiveData_basePending_deliversPending() {
-    val baseProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) { AsyncResult.pending() }
+    val baseProvider = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) { transformStringAsync(it) }
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -794,11 +790,8 @@
   @Test
   @ExperimentalCoroutinesApi
   fun testTransformAsync_toLiveData_baseFailure_deliversFailure() {
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) {
-      throw IllegalStateException("Base failure")
-    }
+    val baseProvider = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base failure"))
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider) {
-      @Suppress("UNREACHABLE_CODE") // This code is intentionally unreachable for this test case.
       transformStringAsync(it)
     }
 
@@ -820,7 +813,7 @@
       fakeTransformCallbackCalled = true
       transformStringAsync(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -837,7 +830,7 @@
       fakeTransformCallbackCalled = true
       transformStringAsync(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) { FIRST_STR_VALUE }
+    val baseProvider = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider)
@@ -854,7 +847,7 @@
       fakeTransformCallbackCalled = true
       transformStringAsync(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProviderAsync<String>(BASE_PROVIDER_ID) { AsyncResult.pending() }
+    val baseProvider = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -871,9 +864,7 @@
       fakeTransformCallbackCalled = true
       transformStringAsync(it)
     }
-    val baseProvider = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID) {
-      throw IllegalStateException("Base failure")
-    }
+    val baseProvider = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base failure"))
     val dataProvider = dataProviders.transformAsync(TRANSFORMED_PROVIDER_ID, baseProvider, fakeTransformCallback)
 
     dataProviders.convertToLiveData(dataProvider).observeForever(mockIntLiveDataObserver)
@@ -882,6 +873,1095 @@
     assertThat(fakeTransformCallbackCalled).isFalse()
   }
 
+  @Test
+  fun testCombine_toLiveData_deliversCombinedValue() {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_01)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_firstProviderChanges_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
+    advanceUntilIdle()
+
+    // Notifying the first base provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_21)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_firstProviderChanges_notifiesCombined_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_21)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_firstProviderChanges_observeBase_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider1).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
+    advanceUntilIdle()
+
+    // The combined data provider is irrelevant; the base provider's change should be observed.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_2)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_firstProvChanges_observeBase_notifiesCombined_deliversOldValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider1).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined data provider will not trigger observers of the changed provider becoming aware of the
+    // change.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_secondProviderChanges_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_1)
+    advanceUntilIdle()
+
+    // Notifying the second base provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_02)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_secondProviderChanges_notifiesCombined_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_02)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_secondProviderChanges_observeBase_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider2).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_1)
+    advanceUntilIdle()
+
+    // The combined data provider is irrelevant; the base provider's change should be observed.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_2)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombine_secondProvChanges_observeBase_notifiesCombined_deliversOldValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider2).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined data provider will not trigger observers of the changed provider becoming aware of the
+    // change.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
+  }
+
+  @Test
+  fun testCombine_firstProviderPending_deliversPending() {
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isPending()).isTrue()
+  }
+
+  @Test
+  fun testCombine_secondProviderPending_deliversPending() {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isPending()).isTrue()
+  }
+
+  @Test
+  fun testCombine_bothProvidersPending_deliversPending() {
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isPending()).isTrue()
+  }
+
+  @Test
+  fun testCombine_firstProviderFailing_deliversFailure() {
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  fun testCombine_secondProviderFailing_deliversFailure() {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  fun testCombine_bothProvidersFailing_deliversFailure() {
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  fun testCombine_toLiveData_withObserver_callsCombine() {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: (String, String) -> String = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStrings(str1, str2)
+    }
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback)
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // Successful base providers with a LiveData observer present should result in the combine function being called.
+    assertThat(fakeCombineCallbackCalled).isTrue()
+  }
+
+  @Test
+  fun testCombine_toLiveData_withObserver_firstProviderPending_doesNotCallCombine() {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: (String, String) -> String = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStrings(str1, str2)
+    }
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback)
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  fun testCombine_toLiveData_withObserver_secondProviderPending_doesNotCallCombine() {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: (String, String) -> String = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStrings(str1, str2)
+    }
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback)
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  fun testCombine_toLiveData_withObserver_bothProvidersPending_doesNotCallCombine() {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: (String, String) -> String = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStrings(str1, str2)
+    }
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback)
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // Both of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  fun testCombine_toLiveData_withObserver_firstProviderFailing_doesNotCallCombine() {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: (String, String) -> String = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStrings(str1, str2)
+    }
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback)
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  fun testCombine_toLiveData_withObserver_secondProviderFailing_doesNotCallCombine() {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: (String, String) -> String = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStrings(str1, str2)
+    }
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback)
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  fun testCombine_toLiveData_withObserver_bothProvidersFailing_doesNotCallCombine() {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: (String, String) -> String = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStrings(str1, str2)
+    }
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback)
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // Both of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  fun testCombine_firstProviderThrowsException_deliversFailure() {
+    val baseProvider1 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  fun testCombine_secondProviderThrowsException_deliversFailure() {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  fun testCombine_bothProvidersThrowExceptions_deliversFailure() {
+    val baseProvider1 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combine(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStrings(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  fun testCombine_combinerThrowsException_deliversFailure() {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combine<String, String, String>(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { _, _ ->
+      throw IllegalStateException("Combine failure")
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_deliversCombinedValue() {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_01)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProviderChanges_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
+    advanceUntilIdle()
+
+    // Notifying the first base provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_21)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProviderChanges_notifiesCombined_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_21)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProvChanges_observeBase_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider1).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_0)
+    advanceUntilIdle()
+
+    // The combined data provider is irrelevant; the base provider's change should be observed.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_2)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProvChanges_obsrvBase_notifiesCombined_deliversOldVal() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_0
+    val baseProvider1 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_0) { inMemoryCachedStr!! }
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider1).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined data provider will not trigger observers of the changed provider becoming aware of the
+    // change.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_0)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProviderChanges_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_1)
+    advanceUntilIdle()
+
+    // Notifying the second base provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_02)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProviderChanges_notifiesCombined_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined provider results in observers of the combined provider also being called.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_02)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProvChanges_observeBase_notifiesBase_deliversNewValue() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider2).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(BASE_PROVIDER_ID_1)
+    advanceUntilIdle()
+
+    // The combined data provider is irrelevant; the base provider's change should be observed.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_2)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProvChanges_obsrvBase_notifiesCombined_deliversOldVal() = runBlockingTest(testDispatcher) {
+    inMemoryCachedStr = STR_VALUE_1
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = dataProviders.createInMemoryDataProvider(BASE_PROVIDER_ID_1) { inMemoryCachedStr!! }
+    dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(baseProvider2).observeForever(mockStringLiveDataObserver)
+    inMemoryCachedStr = STR_VALUE_2
+    asyncDataSubscriptionManager.notifyChange(COMBINED_PROVIDER_ID)
+    advanceUntilIdle()
+
+    // Notifying the combined data provider will not trigger observers of the changed provider becoming aware of the
+    // change.
+    verify(mockStringLiveDataObserver, atLeastOnce()).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(STR_VALUE_1)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProviderPending_deliversPending() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProviderPending_deliversPending() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_bothProvidersPending_deliversPending() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProviderFailing_deliversFailure() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProviderFailing_deliversFailure() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_bothProvidersFailing_deliversFailure() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_withObserver_callsCombine() = runBlockingTest(testDispatcher) {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: suspend (String, String) -> AsyncResult<String> = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStringsAsync(str1, str2)
+    }
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback
+    )
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // Successful base providers with a LiveData observer present should result in the combine function being called.
+    assertThat(fakeCombineCallbackCalled).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_withObserver_firstProvPending_doesNotCallCombine() = runBlockingTest(testDispatcher) {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: suspend (String, String) -> AsyncResult<String> = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStringsAsync(str1, str2)
+    }
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback
+    )
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_withObserver_secondProvPending_doesNotCallFunc() = runBlockingTest(testDispatcher) {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: suspend (String, String) -> AsyncResult<String> = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStringsAsync(str1, str2)
+    }
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combineAsync(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback
+    )
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_withObserver_bothProvsPending_doesNotCallCombine() = runBlockingTest(testDispatcher) {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: suspend (String, String) -> AsyncResult<String> = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStringsAsync(str1, str2)
+    }
+    val baseProvider1 = createPendingDataProvider<String>(BASE_PROVIDER_ID_0)
+    val baseProvider2 = createPendingDataProvider<String>(BASE_PROVIDER_ID_1)
+    val dataProvider = dataProviders.combineAsync(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback
+    )
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // Both of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_withObserver_firstProvFailing_doesNotCallCombine() = runBlockingTest(testDispatcher) {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: suspend (String, String) -> AsyncResult<String> = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStringsAsync(str1, str2)
+    }
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback
+    )
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_withObserver_secondProvFailing_doesNotCallFunc() = runBlockingTest(testDispatcher) {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: suspend (String, String) -> AsyncResult<String> = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStringsAsync(str1, str2)
+    }
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combineAsync(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback
+    )
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // One of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_toLiveData_withObserver_bothProvsFailing_doesNotCallCombine() = runBlockingTest(testDispatcher) {
+    var fakeCombineCallbackCalled = false
+    val fakeCombineCallback: suspend (String, String) -> AsyncResult<String> = { str1, str2 ->
+      fakeCombineCallbackCalled = true
+      combineStringsAsync(str1, str2)
+    }
+    val baseProvider1 = createFailingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createFailingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combineAsync(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2, fakeCombineCallback
+    )
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // Both of the base providers not completing should result in the combine function not being called.
+    assertThat(fakeCombineCallbackCalled).isFalse()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProviderThrowsException_deliversFailure() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProviderThrowsException_deliversFailure() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_bothProvidersThrowExceptions_deliversFailure() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_0, IllegalStateException("Base 1 failure"))
+    val baseProvider2 = createThrowingDataProvider<String>(BASE_PROVIDER_ID_1, IllegalStateException("Base 2 failure"))
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(stringResultCaptor.value.getErrorOrNull()).hasCauseThat().isInstanceOf(IllegalStateException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProviderIsBlocking_doesNotDeliver() = runBlockingTest(testDispatcher) {
+    // Block the first provider.
+    backgroundTestCoroutineDispatcher.pauseDispatcher()
+    val baseProvider1 = createBlockingDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      // Note that this doesn't use combineStringsAsync since that relies on the blocked
+      // backgroundTestCoroutineDispatcher.
+      AsyncResult.success(combineStrings(v1, v2))
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // The value should not yet be delivered since the first provider is blocked.
+    verifyZeroInteractions(mockStringLiveDataObserver)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_firstProviderIsBlocking_resumedAfterReg_valueDelivered() = runBlockingTest(testDispatcher) {
+    // Block the first provider.
+    backgroundTestCoroutineDispatcher.pauseDispatcher()
+    val baseProvider1 = createBlockingDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      // Note that this doesn't use combineStringsAsync since that relies on the blocked
+      // backgroundTestCoroutineDispatcher.
+      AsyncResult.success(combineStrings(v1, v2))
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    // Resume the test thread after registration.
+    backgroundTestCoroutineDispatcher.advanceUntilIdle()
+    advanceUntilIdle()
+
+    // The value should now be delivered since the provider was allowed to finish.
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_01)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProviderIsBlocking_doesNotDeliver() = runBlockingTest(testDispatcher) {
+    // Block the second provider.
+    backgroundTestCoroutineDispatcher.pauseDispatcher()
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createBlockingDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      // Note that this doesn't use combineStringsAsync since that relies on the blocked
+      // backgroundTestCoroutineDispatcher.
+      AsyncResult.success(combineStrings(v1, v2))
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // The value should not yet be delivered since the first provider is blocked.
+    verifyZeroInteractions(mockStringLiveDataObserver)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_secondProviderIsBlocking_resumedAfterReg_valueDelivered() = runBlockingTest(testDispatcher) {
+    // Block first provider.
+    backgroundTestCoroutineDispatcher.pauseDispatcher()
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createBlockingDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      // Note that this doesn't use combineStringsAsync since that relies on the blocked
+      // backgroundTestCoroutineDispatcher.
+      AsyncResult.success(combineStrings(v1, v2))
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    // Resume the test thread after registration.
+    backgroundTestCoroutineDispatcher.advanceUntilIdle()
+    advanceUntilIdle()
+
+    // The value should now be delivered since the provider was allowed to finish.
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_01)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_combineFuncBlocked_doesNotDeliver() = runBlockingTest(testDispatcher) {
+    // Block combineStringsAsync().
+    backgroundTestCoroutineDispatcher.pauseDispatcher()
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    // The value should not yet be delivered.
+    verifyZeroInteractions(mockStringLiveDataObserver)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_combineFuncBlocked_resumedAfterRegistration_deliversValue() = runBlockingTest(testDispatcher) {
+    // Block combineStringsAsync().
+    backgroundTestCoroutineDispatcher.pauseDispatcher()
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync(COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { v1, v2 ->
+      combineStringsAsync(v1, v2)
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+    // Allow the async function to complete.
+    backgroundTestCoroutineDispatcher.advanceUntilIdle()
+    advanceUntilIdle()
+
+    // The value should be delivered since the async function was allowed to finish.
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isSuccess()).isTrue()
+    assertThat(stringResultCaptor.value.getOrThrow()).isEqualTo(COMBINED_STR_VALUE_01)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_combineReturnsPending_deliversPending() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync<String, String, String>(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { _, _ ->
+      AsyncResult.pending()
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCombineAsync_combineReturnsFailure_deliversFailure() = runBlockingTest(testDispatcher) {
+    val baseProvider1 = createSuccessfulDataProvider(BASE_PROVIDER_ID_0, STR_VALUE_0)
+    val baseProvider2 = createSuccessfulDataProvider(BASE_PROVIDER_ID_1, STR_VALUE_1)
+    val dataProvider = dataProviders.combineAsync<String, String, String>(
+      COMBINED_PROVIDER_ID, baseProvider1, baseProvider2) { _, _ ->
+      AsyncResult.failed(IllegalStateException("Combine failure"))
+    }
+
+    dataProviders.convertToLiveData(dataProvider).observeForever(mockStringLiveDataObserver)
+
+    verify(mockStringLiveDataObserver).onChanged(stringResultCaptor.capture())
+    assertThat(stringResultCaptor.value.isFailure()).isTrue()
+    assertThat(stringResultCaptor.value.getErrorOrNull()).isInstanceOf(IllegalStateException::class.java)
+  }
+
   private fun transformString(str: String): Int {
     return str.length
   }
@@ -897,6 +1977,53 @@
     return AsyncResult.success(deferred.getCompleted())
   }
 
+  private fun combineStrings(str1: String, str2: String): String {
+    return "$str1 $str2"
+  }
+
+  /**
+   * Combines the specified strings into a new string in the same way as [combineStrings], except in a blocking context
+   * using [backgroundTestCoroutineDispatcher].
+   */
+  @ExperimentalCoroutinesApi
+  private suspend fun combineStringsAsync(str1: String, str2: String): AsyncResult<String> {
+    val deferred = backgroundTestCoroutineScope.async { combineStrings(str1, str2) }
+    deferred.await()
+    return AsyncResult.success(deferred.getCompleted())
+  }
+
+  private fun <T> createSuccessfulDataProvider(id: Any, value: T): DataProvider<T> {
+    return dataProviders.createInMemoryDataProvider(id) { value }
+  }
+
+  private fun <T> createPendingDataProvider(id: Any): DataProvider<T> {
+    return dataProviders.createInMemoryDataProviderAsync(id) {
+      @Suppress("RemoveExplicitTypeArguments") // Android Studio incorrectly suggests to remove the explicit argument.
+      AsyncResult.pending<T>()
+    }
+  }
+
+  private fun <T> createFailingDataProvider(id: Any, failure: Exception): DataProvider<T> {
+    return dataProviders.createInMemoryDataProviderAsync(id) {
+      @Suppress("RemoveExplicitTypeArguments") // Android Studio incorrectly suggests to remove the explicit argument.
+      AsyncResult.failed<T>(failure)
+    }
+  }
+
+  private fun <T> createThrowingDataProvider(id: Any, failure: Exception): DataProvider<T> {
+    return dataProviders.createInMemoryDataProvider(id) { throw failure }
+  }
+
+  /** Returns a successful [DataProvider] that uses a background thread to return the value. */
+  @ExperimentalCoroutinesApi
+  private fun <T> createBlockingDataProvider(id: Any, value: T): DataProvider<T> {
+    return dataProviders.createInMemoryDataProviderAsync(id) {
+      val deferred = backgroundTestCoroutineScope.async { value }
+      deferred.await()
+      AsyncResult.success(deferred.getCompleted())
+    }
+  }
+
   private fun setUpTestApplicationComponent() {
     DaggerDataProvidersTest_TestApplicationComponent.builder()
       .setApplication(ApplicationProvider.getApplicationContext())
Index: utility/src/test/java/org/oppia/util/data/AsyncResultTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- utility/src/test/java/org/oppia/util/data/AsyncResultTest.kt	(date 1584621433000)
+++ utility/src/test/java/org/oppia/util/data/AsyncResultTest.kt	(date 1584626399000)
@@ -82,6 +82,69 @@
     assertThat(transformed.isPending()).isTrue()
   }
 
+  @Test
+  fun testPendingAsyncResult_combinedWithPending_isStillPending() {
+    val result1 = AsyncResult.pending<String>()
+    val result2 = AsyncResult.pending<Float>()
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  fun testPendingAsyncResult_combinedWithFailure_isStillPending() {
+    val result1 = AsyncResult.pending<String>()
+    val result2 = AsyncResult.failed<Float>(RuntimeException())
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  fun testPendingAsyncResult_combinedWithSuccess_isStillPending() {
+    val result1 = AsyncResult.pending<String>()
+    val result2 = AsyncResult.success(1.0f)
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testPendingAsyncResult_combinedAsyncWithPending_isStillPending() = runBlockingTest {
+    val result1 = AsyncResult.pending<String>()
+    val result2 = AsyncResult.pending<Float>()
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testPendingAsyncResult_combinedAsyncWithFailure_isStillPending() = runBlockingTest {
+    val result1 = AsyncResult.pending<String>()
+    val result2 = AsyncResult.failed<Float>(RuntimeException())
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testPendingAsyncResult_combinedAsyncWithSuccess_isStillPending() = runBlockingTest {
+    val result1 = AsyncResult.pending<String>()
+    val result2 = AsyncResult.success(1.0f)
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
   @Test
   fun testPendingResult_isEqualToAnotherPendingResult() {
     val result = AsyncResult.pending<String>()
@@ -217,6 +280,99 @@
     assertThat(transformed.getErrorOrNull()).isInstanceOf(UnsupportedOperationException::class.java)
   }
 
+  @Test
+  fun testSucceededAsyncResult_combinedWithPending_isPending() {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.pending<Float>()
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  fun testSucceededAsyncResult_combinedWithFailure_isFailedWithCorrectChainedFailure() {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.failed<Float>(RuntimeException())
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.isFailure()).isTrue()
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(RuntimeException::class.java)
+  }
+
+  @Test
+  fun testSucceededAsyncResult_combinedWithSuccess_hasCombinedSuccessValue() {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.success(1.0)
+
+    val combined = result1.combineWith(result2) { v1, v2 -> v1 + v2 }
+
+    assertThat(combined.getOrThrow()).contains("value")
+    assertThat(combined.getOrThrow()).contains("1.0")
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testSucceededAsyncResult_combinedAsyncWithPending_isPending() = runBlockingTest {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.pending<Float>()
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testSucceededAsyncResult_combinedAsyncWithFailure_isFailedWithCorrectChainedFailure() = runBlockingTest {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.failed<Float>(RuntimeException())
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.isFailure()).isTrue()
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(RuntimeException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testSucceededAsyncResult_combinedAsyncWithSuccess_resultPending_isPending() = runBlockingTest {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.success(1.0)
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.pending<Int>() }
+
+    assertThat(combined.isPending()).isTrue()
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testSucceededAsyncResult_combinedAsyncWithSuccess_resultFailure_isFailed() = runBlockingTest {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.success(1.0)
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.failed<Int>(RuntimeException()) }
+
+    // Note that the failure is not chained since the transform function was responsible for 'throwing' it.
+    assertThat(combined.isFailure()).isTrue()
+    assertThat(combined.getErrorOrNull()).isInstanceOf(RuntimeException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testSucceededAsyncResult_combinedAsyncWithSuccess_resultSuccess_hasCombinedSuccessValue() = runBlockingTest {
+    val result1 = AsyncResult.success("value")
+    val result2 = AsyncResult.success(1.0)
+
+    val combined = result1.combineWithAsync(result2) { v1, v2 -> AsyncResult.success(v1 + v2) }
+
+    assertThat(combined.getOrThrow()).contains("value")
+    assertThat(combined.getOrThrow()).contains("1.0")
+  }
+
   @Test
   fun testSucceededResult_isNotEqualToPendingResult() {
     val result = AsyncResult.success("Success")
@@ -360,6 +516,75 @@
     assertThat(transformed.getErrorOrNull()).hasCauseThat().isInstanceOf(UnsupportedOperationException::class.java)
   }
 
+  @Test
+  fun testFailedAsyncResult_combinedWithPending_isStillChainedFailure() {
+    val result1 = AsyncResult.failed<String>(UnsupportedOperationException())
+    val result2 = AsyncResult.pending<Float>()
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(UnsupportedOperationException::class.java)
+  }
+
+  @Test
+  fun testFailedAsyncResult_combinedWithFailure_hasFirstFailureChained() {
+    val result1 = AsyncResult.failed<String>(UnsupportedOperationException())
+    val result2 = AsyncResult.failed<Float>(RuntimeException())
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(UnsupportedOperationException::class.java)
+  }
+
+  @Test
+  fun testFailedAsyncResult_combinedWithSuccess_isStillChainedFailure() {
+    val result1 = AsyncResult.failed<String>(UnsupportedOperationException())
+    val result2 = AsyncResult.success(1.0f)
+
+    val combined = result1.combineWith(result2) { _, _ -> 0 }
+
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(UnsupportedOperationException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testFailedAsyncResult_combinedAsyncWithPending_isStillChainedFailure() = runBlockingTest {
+    val result1 = AsyncResult.failed<String>(UnsupportedOperationException())
+    val result2 = AsyncResult.pending<Float>()
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(UnsupportedOperationException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testFailedAsyncResult_combinedAsyncWithFailure_isStillChainedFailure() = runBlockingTest {
+    val result1 = AsyncResult.failed<String>(UnsupportedOperationException())
+    val result2 = AsyncResult.failed<Float>(RuntimeException())
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(UnsupportedOperationException::class.java)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testFailedAsyncResult_combinedAsyncWithSuccess_isStillChainedFailure() = runBlockingTest {
+    val result1 = AsyncResult.failed<String>(UnsupportedOperationException())
+    val result2 = AsyncResult.success(1.0f)
+
+    val combined = result1.combineWithAsync(result2) { _, _ -> AsyncResult.success(0) }
+
+    assertThat(combined.getErrorOrNull()).isInstanceOf(AsyncResult.ChainedFailureException::class.java)
+    assertThat(combined.getErrorOrNull()).hasCauseThat().isInstanceOf(UnsupportedOperationException::class.java)
+  }
+
   @Test
   fun testFailedResult_isNotEqualToPendingResult() {
     val result = AsyncResult.failed<String>(UnsupportedOperationException("Reason"))
Index: app/src/main/res/menu/navigation_drawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/navigation_drawer_menu.xml	(date 1584621433000)
+++ app/src/main/res/menu/navigation_drawer_menu.xml	(date 1584626399000)
@@ -8,8 +8,20 @@
       android:icon="@drawable/ic_home_icon_grey_24dp"
       android:title="@string/menu_home" />
     <item
+      android:id="@+id/nav_options"
+      android:icon="@drawable/ic_options_icon_grey_24dp"
+      android:title="@string/menu_options" />
+    <item
       android:id="@+id/nav_help"
       android:icon="@drawable/ic_help_grey_icon_24dp"
       android:title="@string/menu_help" />
+    <item
+      android:id="@+id/nav_my_downloads"
+      android:icon="@drawable/ic_folder_open_24dp"
+      android:title="@string/menu_my_downloads" />
+    <item
+      android:id="@+id/nav_switch_profile"
+      android:icon="@drawable/ic_profile_exit"
+      android:title="@string/menu_switch_profile" />
   </group>
 </menu>
Index: app/src/main/res/layout/nav_header_navigation_drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/nav_header_navigation_drawer.xml	(date 1584621433000)
+++ app/src/main/res/layout/nav_header_navigation_drawer.xml	(date 1584626399000)
@@ -1,39 +1,56 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto"
-  android:layout_width="match_parent"
-  android:layout_height="176dp"
-  android:background="@drawable/side_nav_bar"
-  android:gravity="bottom"
-  android:orientation="vertical"
-  android:paddingStart="@dimen/activity_horizontal_margin"
-  android:paddingTop="@dimen/activity_vertical_margin"
-  android:paddingEnd="@dimen/activity_horizontal_margin"
-  android:paddingBottom="@dimen/activity_vertical_margin"
-  android:theme="@style/ThemeOverlay.AppCompat.Dark">
+  xmlns:profile="http://schemas.android.com/tools">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.drawer.NavigationDrawerHeaderViewModel" />
+  </data>
+
+  <LinearLayout
+    android:id="@+id/header_linear_layout"
+    android:layout_width="match_parent"
+    android:layout_height="176dp"
+    android:background="@drawable/side_nav_bar"
+    android:gravity="bottom"
+    android:onClick="@{(v) -> viewModel.onHeaderClicked()}"
+    android:orientation="vertical"
+    android:paddingStart="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingEnd="@dimen/activity_horizontal_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark">
 
-  <ImageView
-    android:layout_width="64dp"
-    android:layout_height="64dp"
-    android:contentDescription="@string/nav_header_desc"
-    android:paddingTop="8dp"
-    app:srcCompat="@mipmap/ic_launcher_round" />
+    <de.hdodenhof.circleimageview.CircleImageView
+      android:layout_width="72dp"
+      android:layout_height="72dp"
+      android:paddingTop="8dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent"
+      profile:src="@{viewModel.profile.avatar}" />
 
-  <TextView
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:fontFamily="sans-serif-medium"
-    android:paddingTop="8dp"
-    android:textColor="@color/white"
-    android:text="@string/nav_header_title"
-    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
-    android:textSize="14sp" />
+    <TextView
+      android:id="@+id/nav_header_profile_name"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif-medium"
+      android:paddingTop="8dp"
+      android:text="@{viewModel.profile.name}"
+      android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+      android:textColor="@color/white"
+      android:textSize="14sp" />
 
-  <TextView
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:fontFamily="sans-serif"
-    android:textColor="@color/white"
-    android:text="@string/nav_header_subtitle"
-    android:textSize="14sp" />
-</LinearLayout>
+    <TextView
+      android:id="@+id/profile_progress_text_view"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif"
+      android:text="@{@plurals/completed_story_count(viewModel.completedStoryCount, viewModel.completedStoryCount).concat(@string/bar_separator).concat(@plurals/ongoing_topic_count(viewModel.ongoingTopicCount, viewModel.ongoingTopicCount))}"
+      android:textColor="@color/white"
+      android:textSize="14sp" />
+  </LinearLayout>
+</layout>
Index: app/src/main/res/layout/help_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/help_fragment.xml	(date 1584621433000)
+++ app/src/main/res/layout/help_fragment.xml	(date 1584626399000)
@@ -6,13 +6,9 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <TextView
-      android:id="@+id/welcome_text_view"
-      android:layout_width="wrap_content"
-      android:layout_height="wrap_content"
-      app:layout_constraintBottom_toBottomOf="parent"
-      app:layout_constraintLeft_toLeftOf="parent"
-      app:layout_constraintRight_toRightOf="parent"
-      app:layout_constraintTop_toTopOf="parent" />
+    <androidx.recyclerview.widget.RecyclerView
+      android:id="@+id/help_fragment_recycler_view"
+      android:layout_width="match_parent"
+      android:layout_height="match_parent" />
   </androidx.constraintlayout.widget.ConstraintLayout>
 </layout>
Index: app/src/main/res/layout/splash_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/splash_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/splash_activity.xml	(date 1584626399000)
@@ -1,8 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout android:id="@+id/fragment_container"
-  xmlns:android="http://schemas.android.com/apk/res/android"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/fragment_container"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
-  tools:context=".splash.SplashActivity"/>
-
+  tools:context=".splash.SplashActivity" />
Index: app/src/main/res/layout/home_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/home_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/home_activity.xml	(date 1584626399000)
@@ -28,6 +28,6 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:layout_gravity="start"
-    app:layout="@layout/fragment_drawer"
-    tools:layout="@layout/fragment_drawer" />
+    app:layout="@layout/drawer_fragment"
+    tools:layout="@layout/drawer_fragment" />
 </androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/res/layout/topic_review_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/topic_review_fragment.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_review_fragment.xml	(date 1584626399000)
@@ -7,7 +7,7 @@
     android:background="@color/oppiaBackground">
 
     <androidx.recyclerview.widget.RecyclerView
-      android:id="@+id/review_skill_recycler_view"
+      android:id="@+id/review_recycler_view"
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:clipToPadding="false"
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(date 1584621433000)
+++ app/src/main/res/values/strings.xml	(date 1584626399000)
@@ -2,11 +2,13 @@
 <resources>
   <string name="app_name">Oppia</string>
   <string name="nav_header_title">Sean</string>
-  <string name="nav_header_subtitle">14 Stories Completed | 3 Topics In Progress</string>
   <string name="nav_header_desc">Navigation header</string>
   <string name="menu_home">Home</string>
+  <string name="menu_options">Options</string>
+  <string name="menu_my_downloads">My Downloads</string>
   <string name="menu_help">Help</string>
-  <string name="admin_settings">Admin Settings</string>
+  <string name="menu_switch_profile">Switch Profile</string>
+  <string name="administrator_controls">Administrator Controls</string>
   <string name="drawer_open_content_description">Navigation Menu Open</string>
   <string name="drawer_close_content_description">>Navigation Menu Close</string>
   <string name="welcome_text">Welcome to Oppia!</string>
@@ -25,13 +27,14 @@
   <string name="cellular_data_alert_dialog_description">Streaming audio may use a lot of cellular data.</string>
   <string name="cellular_data_alert_dialog_checkbox">Don\'t show this message again</string>
   <string name="concept_card_toolbar_title">Concept Card</string>
+  <string name="review_card_toolbar_title">Review Card</string>
   <string name="stop_exploration_dialog_title">Leave to Topic Page?</string>
   <string name="stop_exploration_dialog_description">Your progress will not be saved.</string>
   <string name="stop_exploration_dialog_cancel_button">Cancel</string>
   <string name="stop_exploration_dialog_leave_button">Leave</string>
-  <string name="topic_train_master_these_skills">Master These Skills</string>
-  <string name="topic_train_skills_description">Select or unselect skills that you want to practice</string>
-  <string name="topic_train_start">Start</string>
+  <string name="topic_practice_master_these_skills">Master These Skills</string>
+  <string name="topic_practice_skills_description">Select or unselect skills that you want to practice</string>
+  <string name="topic_practice_start">Start</string>
   <string name="state_continue_button">Continue</string>
   <string name="state_continue_submit">Submit</string>
   <string name="previous_state_description">Navigate to previous state</string>
@@ -41,9 +44,13 @@
   <string name="previous_responses_header">Previous Responses (%d)</string>
   <string name="state_learn_again_button">Learn Again</string>
   <string name="topic_download_text">(%s)</string>
+  <string name="FAQs">FAQs</string>
+  <string name="featured_questions">Featured Questions</string>
+  <string name="frequently_asked_questions">Frequently Asked Questions</string>
+  <string name="frequently_asked_questions_FAQ">Frequently Asked Question (FAQs)</string>
   <string name="info">Info</string>
-  <string name="play">Play</string>
-  <string name="train">Train</string>
+  <string name="lessons">Lessons</string>
+  <string name="practice">Practice</string>
   <string name="review">Review</string>
   <string name="topic">Topic</string>
   <string name="topic_story_progress_percentage">%s\%%</string>
@@ -64,7 +71,7 @@
   <string name="all_topics">All Topics</string>
   <string name="stories_you_can_play">Stories You Can Play</string>
   <string name="go_to_previous_page">Go to previous page.</string>
-  <string name="continue_playing_activity">Continue playing</string>
+  <string name="recently_played_activity">Recently-Played Stories</string>
   <string name="topic_downloaded">Topic Downloaded</string>
   <string name="downloaded">Downloaded</string>
   <string name="status_in_progress">In Progress</string>
@@ -73,13 +80,21 @@
   <string name="play_pause_audio">Play/Pause Audio</string>
   <string name="help">Help</string>
   <string name="preferences">Preferences</string>
+  <string name="search">Search</string>
+  <string name="fraction_error_invalid_chars">Please only use numerical digits, spaces or forward slashes (/)</string>
+  <string name="fraction_error_invalid_format">Please enter a valid fraction (e.g., 5/3 or 1 2/3)</string>
+  <string name="fraction_error_divide_by_zero">Please do not put 0 in the denominator</string>
+  <string name="fraction_error_larger_than_seven_digits">None of the numbers in the fraction should have more than 7 digits.</string>
+  <string name="number_error_starting_with_floating_point">Please begin your answer with a number (e.g.,”0” in 0.5).</string>
+  <string name="number_error_invalid_format">Please enter a valid number.</string>
+  <string name="number_error_larger_than_fifteen_characters">The answer can contain at most 15 characters (i.e.,[0-9] or "." or "-").</string>
   <string name="unknown_size">Unknown size</string>
   <string name="size_bytes">%d Bytes</string>
   <string name="size_kb">%d KB</string>
   <string name="size_mb">%d MB</string>
   <string name="size_gb">%d GB</string>
   <string name="correct">Correct!</string>
-  <string name="topic_prefix">Topic:</string>
+  <string name="topic_heading">Topic: %s</string>
   <plurals name="chapter_count">
     <item quantity="one">
       1 Chapter
@@ -108,6 +123,23 @@
       %d Lessons
     </item>
   </plurals>
+  <plurals name="completed_story_count">
+    <item quantity="one">
+      1 Story Completed
+    </item>
+    <item quantity="other">
+      %d Stories Completed
+    </item>
+  </plurals>
+  <plurals name="ongoing_topic_count">
+    <item quantity="one">
+      1 Topic in Progress
+    </item>
+    <item quantity="other">
+      %d Topics in Progress
+    </item>
+  </plurals>
+  <string name="bar_separator">\u0020|\u0020</string>
   <!-- ProfileChooserFragment -->
   <string name="profile_chooser_admin">Administrator</string>
   <string name="profile_chooser_select">Select your profile</string>
@@ -129,9 +161,9 @@
   <string name="admin_pin_submit">Submit</string>
   <!-- AddProfileActivity -->
   <string name="add_profile_title">Add Profile</string>
-  <string name="add_profile_input_name">Name (required)</string>
-  <string name="add_profile_input_pin">3-Digit PIN (optional)</string>
-  <string name="add_profile_input_confirm_pin">Confirm 3-Digit PIN</string>
+  <string name="add_profile_input_name">Name*</string>
+  <string name="add_profile_input_pin">3-Digit PIN*</string>
+  <string name="add_profile_input_confirm_pin">Confirm 3-Digit PIN*</string>
   <string name="add_profile_allow_download_heading">Allow Download Access</string>
   <string name="add_profile_allow_download_sub">User is able to download and delete content without Administrator password. Only available with PIN.</string>
   <string name="add_profile_create_btn">Create</string>
@@ -143,11 +175,31 @@
   <string name="add_profile_error_name_only_letters">Names can only have letters. Try another name?</string>
   <string name="add_profile_error_pin_length">Your PIN should be 3 digits long.</string>
   <string name="add_profile_error_pin_confirm_wrong">Please make sure that both PINs match.</string>
+  <!-- FAQ Questions -->
+  <string name="faq_question_1">How can I create a new profile?</string>
+  <string name="faq_question_2">How can I delete a profile?</string>
+  <string name="faq_question_3">How can I change my email/phone number?</string>
+  <string name="faq_question_4">Who is an Administrator?</string>
+  <string name="faq_question_5">Why is the Exploration player not loading?</string>
+  <string name="faq_question_6">Why is my audio not playing?</string>
+  <string name="faq_question_7">How do I download a Topic?</string>
+  <string name="faq_question_8">I can\'t find my question here. What now?</string>
+  <!-- OnboardingActivity -->
+  <string name="onboarding_slide_0_title">Welcome to Oppia!</string>
+  <string name="onboarding_slide_0_description">Learn anything you want in an effective and enjoyable way.</string>
+  <string name="onboarding_slide_1_title">Add users to your account.</string>
+  <string name="onboarding_slide_1_description">Share the experience and create up to 10 profiles.</string>
+  <string name="onboarding_slide_2_title">Download for offline.</string>
+  <string name="onboarding_slide_2_description">Continue learning your lessons without internet connection.</string>
+  <string name="onboarding_slide_3_title">Have fun!</string>
+  <string name="onboarding_slide_3_description">Enjoy your learning adventures with our free, effective lessons.</string>
+  <string name="skip">Skip</string>
+  <string name="get_started">Get Started</string>
   <!-- PinPasswordActivity -->
   <string name="pin_password_hello">Hi, %s!</string>
-  <string name="pin_password_admin_enter">Please enter your \nAdministrator PIN</string>
-  <string name="pin_password_user_enter">Please enter your PIN</string>
-  <string name="pin_password_forgot_pin">I forgot my pin</string>
+  <string name="pin_password_admin_enter">Please enter your Administrator PIN.</string>
+  <string name="pin_password_user_enter">Please enter your PIN.</string>
+  <string name="pin_password_forgot_pin">I forgot my pin.</string>
   <string name="pin_password_incorrect_pin">Incorrect PIN.</string>
   <string name="pin_password_show">show</string>
   <string name="pin_password_hide">hide</string>
@@ -156,6 +208,7 @@
   <string name="pin_password_forgot_title">Forgot PIN?</string>
   <string name="pin_password_forgot_message">To reset your PIN, please uninstall Oppia and then reinstall it.\n\nKeep in mind that if the device has not been online, you may lose user progress on multiple accounts. </string>
   <string name="pin_password_play_store">Go to the play store</string>
+  <string name="show_hide_password_icon">Show/Hide password icon</string>
   <!-- AdminSettingsDialogFragment -->
   <string name="admin_settings_label">Administrator\'s PIN</string>
   <string name="admin_settings_heading">Access to Administrator Settings</string>
@@ -170,7 +223,7 @@
   <string name="tab_downloads">Downloads</string>
   <string name="tab_updates">Updates (2)</string>
   <!-- HomeActivityBackDialog -->
-  <string name="home_activity_back_dialog_message">Exit your profile and go to the Profile Chooser?</string>
+  <string name="home_activity_back_dialog_message">Would you like to exit your profile?</string>
   <string name="home_activity_back_dialog_cancel">Cancel</string>
   <string name="home_activity_back_dialog_exit">Exit</string>
   <!-- ProfileListActivity. -->
@@ -186,6 +239,11 @@
   <string name="profile_edit_delete_dialog_negative">Cancel</string>
   <string name="profile_edit_allow_download_heading">Allow Download Access</string>
   <string name="profile_edit_allow_download_sub">User is able to download and delete content without Administrator password</string>
+  <!-- ProfileProgressActivity -->
+  <string name="profile_progress_edit_dialog_title">Profile Picture</string>
+  <string name="profile_picture_edit_alert_dialog_cancel_button">Cancel</string>
+  <string name="profile_picture_edit_alert_dialog_view_profile_picture">View Profile Picture</string>
+  <string name="profile_picture_edit_alert_dialog_choose_from_library">Choose From Library</string>
   <!-- ProfileRenameActivity. -->
   <string name="profile_rename_title">Rename Profile</string>
   <string name="profile_rename_label">New Name</string>
@@ -199,4 +257,45 @@
   <string name="profile_reset_pin_admin_confirm_label">Confirm 5-Digit PIN</string>
   <string name="profile_reset_pin_error_user_pin_length">Your PIN should be 3 digits long.</string>
   <string name="profile_reset_pin_error_admin_pin_length">Your PIN should be 5 digits long.</string>
+  <string name="add_profile_create_a_3_digit_pin">Create a 3-Digit PIN</string>
+  <string name="add_profile_required">*Required</string>
+  <string name="back_button">Back Button</string>
+  <string name="next">Next</string>
+  <!-- AdministratorControlsFragment -->
+  <string name="administrator_controls_general_label">General</string>
+  <string name="administrator_controls_edit_account">Edit account</string>
+  <string name="administrator_controls_profile_management_label">Profile Management</string>
+  <string name="administrator_controls_edit_profiles">Edit profiles</string>
+  <string name="administrator_controls_download_permissions_label">Download Permissions</string>
+  <string name="administrator_controls_update_on_wifi_title">Download and update only on Wi-fi</string>
+  <string name="administrator_controls_update_on_wifi_message">Topics will be downloaded and updated only on Wi-fi. Any downloads or updates of cellular data will be queued.</string>
+  <string name="administrator_controls_auto_update_title">Automatically update topics</string>
+  <string name="administrator_controls_auto_update_message">Downloaded topics that have new content available will automatically update.</string>
+  <string name="administrator_controls_app_information_label">App Information</string>
+  <string name="administrator_controls_app_version">App Version</string>
+  <string name="administrator_controls_account_actions_label">Account Actions</string>
+  <string name="administrator_controls_log_out">Log Out</string>
+  <string name="log_out_dialog_cancel_button">Cancel</string>
+  <string name="log_out_dialog_okay_button">Ok</string>
+  <string name="log_out_dialog_message">Are you sure you want to log out of your profile?</string>
+  <!-- AppVersionFragment -->
+  <string name="app_version_name">App Version %s</string>
+  <string name="app_last_update_date">The last update was installed on %s. Use the above version number to send feedback about bugs.</string>
+  <!-- OptionsActivity -->
+  <string name="title_story_text_size">Story Text Size</string>
+  <string name="title_app_language">App Language</string>
+  <string name="title_default_audio">Default Audio Language</string>
+  <string name="story_text_will_look_like_this">Story text will look like this</string>
+  <string name="constant_string_for_text_size">A</string>
+  <string name="audio_language">Audio Language</string>
+  <string name="app_language">App Language</string>
+  <string name="story_text_size">Story Text Size</string>
+  <string name="profile">Profile</string>
+  <string name="topics_in_progress">Topics in Progress</string>
+  <string name="topic_in_progress">Topic in Progress</string>
+  <string name="stories_completed">Stories Completed</string>
+  <string name="story_completed">Story Completed</string>
+  <!-- WalkthroughActivity -->
+  <string name="walkthrough_welcome_description">Learn new math skills with stories that show you how to use them in your daily life</string>
+  <string name="welcome">"Welcome %s!"</string>
 </resources>
Index: domain/src/main/java/org/oppia/domain/topic/StoryProgressController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/java/org/oppia/domain/topic/StoryProgressController.kt	(date 1584621433000)
+++ domain/src/main/java/org/oppia/domain/topic/StoryProgressController.kt	(date 1584626399000)
@@ -1,13 +1,18 @@
 package org.oppia.domain.topic
 
 import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
-import org.json.JSONArray
+import kotlinx.coroutines.Deferred
 import org.oppia.app.model.ChapterPlayState
 import org.oppia.app.model.ChapterProgress
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.StoryProgress
-import org.oppia.domain.util.JsonAssetRetriever
+import org.oppia.app.model.TopicProgress
+import org.oppia.app.model.TopicProgressDatabase
+import org.oppia.data.persistence.PersistentCacheStore
 import org.oppia.util.data.AsyncResult
+import org.oppia.util.data.DataProvider
+import org.oppia.util.data.DataProviders
+import org.oppia.util.logging.Logger
 import javax.inject.Inject
 import javax.inject.Singleton
 
@@ -28,188 +33,213 @@
 const val RATIOS_EXPLORATION_ID_1 = "5NWuolNcwH6e"
 const val RATIOS_EXPLORATION_ID_2 = "k2bQ7z5XHNbK"
 const val RATIOS_EXPLORATION_ID_3 = "tIoSb3HZFN6e"
-private val FRACTIONS_COMPLETED_CHAPTERS = listOf(FRACTIONS_EXPLORATION_ID_0)
-private val RATIOS_COMPLETED_CHAPTERS = listOf<String>()
-val COMPLETED_EXPLORATIONS = FRACTIONS_COMPLETED_CHAPTERS + RATIOS_COMPLETED_CHAPTERS
+
+private const val CACHE_NAME = "topic_progress_database"
+
+private const val TRANSFORMED_GET_STORY_PROGRESS_LIST_PROVIDER_ID = "transformed_get_story_progress_list_provider_id"
+private const val TRANSFORMED_GET_TOPIC_PROGRESS_PROVIDER_ID = "transformed_get_topic_progress_provider_id"
+private const val TRANSFORMED_GET_STORY_PROGRESS_PROVIDER_ID = "transformed_get_story_progress_provider_id"
+private const val ADD_STORY_PROGRESS_TRANSFORMED_PROVIDER_ID = "add_story_progress_transformed_id"
+private const val RECENTLY_PLAYED_CHAPTER_TRANSFORMED_PROVIDER_ID = "recently_played_chapter_transformed_id"
 
 /** Controller that records and provides completion statuses of chapters within the context of a story. */
 @Singleton
 class StoryProgressController @Inject constructor(
-  private val jsonAssetRetriever: JsonAssetRetriever
+  private val cacheStoreFactory: PersistentCacheStore.Factory,
+  private val dataProviders: DataProviders,
+  private val logger: Logger
 ) {
   // TODO(#21): Determine whether chapters can have missing prerequisites in the initial prototype, or if that just
   //  indicates that they can't be started due to previous chapter not yet being completed.
 
-  private val trackedStoriesProgress: Map<String, TrackedStoryProgress> by lazy { createInitialStoryProgressState() }
+  /** These Statuses correspond to the exceptions above such that if the deferred contains. */
+  private enum class StoryProgressActionStatus {
+    SUCCESS
+  }
+
+  private val cacheStoreMap = mutableMapOf<ProfileId, PersistentCacheStore<TopicProgressDatabase>>()
 
   /**
-   * Records the specified chapter completed within the context of the specified story. Returns a [LiveData] that
+   * Records the specified chapter completed within the context of the specified exploration, story, topic. Returns a [LiveData] that
    * provides exactly one [AsyncResult] to indicate whether this operation has succeeded. This method will never return
    * a pending result.
-   */
-  fun recordCompletedChapter(storyId: String, explorationId: String): LiveData<AsyncResult<Nothing?>> {
-    return try {
-      trackCompletedChapter(storyId, explorationId)
-      MutableLiveData(AsyncResult.success(null))
-    } catch (e: Exception) {
-      MutableLiveData(AsyncResult.failed(e))
-    }
-  }
-
-  // TODO(#21): Implement notifying story progress changes when a chapter is recorded as complete, and add tests for
-  //  this case.
-
-  /**
-   * Returns a [LiveData] corresponding to the story progress of the specified story, or a failure if no such story can
-   * be identified. This [LiveData] will update as the story's progress changes.
+   *
+   * @param profileId the ID corresponding to the profile for which progress needs to be stored.
+   * @param topicId the ID corresponding to the topic for which progress needs to be stored.
+   * @param storyId the ID corresponding to the story for which progress needs to be stored.
+   * @param explorationId the chapter id which will marked as [ChapterPlayState.COMPLETED]
+   * @param completionTimestamp the timestamp at the exploration was finished.
+   * @return a [LiveData] that indicates the success/failure of this record progress operation.
    */
-  fun getStoryProgress(storyId: String): LiveData<AsyncResult<StoryProgress>> {
-    return try {
-      MutableLiveData(AsyncResult.success(createStoryProgressSnapshot(storyId)))
-    } catch (e: Exception) {
-      MutableLiveData(AsyncResult.failed(e))
-    }
-  }
-
-  // TODO(#21): Hide this functionality behind a data provider rather than punching a hole in this controller.
-  internal fun retrieveStoryProgress(storyId: String): StoryProgress {
-    return createStoryProgressSnapshot(storyId)
-  }
-
-  private fun trackCompletedChapter(storyId: String, explorationId: String) {
-    check(storyId in trackedStoriesProgress) { "No story found with ID: $storyId" }
-    trackedStoriesProgress.getValue(storyId).markChapterCompleted(explorationId)
-  }
-
-  private fun createStoryProgressSnapshot(storyId: String): StoryProgress {
-    check(storyId in trackedStoriesProgress) { "No story found with ID: $storyId" }
-    return trackedStoriesProgress.getValue(storyId).toStoryProgress()
-  }
-
-  private fun createInitialStoryProgressState(): Map<String, TrackedStoryProgress> {
-    return mapOf(
-      TEST_STORY_ID_0 to createStoryProgress0(),
-      TEST_STORY_ID_1 to createStoryProgress1(),
-      TEST_STORY_ID_2 to createStoryProgress2(),
-      FRACTIONS_STORY_ID_0 to createStoryProgressForJsonStory("fractions_stories.json", /* index= */ 0),
-      RATIOS_STORY_ID_0 to createStoryProgressForJsonStory("ratios_stories.json", /* index= */ 0),
-      RATIOS_STORY_ID_1 to createStoryProgressForJsonStory("ratios_stories.json", /* index= */ 1)
-    )
-  }
-
-  private fun createStoryProgressForJsonStory(fileName: String, index: Int): TrackedStoryProgress {
-    val storyData = jsonAssetRetriever.loadJsonFromAsset(fileName)?.getJSONArray("story_list")!!
-    val explorationIdList = getExplorationIdsFromStory(
-      storyData.getJSONObject(index).getJSONObject("story")
-        .getJSONObject("story_contents").getJSONArray("nodes")
-    )
-    return TrackedStoryProgress(
-      chapterList = explorationIdList,
-      completedChapters = COMPLETED_EXPLORATIONS.filter(explorationIdList::contains).toSet()
-    )
-  }
-
-  private fun getExplorationIdsFromStory(chapterData: JSONArray): List<String> {
-    val explorationIdList = mutableListOf<String>()
-    for (i in 0 until chapterData.length()) {
-      val chapter = chapterData.getJSONObject(i)
-      explorationIdList.add(chapter.getString("exploration_id"))
-    }
-    return explorationIdList
-  }
-
-  private fun createStoryProgress0(): TrackedStoryProgress {
-    return TrackedStoryProgress(
-      chapterList = listOf(TEST_EXPLORATION_ID_0),
-      completedChapters = setOf(TEST_EXPLORATION_ID_0)
-    )
-  }
-
-  private fun createStoryProgress1(): TrackedStoryProgress {
-    return TrackedStoryProgress(
-      chapterList = listOf(TEST_EXPLORATION_ID_1, TEST_EXPLORATION_ID_2, TEST_EXPLORATION_ID_3),
-      completedChapters = setOf(TEST_EXPLORATION_ID_1)
-    )
-  }
-
-  private fun createStoryProgress2(): TrackedStoryProgress {
-    return TrackedStoryProgress(
-      chapterList = listOf(TEST_EXPLORATION_ID_4),
-      completedChapters = setOf()
-    )
-  }
-
-  /**
-   * Mutable container for [StoryProgress] that provides support for determining whether a specific chapter can be
-   * played in the context of this story, marking a chapter as played, and converting to a [StoryProgress] object for
-   * reporting to the UI.
-   */
-  private class TrackedStoryProgress(private val chapterList: List<String>, completedChapters: Set<String>) {
-    private val trackedCompletedChapters: MutableSet<String> = completedChapters.toMutableSet()
-
-    // TODO(#21): Implement tests for the following invariant checking logic, if possible.
-    init {
-      // Verify that the progress object is well-defined by ensuring that the invariant where lessons must be played in
-      // order holds.
-      var expectedCompleted: Boolean? = null
-      chapterList.reversed().forEach { explorationId ->
-        val completedChapter = explorationId in trackedCompletedChapters
-        val expectedCompletedSnapshot = expectedCompleted
-        if (expectedCompletedSnapshot == null) {
-          // This should always be initialized for the last lesson. If  it's completed, all previous lessons must be
-          // completed. If it's not, then previous lessons may be completed or incomplete.
-          expectedCompleted = completedChapter
-        } else if (completedChapter != expectedCompletedSnapshot) {
-          // There's exactly one case where the expectation can change: if the next lesson is not completed. This means
-          // the current lesson is the most recent one completed in the list, and all previous lessons must also be
-          // completed.
-          check(!expectedCompletedSnapshot) {
-            "Expected lessons to be completed in order with no holes between them, and starting from the beginning " +
-                "of the story. Encountered uncompleted chapter right before a completed chapter: $explorationId"
-          }
-          // This is the first lesson that was completed after encountering one or more lessons that are not completed.
-          // All previous lessons in the list (the lessons next to be iterated) must be completed in order for the
-          // in-order invariant to hold.
-          expectedCompleted = true
-        }
-        // Otherwise, the invariant holds. Continue on to the previous lesson.
-      }
-    }
-
-    /**
-     * Returns whether the specified exploration ID can be played, or if it's missing prerequisites. Fails if the
-     * specified exploration ID is not contained in this story.
-     */
-    fun canPlayChapter(explorationId: String): Boolean {
-      // The chapter can be played only if it's the first one, or the chapter before it has been completed.
-      check(explorationId in chapterList) { "Chapter not found in story: $explorationId" }
-      val chapterIndex = chapterList.indexOf(explorationId)
-      return if (chapterIndex == 0) true else chapterList[chapterIndex - 1] in trackedCompletedChapters
-    }
-
-    /** Marks the specified exploration ID as completed, or fails if the exploration is not contained in this story. */
-    fun markChapterCompleted(explorationId: String) {
-      check(canPlayChapter(explorationId)) { "Cannot mark chapter as completed, missing prerequisites: $explorationId" }
-      trackedCompletedChapters.add(explorationId)
-    }
-
-    /** Returns an immutable [StoryProgress] representation of this progress object. */
-    fun toStoryProgress(): StoryProgress {
-      return StoryProgress.newBuilder()
-        .addAllChapterProgress(chapterList.map(this::buildChapterProgress))
-        .build()
-    }
-
-    private fun buildChapterProgress(explorationId: String): ChapterProgress {
-      val chapterPlayState = when {
-        explorationId in trackedCompletedChapters -> ChapterPlayState.COMPLETED
-        canPlayChapter(explorationId) -> ChapterPlayState.NOT_STARTED
-        else -> ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES /* Assume only reason is missing prerequisites. */
-      }
-      return ChapterProgress.newBuilder()
-        .setExplorationId(explorationId)
-        .setPlayState(chapterPlayState)
-        .build()
-    }
+  fun recordCompletedChapter(
+    profileId: ProfileId,
+    topicId: String,
+    storyId: String,
+    explorationId: String,
+    completionTimestamp: Long
+  ): LiveData<AsyncResult<Any?>> {
+    val deferred =
+      retrieveCacheStore(profileId).storeDataWithCustomChannelAsync(updateInMemoryCache = true) { topicProgressDatabase ->
+        val chapterProgress = ChapterProgress.newBuilder()
+          .setExplorationId(explorationId)
+          .setChapterPlayState(ChapterPlayState.COMPLETED)
+          .setLastPlayedTimestamp(completionTimestamp)
+          .build()
+
+        val storyProgressBuilder = StoryProgress.newBuilder().setStoryId(storyId)
+        if (topicProgressDatabase.topicProgressMap[topicId]?.storyProgressMap?.get(storyId) != null) {
+          storyProgressBuilder.putAllChapterProgress(topicProgressDatabase.topicProgressMap[topicId]!!.storyProgressMap[storyId]!!.chapterProgressMap)
+        }
+        storyProgressBuilder.putChapterProgress(explorationId, chapterProgress)
+        val storyProgress = storyProgressBuilder.build()
+
+        val topicProgressBuilder = TopicProgress.newBuilder().setTopicId(topicId)
+        if (topicProgressDatabase.topicProgressMap[topicId] != null) {
+          topicProgressBuilder
+            .putAllStoryProgress(topicProgressDatabase.topicProgressMap[topicId]!!.storyProgressMap)
+        }
+        topicProgressBuilder.putStoryProgress(storyId, storyProgress)
+        val topicProgress = topicProgressBuilder.build()
+
+        val topicDatabaseBuilder = topicProgressDatabase.toBuilder().putTopicProgress(topicId, topicProgress)
+        Pair(topicDatabaseBuilder.build(), StoryProgressActionStatus.SUCCESS)
+      }
+
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(ADD_STORY_PROGRESS_TRANSFORMED_PROVIDER_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(deferred)
+      })
+  }
+
+  /**
+   * Records the recently played chapter for a specified exploration, story, topic. Returns a [LiveData] that
+   * provides exactly one [AsyncResult] to indicate whether this operation has succeeded. This method will never return
+   * a pending result.
+   *
+   * @param profileId the ID corresponding to the profile for which progress needs to be stored.
+   * @param topicId the ID corresponding to the topic for which progress needs to be stored.
+   * @param storyId the ID corresponding to the story for which progress needs to be stored.
+   * @param explorationId the chapter id which will marked as [ChapterPlayState.NOT_STARTED] if it has not been [ChapterPlayState.COMPLETED] already.
+   * @param lastPlayedTimestamp the timestamp at which the exploration was last played.
+   * @return a [LiveData] that indicates the success/failure of this record progress operation.
+   */
+  fun recordRecentlyPlayedChapter(
+    profileId: ProfileId,
+    topicId: String,
+    storyId: String,
+    explorationId: String,
+    lastPlayedTimestamp: Long
+  ): LiveData<AsyncResult<Any?>> {
+    val deferred =
+      retrieveCacheStore(profileId).storeDataWithCustomChannelAsync(updateInMemoryCache = true) { topicProgressDatabase ->
+        val previousChapterProgress =
+          topicProgressDatabase
+            .topicProgressMap[topicId]?.storyProgressMap?.get(storyId)?.chapterProgressMap?.get(explorationId)
+
+        val chapterProgressBuilder = if (previousChapterProgress != null) {
+          previousChapterProgress.toBuilder()
+        } else {
+          ChapterProgress.newBuilder()
+            .setChapterPlayState(ChapterPlayState.STARTED_NOT_COMPLETED)
+            .setExplorationId(explorationId)
+        }
+        if (previousChapterProgress != null) {
+          chapterProgressBuilder.lastPlayedTimestamp =
+            if (previousChapterProgress.lastPlayedTimestamp < lastPlayedTimestamp && previousChapterProgress.chapterPlayState != ChapterPlayState.COMPLETED) {
+              lastPlayedTimestamp
+            } else {
+              previousChapterProgress.lastPlayedTimestamp
+            }
+        } else {
+          chapterProgressBuilder.lastPlayedTimestamp = lastPlayedTimestamp
+        }
+        val storyProgressBuilder = StoryProgress.newBuilder().setStoryId(storyId)
+        if (topicProgressDatabase.topicProgressMap[topicId]?.storyProgressMap?.get(storyId) != null) {
+          storyProgressBuilder.putAllChapterProgress(topicProgressDatabase.topicProgressMap[topicId]!!.storyProgressMap[storyId]!!.chapterProgressMap)
+        }
+        storyProgressBuilder.putChapterProgress(explorationId, chapterProgressBuilder.build())
+        val storyProgress = storyProgressBuilder.build()
+
+        val topicProgressBuilder = TopicProgress.newBuilder().setTopicId(topicId)
+        if (topicProgressDatabase.topicProgressMap[topicId] != null) {
+          topicProgressBuilder
+            .putAllStoryProgress(topicProgressDatabase.topicProgressMap[topicId]!!.storyProgressMap)
+        }
+        topicProgressBuilder.putStoryProgress(storyId, storyProgress)
+        val topicProgress = topicProgressBuilder.build()
+
+        val topicDatabaseBuilder = topicProgressDatabase.toBuilder().putTopicProgress(topicId, topicProgress)
+        Pair(topicDatabaseBuilder.build(), StoryProgressActionStatus.SUCCESS)
+      }
+
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(RECENTLY_PLAYED_CHAPTER_TRANSFORMED_PROVIDER_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(deferred)
+      })
+  }
+
+  /** Returns list of [TopicProgress] [DataProvider] for a particular profile. */
+  internal fun retrieveTopicProgressListDataProvider(profileId: ProfileId): DataProvider<List<TopicProgress>> {
+    return dataProviders.transformAsync(
+      TRANSFORMED_GET_STORY_PROGRESS_LIST_PROVIDER_ID,
+      retrieveCacheStore(profileId)
+    ) { topicProgressDatabase ->
+      val topicProgressList = mutableListOf<TopicProgress>()
+      topicProgressList.addAll(topicProgressDatabase.topicProgressMap.values)
+      AsyncResult.success(topicProgressList.toList())
+    }
+  }
+
+  /** Returns a [TopicProgress] [DataProvider] for a specific topicId, per-profile basis. */
+  internal fun retrieveTopicProgressDataProvider(profileId: ProfileId, topicId: String): DataProvider<TopicProgress> {
+    return dataProviders.transformAsync(
+      TRANSFORMED_GET_TOPIC_PROGRESS_PROVIDER_ID,
+      retrieveCacheStore(profileId)
+    ) {
+      AsyncResult.success(it.topicProgressMap[topicId] ?: TopicProgress.getDefaultInstance())
+    }
+  }
+
+  /** Returns a [StoryProgress] [DataProvider] for a specific storyId, per-profile basis. */
+  internal fun retrieveStoryProgressDataProvider(
+    profileId: ProfileId,
+    topicId: String,
+    storyId: String
+  ): DataProvider<StoryProgress> {
+    return dataProviders.transformAsync(
+      TRANSFORMED_GET_STORY_PROGRESS_PROVIDER_ID,
+      retrieveTopicProgressDataProvider(profileId, topicId)
+    ) {
+      AsyncResult.success(it.storyProgressMap[storyId] ?: StoryProgress.getDefaultInstance())
+    }
+  }
+
+  private suspend fun getDeferredResult(deferred: Deferred<StoryProgressActionStatus>): AsyncResult<Any?> {
+    return when (deferred.await()) {
+      StoryProgressActionStatus.SUCCESS -> AsyncResult.success(null)
+    }
+  }
+
+  private fun retrieveCacheStore(profileId: ProfileId): PersistentCacheStore<TopicProgressDatabase> {
+    val cacheStore = if (profileId in cacheStoreMap) {
+      cacheStoreMap[profileId]!!
+    } else {
+      val cacheStore =
+        cacheStoreFactory.createPerProfile(CACHE_NAME, TopicProgressDatabase.getDefaultInstance(), profileId)
+      cacheStoreMap[profileId] = cacheStore
+      cacheStore
+    }
+
+    cacheStore.primeCacheAsync().invokeOnCompletion {
+      it?.let { it ->
+        logger.e(
+          "StoryProgressController",
+          "Failed to prime cache ahead of LiveData conversion for StoryProgressController.",
+          it
+        )
+      }
+    }
+
+    return cacheStore
   }
 }
Index: domain/src/main/java/org/oppia/domain/topic/TopicListController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/java/org/oppia/domain/topic/TopicListController.kt	(date 1584621433000)
+++ domain/src/main/java/org/oppia/domain/topic/TopicListController.kt	(date 1584626399000)
@@ -13,6 +13,8 @@
 import org.json.JSONObject
 import org.oppia.app.model.AnswerGroup
 import org.oppia.app.model.ChapterPlayState
+import org.oppia.app.model.ChapterProgress
+import org.oppia.app.model.ChapterSummary
 import org.oppia.app.model.Exploration
 import org.oppia.app.model.Hint
 import org.oppia.app.model.Interaction
@@ -20,6 +22,7 @@
 import org.oppia.app.model.LessonThumbnailGraphic
 import org.oppia.app.model.OngoingStoryList
 import org.oppia.app.model.Outcome
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.PromotedStory
 import org.oppia.app.model.Solution
 import org.oppia.app.model.State
@@ -27,6 +30,7 @@
 import org.oppia.app.model.SubtitledHtml
 import org.oppia.app.model.Topic
 import org.oppia.app.model.TopicList
+import org.oppia.app.model.TopicProgress
 import org.oppia.app.model.TopicSummary
 import org.oppia.app.model.Voiceover
 import org.oppia.app.model.VoiceoverMapping
@@ -35,21 +39,26 @@
 import org.oppia.util.caching.AssetRepository
 import org.oppia.util.caching.CacheAssetsLocally
 import org.oppia.util.data.AsyncResult
+import org.oppia.util.data.DataProviders
 import org.oppia.util.logging.Logger
 import org.oppia.util.parser.DefaultGcsPrefix
 import org.oppia.util.parser.DefaultGcsResource
 import org.oppia.util.parser.ImageDownloadUrlTemplate
 import org.oppia.util.threading.BackgroundDispatcher
+import java.util.Date
 import java.util.concurrent.TimeUnit
 import javax.inject.Inject
 import javax.inject.Singleton
+import kotlin.collections.ArrayList
+
+private const val ONE_WEEK_IN_DAYS = 7
+private const val ONE_DAY_IN_MS = 24 * 60 * 60 * 1000
 
 const val TEST_TOPIC_ID_0 = "test_topic_id_0"
 const val TEST_TOPIC_ID_1 = "test_topic_id_1"
 const val FRACTIONS_TOPIC_ID = "GJ2rLXRKD5hw"
+const val SUBTOPIC_TOPIC_ID = "1"
 const val RATIOS_TOPIC_ID = "omzF4oqgeTXd"
-const val MATTHEW_GOES_TO_THE_BAKERY_STORY_ID = "wANbh4oOClga"
-val TOPIC_IDS = listOf(FRACTIONS_TOPIC_ID, RATIOS_TOPIC_ID)
 val TOPIC_THUMBNAILS = mapOf(
   FRACTIONS_TOPIC_ID to createTopicThumbnail0(),
   RATIOS_TOPIC_ID to createTopicThumbnail1()
@@ -77,11 +86,14 @@
 private const val CUSTOM_IMG_FILE_PATH_ATTRIBUTE = "filepath-with-value"
 private const val REPLACE_IMG_FILE_PATH_ATTRIBUTE = "src"
 
+private const val TRANSFORMED_GET_ONGOING_STORY_LIST_PROVIDER_ID = "transformed_get_ongoing_story_list_provider_id"
+
 private val EVICTION_TIME_MILLIS = TimeUnit.DAYS.toMillis(1)
 
 /** Controller for retrieving the list of topics available to the learner to play. */
 @Singleton
 class TopicListController @Inject constructor(
+  private val dataProviders: DataProviders,
   private val jsonAssetRetriever: JsonAssetRetriever,
   private val topicController: TopicController,
   private val storyProgressController: StoryProgressController,
@@ -150,9 +162,21 @@
   /**
    * Returns the list of ongoing [PromotedStory]s that can be viewed via a link on the homescreen. The total number of
    * promoted stories should correspond to the ongoing story count within the [TopicList] returned by [getTopicList].
+   *
+   * @param profileId the ID corresponding to the profile for which [PromotedStory] needs to be fetched.
+   * @return a [LiveData] for a [OngoingStoryList].
    */
-  fun getOngoingStoryList(): LiveData<AsyncResult<OngoingStoryList>> {
-    return MutableLiveData(AsyncResult.success(createOngoingStoryList()))
+
+  fun getOngoingStoryList(profileId: ProfileId): LiveData<AsyncResult<OngoingStoryList>> {
+    val ongoingStoryListDataProvider = dataProviders.transformAsync(
+      TRANSFORMED_GET_ONGOING_STORY_LIST_PROVIDER_ID,
+      storyProgressController.retrieveTopicProgressListDataProvider(profileId)
+    ) {
+      val ongoingStoryList = createOngoingStoryListFromProgress(it)
+      AsyncResult.success(ongoingStoryList)
+    }
+
+    return dataProviders.convertToLiveData(ongoingStoryListDataProvider)
   }
 
   private fun createTopicList(): TopicList {
@@ -161,10 +185,6 @@
       .addTopicSummary(createTopicSummary1())
       .addTopicSummary(createFractionsTopicSummary())
       .addTopicSummary(createRatiosTopicSummary())
-    val ongoingStoryList = createOngoingStoryList()
-    if (ongoingStoryList.recentStoryCount > 0) {
-      topicListBuilder.promotedStory = ongoingStoryList.recentStoryList.first()
-    }
     return topicListBuilder.build()
   }
 
@@ -225,40 +245,102 @@
       .build()
   }
 
-  private fun createOngoingStoryList(): OngoingStoryList {
-    // TODO(#21): Thoroughly test the construction of this list based on lesson progress.
+  private fun createOngoingStoryListFromProgress(topicProgressList: List<TopicProgress>): OngoingStoryList {
     val ongoingStoryListBuilder = OngoingStoryList.newBuilder()
-    for (topicId in TOPIC_IDS) {
-      val topic = topicController.retrieveTopic(topicId)
-      for (storySummary in topic.storyList) {
-        val storyId = storySummary.storyId
-        val storyProgress = storyProgressController.retrieveStoryProgress(storyId)
-        val completedChapterCount = storyProgress.chapterProgressList.count { progress ->
-          progress.playState == ChapterPlayState.COMPLETED
-        }
-        if (completedChapterCount > 0) {
-          // TODO(#21): Track when a lesson was completed to determine to which list its story should be added.
-          val nextChapterId = storyProgress.chapterProgressList.find { progress ->
-            progress.playState == ChapterPlayState.NOT_STARTED
-          }?.explorationId
-          val nextChapterSummary =
-            storySummary.chapterList.find { chapterSummary -> chapterSummary.explorationId == nextChapterId }
-          ongoingStoryListBuilder.addRecentStory(
-            createPromotedStory(
+    topicProgressList.forEach { topicProgress ->
+      val topic = topicController.retrieveTopic(topicProgress.topicId)
+      topicProgress.storyProgressMap.values.forEach { storyProgress ->
+        val storyId = storyProgress.storyId
+        val story = topicController.retrieveStory(storyId)
+
+        val completedChapterProgressList =
+          storyProgress.chapterProgressMap.values.filter { chapterProgress -> chapterProgress.chapterPlayState == ChapterPlayState.COMPLETED }
+            .sortedByDescending { chapterProgress -> chapterProgress.lastPlayedTimestamp }
+
+        val lastCompletedChapterProgress: ChapterProgress? = completedChapterProgressList.firstOrNull()
+
+        val startedChapterProgressList =
+          storyProgress.chapterProgressMap.values.filter { chapterProgress -> chapterProgress.chapterPlayState == ChapterPlayState.STARTED_NOT_COMPLETED }
+            .sortedByDescending { chapterProgress -> chapterProgress.lastPlayedTimestamp }
+
+        val recentlyPlayerChapterProgress: ChapterProgress? = startedChapterProgressList.firstOrNull()
+        if (recentlyPlayerChapterProgress != null) {
+          val recentlyPlayerChapterSummary: ChapterSummary? = story.chapterList.find { chapterSummary ->
+            recentlyPlayerChapterProgress.explorationId == chapterSummary.explorationId
+          }
+          if (recentlyPlayerChapterSummary != null) {
+            val numberOfDaysPassed = (Date().time - recentlyPlayerChapterProgress.lastPlayedTimestamp) / ONE_DAY_IN_MS
+            val promotedStory = createPromotedStory(
+              storyId,
+              topic,
+              completedChapterProgressList.size,
+              story.chapterCount,
+              recentlyPlayerChapterSummary.name,
+              recentlyPlayerChapterSummary.explorationId
+            )
+            if (numberOfDaysPassed < ONE_WEEK_IN_DAYS) {
+              ongoingStoryListBuilder.addRecentStory(promotedStory)
+            } else {
+              ongoingStoryListBuilder.addOlderStory(promotedStory)
+            }
+          }
+        } else if (lastCompletedChapterProgress != null && lastCompletedChapterProgress.explorationId != story.chapterList.last().explorationId) {
+          val lastChapterSummary: ChapterSummary? = story.chapterList.find { chapterSummary ->
+            lastCompletedChapterProgress.explorationId == chapterSummary.explorationId
+          }
+          val nextChapterIndex = story.chapterList.indexOf(lastChapterSummary) + 1
+          val nextChapterSummary: ChapterSummary? = story.chapterList[nextChapterIndex]
+          if (nextChapterSummary != null) {
+            val numberOfDaysPassed = (Date().time - lastCompletedChapterProgress.lastPlayedTimestamp) / ONE_DAY_IN_MS
+            val promotedStory = createPromotedStory(
               storyId,
               topic,
-              completedChapterCount,
-              storyProgress.chapterProgressCount,
-              nextChapterSummary?.name,
-              nextChapterSummary?.explorationId
+              completedChapterProgressList.size,
+              story.chapterCount,
+              nextChapterSummary.name,
+              nextChapterSummary.explorationId
             )
-          )
+            if (numberOfDaysPassed < ONE_WEEK_IN_DAYS) {
+              ongoingStoryListBuilder.addRecentStory(promotedStory)
+            } else {
+              ongoingStoryListBuilder.addOlderStory(promotedStory)
+            }
+          }
         }
       }
+    }
+    if ((ongoingStoryListBuilder.olderStoryCount + ongoingStoryListBuilder.recentStoryCount) == 0) {
+      ongoingStoryListBuilder.addAllRecentStory(recommendedStoryList())
     }
     return ongoingStoryListBuilder.build()
   }
 
+  private fun recommendedStoryList(): List<PromotedStory> {
+    val recommendedStories = ArrayList<PromotedStory>()
+    recommendedStories.add(
+      createPromotedStory(
+        FRACTIONS_STORY_ID_0,
+        topicController.retrieveTopic(FRACTIONS_TOPIC_ID),
+        0,
+        2,
+        "What is a Fraction?",
+        FRACTIONS_EXPLORATION_ID_0
+      )
+    )
+
+    recommendedStories.add(
+      createPromotedStory(
+        RATIOS_STORY_ID_0,
+        topicController.retrieveTopic(RATIOS_TOPIC_ID),
+        0,
+        2,
+        "What is a Ratio?",
+        RATIOS_EXPLORATION_ID_0
+      )
+    )
+    return recommendedStories
+  }
+
   private fun createPromotedStory(
     storyId: String,
     topic: Topic,
@@ -271,11 +353,11 @@
     val promotedStoryBuilder = PromotedStory.newBuilder()
       .setStoryId(storyId)
       .setStoryName(storySummary.storyName)
+      .setLessonThumbnail(storySummary.storyThumbnail)
       .setTopicId(topic.topicId)
       .setTopicName(topic.name)
       .setCompletedChapterCount(completedChapterCount)
       .setTotalChapterCount(totalChapterCount)
-      .setLessonThumbnail(STORY_THUMBNAILS.getValue(storyId))
     if (nextChapterName != null && explorationId != null) {
       promotedStoryBuilder.nextChapterName = nextChapterName
       promotedStoryBuilder.explorationId = explorationId
Index: domain/src/main/java/org/oppia/domain/topic/TopicController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/java/org/oppia/domain/topic/TopicController.kt	(date 1584621433000)
+++ domain/src/main/java/org/oppia/domain/topic/TopicController.kt	(date 1584626399000)
@@ -5,15 +5,26 @@
 import org.json.JSONArray
 import org.json.JSONObject
 import org.oppia.app.model.ChapterPlayState
+import org.oppia.app.model.ChapterProgress
 import org.oppia.app.model.ChapterSummary
+import org.oppia.app.model.CompletedStory
+import org.oppia.app.model.CompletedStoryList
 import org.oppia.app.model.ConceptCard
+import org.oppia.app.model.OngoingTopicList
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.Question
+import org.oppia.app.model.ReviewCard
 import org.oppia.app.model.SkillSummary
 import org.oppia.app.model.SkillThumbnail
 import org.oppia.app.model.SkillThumbnailGraphic
+import org.oppia.app.model.StoryProgress
 import org.oppia.app.model.StorySummary
 import org.oppia.app.model.SubtitledHtml
+import org.oppia.app.model.Subtopic
+import org.oppia.app.model.SubtopicThumbnail
+import org.oppia.app.model.SubtopicThumbnailGraphic
 import org.oppia.app.model.Topic
+import org.oppia.app.model.TopicProgress
 import org.oppia.app.model.Translation
 import org.oppia.app.model.TranslationMapping
 import org.oppia.app.model.Voiceover
@@ -33,6 +44,10 @@
 const val FRACTIONS_SKILL_ID_0 = "5RM9KPfQxobH"
 const val FRACTIONS_SKILL_ID_1 = "UxTGIJqaHMLa"
 const val FRACTIONS_SKILL_ID_2 = "B39yK4cbHZYI"
+const val FRACTIONS_SUBTOPIC_ID_1 = "1"
+const val FRACTIONS_SUBTOPIC_ID_2 = "2"
+const val FRACTIONS_SUBTOPIC_ID_3 = "3"
+const val FRACTIONS_SUBTOPIC_ID_4 = "4"
 const val RATIOS_SKILL_ID_0 = "NGZ89uMw0IGV"
 const val TEST_SKILL_CONTENT_ID_0 = "test_skill_content_id_0"
 const val TEST_SKILL_CONTENT_ID_1 = "test_skill_content_id_1"
@@ -77,6 +92,13 @@
 
 private const val QUESTION_DATA_PROVIDER_ID = "QuestionDataProvider"
 
+private const val TRANSFORMED_GET_COMPLETED_STORIES_PROVIDER_ID = "transformed_get_completed_stories_provider_id"
+private const val TRANSFORMED_GET_ONGOING_TOPICS_PROVIDER_ID = "transformed_get_ongoing_topics_provider_id"
+private const val TRANSFORMED_GET_TOPIC_PROVIDER_ID = "transformed_get_topic_provider_id"
+private const val TRANSFORMED_GET_STORY_PROVIDER_ID = "transformed_get_story_provider_id"
+private const val COMBINED_TOPIC_PROVIDER_ID = "combined_topic_provider_id"
+private const val COMBINED_STORY_PROVIDER_ID = "combined_story_provider_id"
+
 /** Controller for retrieving all aspects of a topic. */
 @Singleton
 class TopicController @Inject constructor(
@@ -85,6 +107,7 @@
   private val stateRetriever: StateRetriever,
   private val storyProgressController: StoryProgressController
 ) {
+
   /** Returns the [Topic] corresponding to the specified topic ID, or a failed result if no such topic exists. */
   fun getTopic(topicId: String): LiveData<AsyncResult<Topic>> {
     return MutableLiveData(
@@ -96,19 +119,27 @@
     )
   }
 
-  // TODO(#21): Expose this as a data provider, or omit if it's not needed.
-  internal fun retrieveTopic(topicId: String): Topic {
-    return when (topicId) {
-      TEST_TOPIC_ID_0 -> createTestTopic0()
-      TEST_TOPIC_ID_1 -> createTestTopic1()
-      FRACTIONS_TOPIC_ID -> createTopicFromJson(
-        "fractions_topic.json", "fractions_skills.json", "fractions_stories.json"
+  /**
+   * Fetches a topic given a profile ID and a topic ID.
+   *
+   * @param profileId the ID corresponding to the profile for which progress needs fetched.
+   * @param topicId the ID corresponding to the topic which needs to be returned.
+   * @return a [LiveData] for [Topic] combined with [TopicProgress].
+   */
+  fun getTopic(profileId: ProfileId, topicId: String): LiveData<AsyncResult<Topic>> {
+    val topicDataProvider = dataProviders.createInMemoryDataProviderAsync(TRANSFORMED_GET_TOPIC_PROVIDER_ID) {
+      return@createInMemoryDataProviderAsync AsyncResult.success(retrieveTopic(topicId))
+    }
+    val topicProgressDataProvider = storyProgressController.retrieveTopicProgressDataProvider(profileId, topicId)
+
+    return dataProviders.convertToLiveData(
+      dataProviders.combine(
+        COMBINED_TOPIC_PROVIDER_ID,
+        topicDataProvider,
+        topicProgressDataProvider,
+        ::combineTopicAndTopicProgress
       )
-      RATIOS_TOPIC_ID -> createTopicFromJson(
-        "ratios_topic.json", "ratios_skills.json", "ratios_stories.json"
-      )
-      else -> throw IllegalArgumentException("Invalid topic ID: $topicId")
-    }
+    )
   }
 
   // TODO(#173): Move this to its own controller once structural data & saved progress data are better distinguished.
@@ -140,6 +171,31 @@
     )
   }
 
+  /**
+   * Fetches a story given a profile ID, a topic ID and story ID.
+   *
+   * @param profileId the ID corresponding to the profile for which progress needs fetched.
+   * @param topicId the ID corresponding to the topic which contains this story.
+   * @param storyId the ID corresponding to the story which needs to be returned.
+   * @return a [LiveData] for [StorySummary] combined with [StoryProgress].
+   */
+  fun getStory(profileId: ProfileId, topicId: String, storyId: String): LiveData<AsyncResult<StorySummary>> {
+    val storyDataProvider = dataProviders.createInMemoryDataProviderAsync(TRANSFORMED_GET_STORY_PROVIDER_ID) {
+      return@createInMemoryDataProviderAsync AsyncResult.success(retrieveStory(storyId))
+    }
+    val storyProgressDataProvider =
+      storyProgressController.retrieveStoryProgressDataProvider(profileId, topicId, storyId)
+
+    return dataProviders.convertToLiveData(
+      dataProviders.combine(
+        COMBINED_STORY_PROVIDER_ID,
+        storyDataProvider,
+        storyProgressDataProvider,
+        ::combineStorySummaryAndStoryProgress
+      )
+    )
+  }
+
   /** Returns the [ConceptCard] corresponding to the specified skill ID, or a failed result if there is none. */
   fun getConceptCard(skillId: String): LiveData<AsyncResult<ConceptCard>> {
     return MutableLiveData(
@@ -172,12 +228,225 @@
     )
   }
 
+  /** Returns the [ReviewCard] corresponding to the specified topic Id and subtopic ID, or a failed result if there is none. */
+  fun getReviewCard(topicId: String, subtopicId: String): LiveData<AsyncResult<ReviewCard>> {
+    return MutableLiveData(
+      try {
+        AsyncResult.success(retrieveReviewCard(topicId, subtopicId))
+      } catch (e: Exception) {
+        AsyncResult.failed<ReviewCard>(e)
+      }
+    )
+  }
+
+  /** Returns the list of all completed stories in the form of [CompletedStoryList] for a specific profile. */
+  fun getCompletedStoryList(profileId: ProfileId): LiveData<AsyncResult<CompletedStoryList>> {
+    return dataProviders.convertToLiveData(
+      dataProviders.transformAsync(
+        TRANSFORMED_GET_COMPLETED_STORIES_PROVIDER_ID,
+        storyProgressController.retrieveTopicProgressListDataProvider(profileId)
+      ) {
+        val completedStoryListBuilder = CompletedStoryList.newBuilder()
+        it.forEach { topicProgress ->
+          val topicName = retrieveTopic(topicProgress.topicId).name
+          val storyProgressList = mutableListOf<StoryProgress>()
+          val transformedStoryProgressList = topicProgress.storyProgressMap.values.toList()
+          storyProgressList.addAll(transformedStoryProgressList)
+
+          completedStoryListBuilder.addAllCompletedStory(
+            createCompletedStoryListFromProgress(
+              topicName,
+              storyProgressList
+            )
+          )
+        }
+        AsyncResult.success(completedStoryListBuilder.build())
+      }
+    )
+  }
+
+  /** Returns the list of ongoing topics in the form on [OngoingTopicList] for a specific profile. */
+  fun getOngoingTopicList(profileId: ProfileId): LiveData<AsyncResult<OngoingTopicList>> {
+    val ongoingTopicListDataProvider = dataProviders.transformAsync(
+      TRANSFORMED_GET_ONGOING_TOPICS_PROVIDER_ID,
+      storyProgressController.retrieveTopicProgressListDataProvider(profileId)
+    ) {
+      val ongoingTopicList = createOngoingTopicListFromProgress(it)
+      AsyncResult.success(ongoingTopicList)
+    }
+
+    return dataProviders.convertToLiveData(ongoingTopicListDataProvider)
+  }
+
   fun retrieveQuestionsForSkillIds(skillIdsList: List<String>): DataProvider<List<Question>> {
     return dataProviders.createInMemoryDataProvider(QUESTION_DATA_PROVIDER_ID) {
       loadQuestionsForSkillIds(skillIdsList)
     }
   }
 
+  private fun createOngoingTopicListFromProgress(topicProgressList: List<TopicProgress>): OngoingTopicList {
+    val ongoingTopicListBuilder = OngoingTopicList.newBuilder()
+    topicProgressList.forEach { topicProgress ->
+      val topic = retrieveTopic(topicProgress.topicId)
+      if (topicProgress.storyProgressCount != 0) {
+        if (checkIfTopicIsOngoing(topic, topicProgress)) {
+          ongoingTopicListBuilder.addTopic(topic)
+        }
+      }
+    }
+    return ongoingTopicListBuilder.build()
+  }
+
+  private fun checkIfTopicIsOngoing(topic: Topic, topicProgress: TopicProgress): Boolean {
+    val completedChapterProgressList = ArrayList<ChapterProgress>()
+    val startedChapterProgressList = ArrayList<ChapterProgress>()
+    topicProgress.storyProgressMap.values.toList().forEach { storyProgress ->
+      completedChapterProgressList.addAll(storyProgress.chapterProgressMap.values.filter { chapterProgress -> chapterProgress.chapterPlayState == ChapterPlayState.COMPLETED })
+      startedChapterProgressList.addAll(storyProgress.chapterProgressMap.values.filter { chapterProgress -> chapterProgress.chapterPlayState == ChapterPlayState.STARTED_NOT_COMPLETED })
+    }
+
+    // If there is no completed chapter, it cannot be an ongoing-topic.
+    if (completedChapterProgressList.isEmpty()) {
+      return false
+    }
+
+    // If there is atleast 1 completed chapter and 1 not-completed chapter, it is definitely an ongoing-topic.
+    if (startedChapterProgressList.isNotEmpty()) {
+      return true
+    }
+
+    if (topic.storyCount != topicProgress.storyProgressCount && topicProgress.storyProgressMap.isNotEmpty()) {
+      return true
+    }
+
+    topic.storyList.forEach { storySummary ->
+      if (topicProgress.storyProgressMap.containsKey(storySummary.storyId)) {
+        val storyProgress = topicProgress.storyProgressMap[storySummary.storyId]
+        val lastChapterSummary = storySummary.chapterList.last()
+        if (!storyProgress!!.chapterProgressMap.containsKey(lastChapterSummary.explorationId)) {
+          return true
+        }
+      }
+    }
+    return false
+  }
+
+  private fun createCompletedStoryListFromProgress(
+    topicName: String,
+    storyProgressList: List<StoryProgress>
+  ): List<CompletedStory> {
+    val completedStoryList = ArrayList<CompletedStory>()
+    storyProgressList.forEach { storyProgress ->
+      val storySummary = retrieveStory(storyProgress.storyId)
+      val lastChapterSummary = storySummary.chapterList.last()
+      if (storyProgress.chapterProgressMap.containsKey(lastChapterSummary.explorationId)
+        && storyProgress.chapterProgressMap[lastChapterSummary.explorationId]!!.chapterPlayState == ChapterPlayState.COMPLETED
+      ) {
+        val completedStoryBuilder = CompletedStory.newBuilder()
+          .setStoryId(storySummary.storyId)
+          .setStoryName(storySummary.storyName)
+          .setTopicName(topicName)
+          .setLessonThumbnail(storySummary.storyThumbnail)
+        completedStoryList.add(completedStoryBuilder.build())
+      }
+    }
+    return completedStoryList
+  }
+
+  /** Combines the specified topic without progress and topic-progress into a topic. */
+  private fun combineTopicAndTopicProgress(topic: Topic, topicProgress: TopicProgress): Topic {
+    val topicBuilder = topic.toBuilder()
+    if (topicProgress.storyProgressMap.isNotEmpty()) {
+      topic.storyList.forEachIndexed { storyIndex, storySummary ->
+        val updatedStorySummary = if (topicProgress.storyProgressMap.containsKey(storySummary.storyId)) {
+          combineStorySummaryAndStoryProgress(storySummary, topicProgress.storyProgressMap[storySummary.storyId]!!)
+        } else {
+          setFirstChapterAsNotStarted(storySummary)
+        }
+        topicBuilder.setStory(storyIndex, updatedStorySummary)
+      }
+    } else {
+      topic.storyList.forEachIndexed { storyIndex, storySummary ->
+        val updatedStorySummary = setFirstChapterAsNotStarted(storySummary)
+        topicBuilder.setStory(storyIndex, updatedStorySummary)
+      }
+    }
+    return topicBuilder.build()
+  }
+
+  /** Combines the specified story-summary without progress and story-progress into a new topic. */
+  private fun combineStorySummaryAndStoryProgress(
+    storySummary: StorySummary,
+    storyProgress: StoryProgress
+  ): StorySummary {
+    if (storyProgress.chapterProgressMap.isNotEmpty()) {
+      val storyBuilder = storySummary.toBuilder()
+      storySummary.chapterList.forEachIndexed { chapterIndex, chapterSummary ->
+        if (storyProgress.chapterProgressMap.containsKey(chapterSummary.explorationId)) {
+          val chapterBuilder = chapterSummary.toBuilder()
+          chapterBuilder.chapterPlayState = ChapterPlayState.COMPLETED
+          storyBuilder.setChapter(chapterIndex, chapterBuilder)
+        } else {
+          if (storyBuilder.getChapter(chapterIndex - 1).chapterPlayState == ChapterPlayState.COMPLETED) {
+            val chapterBuilder = chapterSummary.toBuilder()
+            chapterBuilder.chapterPlayState = ChapterPlayState.NOT_STARTED
+            storyBuilder.setChapter(chapterIndex, chapterBuilder)
+          } else {
+            val chapterBuilder = chapterSummary.toBuilder()
+            chapterBuilder.chapterPlayState = ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES
+            storyBuilder.setChapter(chapterIndex, chapterBuilder)
+          }
+        }
+      }
+      return storyBuilder.build()
+    } else {
+      return setFirstChapterAsNotStarted(storySummary)
+    }
+  }
+
+  // TODO(#21): Expose this as a data provider, or omit if it's not needed.
+  internal fun retrieveTopic(topicId: String): Topic {
+    return when (topicId) {
+      TEST_TOPIC_ID_0 -> createTestTopic0()
+      TEST_TOPIC_ID_1 -> createTestTopic1()
+      FRACTIONS_TOPIC_ID -> createTopicFromJson(
+        "fractions_topic.json", "fractions_skills.json", "fractions_stories.json"
+      )
+      RATIOS_TOPIC_ID -> createTopicFromJson(
+        "ratios_topic.json", "ratios_skills.json", "ratios_stories.json"
+      )
+      else -> throw IllegalArgumentException("Invalid topic ID: $topicId")
+    }
+  }
+
+  internal fun retrieveStory(storyId: String): StorySummary {
+    return when (storyId) {
+      TEST_STORY_ID_0 -> createTestTopic0Story0()
+      TEST_STORY_ID_1 -> createTestTopic0Story1()
+      TEST_STORY_ID_2 -> createTestTopic1Story2()
+      FRACTIONS_STORY_ID_0 -> createStoryFromJsonFile("fractions_stories.json", /* index= */ 0)
+      RATIOS_STORY_ID_0 -> createStoryFromJsonFile("ratios_stories.json", /* index= */ 0)
+      RATIOS_STORY_ID_1 -> createStoryFromJsonFile("ratios_stories.json", /* index= */ 1)
+      else -> throw IllegalArgumentException("Invalid story ID: $storyId")
+    }
+  }
+
+  // TODO(#45): Expose this as a data provider, or omit if it's not needed.
+  private fun retrieveReviewCard(topicId: String, subtopicId: String): ReviewCard {
+    return when (subtopicId) {
+      FRACTIONS_SUBTOPIC_ID_1 -> createSubtopicFromJson(
+        "fractions_subtopics.json"
+      )
+      FRACTIONS_SUBTOPIC_ID_2 -> createSubtopicFromJson(
+        "fractions_subtopics.json"
+      )
+      FRACTIONS_SUBTOPIC_ID_3 -> createSubtopicFromJson(
+        "fractions_subtopics.json"
+      )
+      else -> throw IllegalArgumentException("Invalid topic Name: $topicId")
+    }
+  }
+
   // Loads and returns the questions given a list of skill ids.
   private fun loadQuestionsForSkillIds(skillIdsList: List<String>): List<Question> {
     return loadQuestions(skillIdsList)
@@ -251,6 +520,25 @@
     return questionsList
   }
 
+  /** Helper function for [combineTopicAndTopicProgress] to set first chapter as NOT_STARTED in [StorySummary]. */
+  private fun setFirstChapterAsNotStarted(storySummary: StorySummary): StorySummary {
+    return if (storySummary.chapterList.isNotEmpty()) {
+      val storyBuilder = storySummary.toBuilder()
+      storySummary.chapterList.forEachIndexed { index, chapterSummary ->
+        val chapterBuilder = chapterSummary.toBuilder()
+        chapterBuilder.chapterPlayState = if (index != 0) {
+          ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES
+        } else {
+          ChapterPlayState.NOT_STARTED
+        }
+        storyBuilder.setChapter(index, chapterBuilder)
+      }
+      storyBuilder.build()
+    } else {
+      storySummary
+    }
+  }
+
   private fun createQuestionFromJsonObject(questionJson: JSONObject): Question {
     return Question.newBuilder()
       .setQuestionId(questionJson.getString("id"))
@@ -366,10 +654,13 @@
       .build()
   }
 
-  /** Utility to create a topic from its json representation. The json file is expected to have
-   * a key called 'topic' that holds the topic data. */
+  /**
+   * Creates topic from its json representation. The json file is expected to have
+   * a key called 'topic' that holds the topic data.
+   */
   private fun createTopicFromJson(topicFileName: String, skillFileName: String, storyFileName: String): Topic {
     val topicData = jsonAssetRetriever.loadJsonFromAsset(topicFileName)?.getJSONObject("topic")!!
+    val subtopicList: List<Subtopic> = createSubtopicListFromJsonArray(topicData.optJSONArray("subtopics"))
     val topicId = topicData.getString("id")
     return Topic.newBuilder()
       .setTopicId(topicId)
@@ -379,17 +670,59 @@
       .addAllStory(createStoriesFromJson(storyFileName))
       .setTopicThumbnail(TOPIC_THUMBNAILS.getValue(topicId))
       .setDiskSizeBytes(computeTopicSizeBytes(TOPIC_FILE_ASSOCIATIONS.getValue(topicId)))
+      .addAllSubtopic(subtopicList)
       .build()
   }
 
+  /** Creates a sub-topic from its json representation. */
+  private fun createSubtopicFromJson(topicFileName: String): ReviewCard {
+    val subtopicData = jsonAssetRetriever.loadJsonFromAsset(topicFileName)?.getJSONObject("page_contents")!!
+    val subtopicTitle = jsonAssetRetriever.loadJsonFromAsset(topicFileName)?.getString("subtopic_title")!!
+    return ReviewCard.newBuilder()
+      .setSubtopicTitle(subtopicTitle)
+      .setPageContents(
+        SubtitledHtml.newBuilder()
+          .setHtml(subtopicData.getJSONObject("subtitled_html").getString("html"))
+          .setContentId(subtopicData.getJSONObject("subtitled_html").getString("content_id")).build()
+      )
+      .build()
+  }
+
+  /**
+   * Creates the subtopic list of a topic from its json representation. The json file is expected to have
+   * a key called 'subtopic' that contains an array of skill Ids,subtopic_id and title.
+   */
+  private fun createSubtopicListFromJsonArray(subtopicJsonArray: JSONArray?): List<Subtopic> {
+    val subtopicList = mutableListOf<Subtopic>()
+
+    for (i in 0 until subtopicJsonArray!!.length()) {
+      val skillIdList = ArrayList<String>()
+
+      val currentSubtopicJsonObject = subtopicJsonArray.optJSONObject(i)
+      val skillJsonArray = currentSubtopicJsonObject.optJSONArray("skill_ids")
+
+      for (j in 0 until skillJsonArray.length()) {
+        skillIdList.add(skillJsonArray.optString(j))
+      }
+      val subtopic = Subtopic.newBuilder().setSubtopicId(currentSubtopicJsonObject.optString("id"))
+        .setTitle(currentSubtopicJsonObject.optString("title"))
+        .setSubtopicThumbnail(createSubtopicThumbnail(currentSubtopicJsonObject.optString("id")))
+        .addAllSkillIds(skillIdList).build()
+      subtopicList.add(subtopic)
+    }
+    return subtopicList
+  }
+
   private fun computeTopicSizeBytes(constituentFiles: List<String>): Long {
     // TODO(#169): Compute this based on protos & the combined topic package.
     // TODO(#386): Incorporate audio & image files in this computation.
     return constituentFiles.map(jsonAssetRetriever::getAssetSize).map(Int::toLong).reduceRight(Long::plus)
   }
 
-  /** Utility to create the skill list of a topic from its json representation. The json file is expected to have
-   * a key called 'skill_list' that contains an array of skill objects, each with the key 'skill'. */
+  /**
+   * Creates a list of skill for topic from its json representation. The json file is expected to have
+   * a key called 'skill_list' that contains an array of skill objects, each with the key 'skill'.
+   */
   private fun createSkillsFromJson(fileName: String): List<SkillSummary> {
     val skillList = mutableListOf<SkillSummary>()
     val skillData = jsonAssetRetriever.loadJsonFromAsset(fileName)?.getJSONArray("skill_list")!!
@@ -407,8 +740,10 @@
       .build()
   }
 
-  /** Utility to create the story list of a topic from its json representation. The json file is expected to have
-   * a key called 'story_list' that contains an array of story objects, each with the key 'story'. */
+  /**
+   * Creates a list of [StorySummary]s for topic from its json representation. The json file is expected to have
+   * a key called 'story_list' that contains an array of story objects, each with the key 'story'.
+   */
   private fun createStoriesFromJson(fileName: String): List<StorySummary> {
     val storyList = mutableListOf<StorySummary>()
     val storyData = jsonAssetRetriever.loadJsonFromAsset(fileName)?.getJSONArray("story_list")!!
@@ -418,7 +753,7 @@
     return storyList
   }
 
-  /** Utility to create a story of a topic given its json representation and the index of the story in json. */
+  /** Creates a list of [StorySummary]s for topic given its json representation and the index of the story in json. */
   private fun createStoryFromJsonFile(fileName: String, index: Int): StorySummary {
     val storyData = jsonAssetRetriever.loadJsonFromAsset(fileName)?.getJSONArray("story_list")!!
     if (storyData.length() < index) {
@@ -432,20 +767,14 @@
     return StorySummary.newBuilder()
       .setStoryId(storyId)
       .setStoryName(storyData.getString("title"))
-      .addAllChapter(
-        createChaptersFromJson(
-          storyId, storyData.getJSONObject("story_contents").getJSONArray("nodes")
-        )
-      )
+      .setStoryThumbnail(STORY_THUMBNAILS.getValue(storyId))
+      .addAllChapter(createChaptersFromJson(storyData.getJSONObject("story_contents").getJSONArray("nodes")))
       .build()
   }
 
-  private fun createChaptersFromJson(storyId: String, chapterData: JSONArray): List<ChapterSummary> {
+  private fun createChaptersFromJson(chapterData: JSONArray): List<ChapterSummary> {
     val chapterList = mutableListOf<ChapterSummary>()
-    val storyProgress = storyProgressController.retrieveStoryProgress(storyId)
-    val chapterProgressMap = storyProgress.chapterProgressList.map { progress ->
-      progress.explorationId to progress
-    }.toMap()
+
     for (i in 0 until chapterData.length()) {
       val chapter = chapterData.getJSONObject(i)
       val explorationId = chapter.getString("exploration_id")
@@ -453,7 +782,7 @@
         ChapterSummary.newBuilder()
           .setExplorationId(explorationId)
           .setName(chapter.getString("title"))
-          .setChapterPlayState(chapterProgressMap.getValue(explorationId).playState)
+          .setChapterPlayState(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
           .setChapterThumbnail(EXPLORATION_THUMBNAILS.getValue(explorationId))
           .build()
       )
@@ -465,6 +794,7 @@
     return StorySummary.newBuilder()
       .setStoryId(TEST_STORY_ID_0)
       .setStoryName("First Story")
+      .setStoryThumbnail(createStoryThumbnail0())
       .addChapter(createTestTopic0Story0Chapter0())
       .build()
   }
@@ -474,7 +804,7 @@
       .setExplorationId(TEST_EXPLORATION_ID_30)
       .setName("Prototype Exploration")
       .setSummary("This is the prototype exploration to verify interaction functionality.")
-      .setChapterPlayState(ChapterPlayState.COMPLETED)
+      .setChapterPlayState(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
       .setChapterThumbnail(createChapterThumbnail0())
       .build()
   }
@@ -483,6 +813,7 @@
     return StorySummary.newBuilder()
       .setStoryId(TEST_STORY_ID_1)
       .setStoryName("Second Story")
+      .setStoryThumbnail(createStoryThumbnail1())
       .addChapter(createTestTopic0Story1Chapter0())
       .addChapter(createTestTopic0Story1Chapter1())
       .addChapter(createTestTopic0Story1Chapter2())
@@ -494,7 +825,7 @@
       .setExplorationId(TEST_EXPLORATION_ID_1)
       .setName("Second Exploration")
       .setSummary("This is the second exploration summary")
-      .setChapterPlayState(ChapterPlayState.COMPLETED)
+      .setChapterPlayState(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
       .setChapterThumbnail(createChapterThumbnail1())
       .build()
   }
@@ -504,7 +835,7 @@
       .setExplorationId(TEST_EXPLORATION_ID_2)
       .setName("Third Exploration")
       .setSummary("This is the third exploration summary")
-      .setChapterPlayState(ChapterPlayState.NOT_STARTED)
+      .setChapterPlayState(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
       .setChapterThumbnail(createChapterThumbnail2())
       .build()
   }
@@ -514,7 +845,7 @@
       .setExplorationId(TEST_EXPLORATION_ID_3)
       .setName("Fourth Exploration")
       .setSummary("This is the fourth exploration summary")
-      .setChapterPlayState(ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES)
+      .setChapterPlayState(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
       .setChapterThumbnail(createChapterThumbnail3())
       .build()
   }
@@ -523,6 +854,7 @@
     return StorySummary.newBuilder()
       .setStoryId(TEST_STORY_ID_2)
       .setStoryName("Other Interesting Story")
+      .setStoryThumbnail(createStoryThumbnail1())
       .addChapter(createTestTopic1Story2Chapter0())
       .build()
   }
@@ -531,7 +863,7 @@
     return ChapterSummary.newBuilder()
       .setExplorationId(TEST_EXPLORATION_ID_4)
       .setName("Fifth Exploration")
-      .setChapterPlayState(ChapterPlayState.NOT_STARTED)
+      .setChapterPlayState(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
       .setChapterThumbnail(createChapterThumbnail4())
       .build()
   }
@@ -620,7 +952,8 @@
       )
       .putRecordedVoiceover(
         TEST_SKILL_CONTENT_ID_0, VoiceoverMapping.newBuilder().putVoiceoverMapping(
-          "es", Voiceover.newBuilder().setFileName("fake_spanish_xlated_explanation.mp3").setFileSizeBytes(456).build()
+          "es",
+          Voiceover.newBuilder().setFileName("fake_spanish_xlated_explanation.mp3").setFileSizeBytes(456).build()
         ).build()
       )
       .putRecordedVoiceover(
@@ -679,4 +1012,24 @@
         .build()
     }
   }
+
+  private fun createSubtopicThumbnail(subtopicId: String): SubtopicThumbnail {
+    return when (subtopicId) {
+      FRACTIONS_SUBTOPIC_ID_1 -> SubtopicThumbnail.newBuilder()
+        .setThumbnailGraphic(SubtopicThumbnailGraphic.WHAT_IS_A_FRACTION)
+        .build()
+      FRACTIONS_SUBTOPIC_ID_2 -> SubtopicThumbnail.newBuilder()
+        .setThumbnailGraphic(SubtopicThumbnailGraphic.FRACTION_OF_A_GROUP)
+        .build()
+      FRACTIONS_SUBTOPIC_ID_3 -> SubtopicThumbnail.newBuilder()
+        .setThumbnailGraphic(SubtopicThumbnailGraphic.MIXED_NUMBERS)
+        .build()
+      FRACTIONS_SUBTOPIC_ID_4 -> SubtopicThumbnail.newBuilder()
+        .setThumbnailGraphic(SubtopicThumbnailGraphic.ADDING_FRACTIONS)
+        .build()
+      else -> SubtopicThumbnail.newBuilder()
+        .setThumbnailGraphic(SubtopicThumbnailGraphic.THE_NUMBER_LINE)
+        .build()
+    }
+  }
 }
Index: app/src/main/res/drawable/state_button_transparent_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/state_button_transparent_background.xml	(date 1584621433000)
+++ app/src/main/res/drawable/state_button_transparent_background.xml	(date 1584626399000)
@@ -1,7 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<shape
-  xmlns:android="http://schemas.android.com/apk/res/android"
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
   android:shape="rectangle">
-  <solid
-    android:color="@android:color/transparent"/>
+  <solid android:color="@android:color/transparent" />
 </shape>
Index: app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-v21/styles.xml	(date 1584621433000)
+++ app/src/main/res/values-v21/styles.xml	(date 1584626399000)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
 
-  <style name="OppiaThemeWithoutActionBar" parent="Theme.AppCompat.Light.NoActionBar">
+  <style name="OppiaThemeWithoutActionBar" parent="Theme.MaterialComponents.Light.NoActionBar.Bridge">
     <item name="colorPrimary">@color/colorPrimary</item>
     <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
     <item name="colorAccent">@color/colorAccent</item>
@@ -22,4 +22,16 @@
     <item name="android:progressTint">@color/white</item>
     <item name="android:colorControlActivated">@color/progressBackgroundTint</item>
   </style>
+
+  <style name="SwitchCompatTheme" parent="Theme.MaterialComponents.Light.NoActionBar.Bridge">
+    <item name="android:colorControlActivated">@color/colorPrimary</item>
+  </style>
+
+  <style name="AlertDialogTheme" parent="Theme.AppCompat.Light.Dialog.Alert">
+    <item name="colorPrimary">@color/colorPrimary</item>
+    <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+    <item name="colorAccent">@color/colorPrimary</item>
+    <item name="android:buttonBarNegativeButtonStyle">@style/textAllCaps</item>
+    <item name="android:buttonBarPositiveButtonStyle">@style/textAllCaps</item>
+  </style>
 </resources>
Index: domain/src/test/java/org/oppia/domain/topic/StoryProgressControllerTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/test/java/org/oppia/domain/topic/StoryProgressControllerTest.kt	(date 1584621433000)
+++ domain/src/test/java/org/oppia/domain/topic/StoryProgressControllerTest.kt	(date 1584626399000)
@@ -2,6 +2,7 @@
 
 import android.app.Application
 import android.content.Context
+import androidx.lifecycle.Observer
 import androidx.test.core.app.ApplicationProvider
 import androidx.test.ext.junit.runners.AndroidJUnit4
 import com.google.common.truth.Truth.assertThat
@@ -10,14 +11,30 @@
 import dagger.Module
 import dagger.Provides
 import kotlinx.coroutines.CoroutineDispatcher
+import kotlinx.coroutines.Dispatchers
 import kotlinx.coroutines.ExperimentalCoroutinesApi
+import kotlinx.coroutines.ObsoleteCoroutinesApi
+import kotlinx.coroutines.newSingleThreadContext
 import kotlinx.coroutines.test.TestCoroutineDispatcher
+import kotlinx.coroutines.test.resetMain
+import kotlinx.coroutines.test.runBlockingTest
+import kotlinx.coroutines.test.setMain
+import org.junit.After
 import org.junit.Before
+import org.junit.Rule
 import org.junit.Test
 import org.junit.runner.RunWith
-import org.oppia.app.model.ChapterPlayState.COMPLETED
-import org.oppia.app.model.ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES
-import org.oppia.app.model.ChapterPlayState.NOT_STARTED
+import org.mockito.ArgumentCaptor
+import org.mockito.Captor
+import org.mockito.Mock
+import org.mockito.Mockito.atLeastOnce
+import org.mockito.Mockito.verify
+import org.mockito.junit.MockitoJUnit
+import org.mockito.junit.MockitoRule
+import org.oppia.app.model.ProfileId
+import org.oppia.domain.profile.ProfileTestHelper
+import org.oppia.util.caching.CacheAssetsLocally
+import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
 import org.oppia.util.logging.GlobalLogLevel
@@ -25,226 +42,60 @@
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
 import org.robolectric.annotation.Config
+import java.util.Date
 import javax.inject.Inject
 import javax.inject.Qualifier
 import javax.inject.Singleton
+import kotlin.coroutines.EmptyCoroutineContext
 
 /** Tests for [StoryProgressController]. */
 @RunWith(AndroidJUnit4::class)
 @Config(manifest = Config.NONE)
 class StoryProgressControllerTest {
+
+  @Rule
+  @JvmField
+  val mockitoRule: MockitoRule = MockitoJUnit.rule()
+
+  @Inject
+  @field:TestDispatcher
+  lateinit var testDispatcher: CoroutineDispatcher
+
+  @Inject lateinit var context: Context
+
   @Inject lateinit var storyProgressController: StoryProgressController
 
+  @Inject lateinit var profileTestHelper: ProfileTestHelper
+
+  @Mock lateinit var mockRecordProgressObserver: Observer<AsyncResult<Any?>>
+  @Captor lateinit var recordProgressResultCaptor: ArgumentCaptor<AsyncResult<Any?>>
+
+  private lateinit var profileId: ProfileId
+
+  private val timestamp = Date().time
+
+  private val coroutineContext by lazy {
+    EmptyCoroutineContext + testDispatcher
+  }
+
+  // https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/
+  @ObsoleteCoroutinesApi private val testThread = newSingleThreadContext("TestMain")
+
   @Before
+  @ExperimentalCoroutinesApi
+  @ObsoleteCoroutinesApi
   fun setUp() {
+    profileId = ProfileId.newBuilder().setInternalId(0).build()
+    Dispatchers.setMain(testThread)
     setUpTestApplicationComponent()
   }
 
-  @Test
-  fun testGetStoryProgress_validStory_isSuccessful() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress(TEST_STORY_ID_0)
-
-    val storyProgressResult = storyProgressLiveData.value
-    assertThat(storyProgressResult).isNotNull()
-    assertThat(storyProgressResult!!.isSuccess()).isTrue()
-  }
-
-  @Test
-  fun testGetStoryProgress_validStory_providesCorrectChapterProgress() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress(TEST_STORY_ID_0)
-
-    val storyProgress = storyProgressLiveData.value!!.getOrThrow()
-    assertThat(storyProgress.chapterProgressCount).isEqualTo(1)
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(TEST_EXPLORATION_ID_0)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(COMPLETED)
-  }
-
-  @Test
-  fun testGetStoryProgress_validSecondStory_providesCorrectChapterProgress() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress(TEST_STORY_ID_1)
-
-    // The third chapter should be missing prerequisites since chapter prior to it has yet to be completed.
-    val storyProgress = storyProgressLiveData.value!!.getOrThrow()
-    assertThat(storyProgress.chapterProgressCount).isEqualTo(3)
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(TEST_EXPLORATION_ID_1)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(COMPLETED)
-    assertThat(storyProgress.getChapterProgress(1).explorationId).isEqualTo(TEST_EXPLORATION_ID_2)
-    assertThat(storyProgress.getChapterProgress(1).playState).isEqualTo(NOT_STARTED)
-    assertThat(storyProgress.getChapterProgress(2).explorationId).isEqualTo(TEST_EXPLORATION_ID_3)
-    assertThat(storyProgress.getChapterProgress(2).playState).isEqualTo(NOT_PLAYABLE_MISSING_PREREQUISITES)
-  }
-
-  @Test
-  fun testGetStoryProgress_validFractionsStory_providesCorrectChapterProgress() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress(FRACTIONS_STORY_ID_0)
-
-    // The third chapter should be missing prerequisites since chapter prior to it has yet to be completed.
-    val storyProgress = storyProgressLiveData.value!!.getOrThrow()
-    assertThat(storyProgress.chapterProgressCount).isEqualTo(2)
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(FRACTIONS_EXPLORATION_ID_0)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(COMPLETED)
-    assertThat(storyProgress.getChapterProgress(1).explorationId).isEqualTo(FRACTIONS_EXPLORATION_ID_1)
-    assertThat(storyProgress.getChapterProgress(1).playState).isEqualTo(NOT_STARTED)
-  }
-
-  @Test
-  fun testGetStoryProgress_validFirstRatiosStory_providesCorrectChapterProgress() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress(RATIOS_STORY_ID_0)
-
-    // The third chapter should be missing prerequisites since chapter prior to it has yet to be completed.
-    val storyProgress = storyProgressLiveData.value!!.getOrThrow()
-    assertThat(storyProgress.chapterProgressCount).isEqualTo(2)
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(RATIOS_EXPLORATION_ID_0)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(NOT_STARTED)
-    assertThat(storyProgress.getChapterProgress(1).explorationId).isEqualTo(RATIOS_EXPLORATION_ID_1)
-    assertThat(storyProgress.getChapterProgress(1).playState).isEqualTo(NOT_PLAYABLE_MISSING_PREREQUISITES)
-  }
-
-  @Test
-  fun testGetStoryProgress_validSecondRatiosStory_providesCorrectChapterProgress() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress(RATIOS_STORY_ID_1)
-
-    // The third chapter should be missing prerequisites since chapter prior to it has yet to be completed.
-    val storyProgress = storyProgressLiveData.value!!.getOrThrow()
-    assertThat(storyProgress.chapterProgressCount).isEqualTo(2)
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(RATIOS_EXPLORATION_ID_2)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(NOT_STARTED)
-    assertThat(storyProgress.getChapterProgress(1).explorationId).isEqualTo(RATIOS_EXPLORATION_ID_3)
-    assertThat(storyProgress.getChapterProgress(1).playState).isEqualTo(NOT_PLAYABLE_MISSING_PREREQUISITES)
-  }
-
-  @Test
-  fun testGetStoryProgress_validThirdStory_providesCorrectChapterProgress() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress(TEST_STORY_ID_2)
-
-    val storyProgress = storyProgressLiveData.value!!.getOrThrow()
-    assertThat(storyProgress.chapterProgressCount).isEqualTo(1)
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(TEST_EXPLORATION_ID_4)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(NOT_STARTED)
-  }
-
-  @Test
-  fun testGetStoryProgress_invalidStory_providesError() {
-    val storyProgressLiveData = storyProgressController.getStoryProgress("invalid_story_id")
-
-    val storyProgressResult = storyProgressLiveData.value
-    assertThat(storyProgressResult).isNotNull()
-    assertThat(storyProgressResult!!.isFailure()).isTrue()
-    assertThat(storyProgressResult.getErrorOrNull())
-      .hasMessageThat()
-      .contains("No story found with ID: invalid_story_id")
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validStory_validChapter_alreadyCompleted_succeeds() {
-    val recordProgressLiveData = storyProgressController.recordCompletedChapter(TEST_STORY_ID_1, TEST_EXPLORATION_ID_1)
-
-    val recordProgressResult = recordProgressLiveData.value
-    assertThat(recordProgressResult).isNotNull()
-    assertThat(recordProgressResult!!.isSuccess()).isTrue()
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validStory_validChapter_alreadyCompleted_keepsChapterAsCompleted() {
-    storyProgressController.recordCompletedChapter(TEST_STORY_ID_1, TEST_EXPLORATION_ID_1)
-
-    val storyProgress = storyProgressController.getStoryProgress(TEST_STORY_ID_1).value!!.getOrThrow()
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(TEST_EXPLORATION_ID_1)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(COMPLETED)
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validStory_validChapter_notYetCompleted_succeeds() {
-    val recordProgressLiveData = storyProgressController.recordCompletedChapter(TEST_STORY_ID_1, TEST_EXPLORATION_ID_2)
-
-    val recordProgressResult = recordProgressLiveData.value
-    assertThat(recordProgressResult).isNotNull()
-    assertThat(recordProgressResult!!.isSuccess()).isTrue()
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validStory_validChapter_notYetCompleted_marksChapterAsCompleted() {
-    storyProgressController.recordCompletedChapter(TEST_STORY_ID_1, TEST_EXPLORATION_ID_2)
-
-    val storyProgress = storyProgressController.getStoryProgress(TEST_STORY_ID_1).value!!.getOrThrow()
-    assertThat(storyProgress.getChapterProgress(1).explorationId).isEqualTo(TEST_EXPLORATION_ID_2)
-    assertThat(storyProgress.getChapterProgress(1).playState).isEqualTo(COMPLETED)
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validStory_validChapter_missingPrereqs_fails() {
-    val recordProgressLiveData = storyProgressController.recordCompletedChapter(TEST_STORY_ID_1, TEST_EXPLORATION_ID_3)
-
-    val recordProgressResult = recordProgressLiveData.value
-    assertThat(recordProgressResult).isNotNull()
-    assertThat(recordProgressResult!!.isFailure()).isTrue()
-    assertThat(recordProgressResult.getErrorOrNull())
-      .hasMessageThat()
-      .contains("Cannot mark chapter as completed, missing prerequisites: $TEST_EXPLORATION_ID_3")
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validStory_validChapter_missingPrereqs_keepsChapterMissingPrereqs() {
-    storyProgressController.recordCompletedChapter(TEST_STORY_ID_1, TEST_EXPLORATION_ID_3)
-
-    val storyProgress = storyProgressController.getStoryProgress(TEST_STORY_ID_1).value!!.getOrThrow()
-    assertThat(storyProgress.getChapterProgress(2).explorationId).isEqualTo(TEST_EXPLORATION_ID_3)
-    assertThat(storyProgress.getChapterProgress(2).playState).isEqualTo(NOT_PLAYABLE_MISSING_PREREQUISITES)
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validStory_invalidChapter_fails() {
-    val recordProgressLiveData = storyProgressController.recordCompletedChapter(TEST_STORY_ID_1, "invalid_exp_id")
-
-    val recordProgressResult = recordProgressLiveData.value
-    assertThat(recordProgressResult).isNotNull()
-    assertThat(recordProgressResult!!.isFailure()).isTrue()
-    assertThat(recordProgressResult.getErrorOrNull())
-      .hasMessageThat()
-      .contains("Chapter not found in story: invalid_exp_id")
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validSecondStory_validChapter_notYetCompleted_succeeds() {
-    val recordProgressLiveData = storyProgressController.recordCompletedChapter(TEST_STORY_ID_2, TEST_EXPLORATION_ID_4)
-
-    val recordProgressResult = recordProgressLiveData.value
-    assertThat(recordProgressResult).isNotNull()
-    assertThat(recordProgressResult!!.isSuccess()).isTrue()
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validSecondStory_validChapter_notYetCompleted_marksChapterAsCompleted() {
-    storyProgressController.recordCompletedChapter(TEST_STORY_ID_2, TEST_EXPLORATION_ID_4)
-
-    val storyProgress = storyProgressController.getStoryProgress(TEST_STORY_ID_2).value!!.getOrThrow()
-    assertThat(storyProgress.getChapterProgress(0).explorationId).isEqualTo(TEST_EXPLORATION_ID_4)
-    assertThat(storyProgress.getChapterProgress(0).playState).isEqualTo(COMPLETED)
-  }
-
-  @Test
-  fun testRecordCompletedChapter_validSecondStory_validChapterInOtherStory_fails() {
-    val recordProgressLiveData = storyProgressController.recordCompletedChapter(TEST_STORY_ID_2, TEST_EXPLORATION_ID_3)
-
-    val recordProgressResult = recordProgressLiveData.value
-    assertThat(recordProgressResult).isNotNull()
-    assertThat(recordProgressResult!!.isFailure()).isTrue()
-    assertThat(recordProgressResult.getErrorOrNull())
-      .hasMessageThat()
-      .contains("Chapter not found in story: $TEST_EXPLORATION_ID_3")
-  }
-
-  @Test
-  fun testRecordCompletedChapter_invalidStory_fails() {
-    val recordProgressLiveData =
-      storyProgressController.recordCompletedChapter("invalid_story_id", TEST_EXPLORATION_ID_0)
-
-    val recordProgressResult = recordProgressLiveData.value
-    assertThat(recordProgressResult).isNotNull()
-    assertThat(recordProgressResult!!.isFailure()).isTrue()
-    assertThat(recordProgressResult.getErrorOrNull())
-      .hasMessageThat()
-      .contains("No story found with ID: invalid_story_id")
+  @After
+  @ExperimentalCoroutinesApi
+  @ObsoleteCoroutinesApi
+  fun tearDown() {
+    Dispatchers.resetMain()
+    testThread.close()
   }
 
   private fun setUpTestApplicationComponent() {
@@ -254,8 +105,44 @@
       .inject(this)
   }
 
-  @Qualifier
-  annotation class TestDispatcher
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressController_recordCompletedChapter_isSuccessful() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordCompletedChapter(
+        profileId,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        timestamp
+      ).observeForever(mockRecordProgressObserver)
+      advanceUntilIdle()
+
+      verifyRecordProgressSucceeded()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressController_recordRecentlyPlayedChapter_isSuccessful() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordRecentlyPlayedChapter(
+        profileId,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        timestamp
+      ).observeForever(mockRecordProgressObserver)
+      advanceUntilIdle()
+
+      verifyRecordProgressSucceeded()
+    }
+
+  private fun verifyRecordProgressSucceeded() {
+    verify(mockRecordProgressObserver, atLeastOnce()).onChanged(recordProgressResultCaptor.capture())
+    assertThat(recordProgressResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  @Qualifier annotation class TestDispatcher
 
   // TODO(#89): Move this to a common test application component.
   @Module
@@ -288,6 +175,8 @@
       return testDispatcher
     }
 
+    // TODO(#59): Either isolate these to their own shared test module, or use the real logging
+    //  module in tests to avoid needing to specify these settings for tests.
     @EnableConsoleLog
     @Provides
     fun provideEnableConsoleLog(): Boolean = true
@@ -299,6 +188,10 @@
     @GlobalLogLevel
     @Provides
     fun provideGlobalLogLevel(): LogLevel = LogLevel.VERBOSE
+
+    @CacheAssetsLocally
+    @Provides
+    fun provideCacheAssetsLocally(): Boolean = false
   }
 
   // TODO(#89): Move this to a common test application component.
Index: domain/src/test/java/org/oppia/domain/topic/TopicControllerTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/test/java/org/oppia/domain/topic/TopicControllerTest.kt	(date 1584621433000)
+++ domain/src/test/java/org/oppia/domain/topic/TopicControllerTest.kt	(date 1584626399000)
@@ -28,15 +28,20 @@
 import org.mockito.ArgumentCaptor
 import org.mockito.Captor
 import org.mockito.Mock
+import org.mockito.Mockito.atLeastOnce
 import org.mockito.Mockito.verify
 import org.mockito.junit.MockitoJUnit
 import org.mockito.junit.MockitoRule
 import org.oppia.app.model.ChapterPlayState
 import org.oppia.app.model.ChapterSummary
+import org.oppia.app.model.CompletedStoryList
 import org.oppia.app.model.LessonThumbnailGraphic
+import org.oppia.app.model.OngoingTopicList
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.Question
 import org.oppia.app.model.SkillSummary
 import org.oppia.app.model.StorySummary
+import org.oppia.app.model.SubtopicThumbnailGraphic
 import org.oppia.app.model.Topic
 import org.oppia.domain.exploration.TEST_EXPLORATION_ID_30
 import org.oppia.util.caching.CacheAssetsLocally
@@ -49,15 +54,21 @@
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
 import org.robolectric.annotation.Config
+import java.util.Date
 import javax.inject.Inject
 import javax.inject.Qualifier
 import javax.inject.Singleton
 import kotlin.coroutines.EmptyCoroutineContext
 
+private const val INVALID_STORY_ID_1 = "INVALID_STORY_ID_1"
+private const val INVALID_TOPIC_ID_1 = "INVALID_TOPIC_ID_1"
+
 /** Tests for [TopicController]. */
 @RunWith(AndroidJUnit4::class)
 @Config(manifest = Config.NONE)
 class TopicControllerTest {
+
+  @Inject lateinit var storyProgressController: StoryProgressController
   @Inject lateinit var topicController: TopicController
 
   @Rule
@@ -68,17 +79,33 @@
   @JvmField
   val executorRule = InstantTaskExecutorRule()
 
-  @Mock
-  lateinit var mockQuestionListObserver: Observer<AsyncResult<List<Question>>>
+  @Mock lateinit var mockCompletedStoryListObserver: Observer<AsyncResult<CompletedStoryList>>
+  @Captor lateinit var completedStoryListResultCaptor: ArgumentCaptor<AsyncResult<CompletedStoryList>>
+
+  @Mock lateinit var mockOngoingTopicListObserver: Observer<AsyncResult<OngoingTopicList>>
+  @Captor lateinit var ongoingTopicListResultCaptor: ArgumentCaptor<AsyncResult<OngoingTopicList>>
+
+  @Mock lateinit var mockQuestionListObserver: Observer<AsyncResult<List<Question>>>
+  @Captor lateinit var questionListResultCaptor: ArgumentCaptor<AsyncResult<List<Question>>>
+
+  @Mock lateinit var mockRecordProgressObserver: Observer<AsyncResult<Any?>>
+  @Captor lateinit var recordProgressResultCaptor: ArgumentCaptor<AsyncResult<Any?>>
 
-  @Captor
-  lateinit var questionListResultCaptor: ArgumentCaptor<AsyncResult<List<Question>>>
+  @Mock lateinit var mockStorySummaryObserver: Observer<AsyncResult<StorySummary>>
+  @Captor lateinit var storySummaryResultCaptor: ArgumentCaptor<AsyncResult<StorySummary>>
+
+  @Mock lateinit var mockTopicObserver: Observer<AsyncResult<Topic>>
+  @Captor lateinit var topicResultCaptor: ArgumentCaptor<AsyncResult<Topic>>
 
   @Inject lateinit var dataProviders: DataProviders
 
   @Inject
-  @field:TestDispatcher
-  lateinit var testDispatcher: CoroutineDispatcher
+  @field:TestDispatcher lateinit var testDispatcher: CoroutineDispatcher
+
+  private lateinit var profileId1: ProfileId
+  private lateinit var profileId2: ProfileId
+
+  private val currentTimestamp = Date().time
 
   private val coroutineContext by lazy {
     EmptyCoroutineContext + testDispatcher
@@ -92,6 +119,8 @@
   @ExperimentalCoroutinesApi
   @ObsoleteCoroutinesApi
   fun setUp() {
+    profileId1 = ProfileId.newBuilder().setInternalId(1).build()
+    profileId2 = ProfileId.newBuilder().setInternalId(2).build()
     Dispatchers.setMain(testThread)
     setUpTestApplicationComponent()
   }
@@ -142,8 +171,10 @@
     val topicLiveData = topicController.getTopic(TEST_TOPIC_ID_0)
 
     val topic = topicLiveData.value!!.getOrThrow()
-    assertThat(getSkillIds(topic)).containsExactly(TEST_SKILL_ID_0, TEST_SKILL_ID_1,
-      TEST_SKILL_ID_1, TEST_SKILL_ID_1).inOrder()
+    assertThat(getSkillIds(topic)).containsExactly(
+      TEST_SKILL_ID_0, TEST_SKILL_ID_1,
+      TEST_SKILL_ID_1, TEST_SKILL_ID_1
+    ).inOrder()
   }
 
   @Test
@@ -164,7 +195,7 @@
     val topic = topicLiveData.value!!.getOrThrow()
     assertThat(topic.getStory(0).chapterCount).isEqualTo(1)
     assertThat(topic.getStory(0).getChapter(0).explorationId).isEqualTo(TEST_EXPLORATION_ID_30)
-    assertThat(topic.getStory(0).getChapter(0).chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+    assertThat(topic.getStory(0).getChapter(0).chapterPlayState).isEqualTo(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
   }
 
   @Test
@@ -385,15 +416,14 @@
     val storyLiveData = topicController.getStory(TEST_STORY_ID_1)
 
     val story = storyLiveData.value!!.getOrThrow()
-    assertThat(story.getChapter(0).chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
-    assertThat(story.getChapter(1).chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
-    assertThat(story.getChapter(2).chapterPlayState).isEqualTo(ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES)
+    assertThat(story.getChapter(0).chapterPlayState).isEqualTo(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
+    assertThat(story.getChapter(1).chapterPlayState).isEqualTo(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
+    assertThat(story.getChapter(2).chapterPlayState).isEqualTo(ChapterPlayState.COMPLETION_STATUS_UNSPECIFIED)
   }
 
   @Test
   fun testRetrieveStory_invalidStory_returnsFailure() {
     val storyLiveData = topicController.getStory("invalid_story_id")
-
     assertThat(storyLiveData.value!!.isFailure()).isTrue()
   }
 
@@ -591,7 +621,8 @@
       "Given a picture divided into unequal parts, write the fraction."
     )
     assertThat(conceptCard.explanation.html).contains(
-      "<p>First, divide the picture into equal parts")
+      "<p>First, divide the picture into equal parts"
+    )
   }
 
   @Test
@@ -613,7 +644,8 @@
       "Derive a ratio from a description or a picture"
     )
     assertThat(conceptCard.explanation.html).contains(
-      "<p>A ratio represents a relative relationship between two or more amounts.")
+      "<p>A ratio represents a relative relationship between two or more amounts."
+    )
   }
 
   @Test
@@ -623,6 +655,31 @@
     assertThat(conceptCardLiveData.value!!.isFailure()).isTrue()
   }
 
+  @Test
+  fun testGetReviewCard_fractionSubtopicId1_isSuccessful() {
+    val reviewCardLiveData = topicController.getReviewCard(FRACTIONS_TOPIC_ID, SUBTOPIC_TOPIC_ID)
+    val reviewCardResult = reviewCardLiveData.value
+    assertThat(reviewCardResult).isNotNull()
+    assertThat(reviewCardResult!!.isSuccess()).isTrue()
+    assertThat(reviewCardResult.getOrThrow().pageContents.html).isEqualTo("<p>Description of subtopic is here.</p>")
+  }
+
+  @Test
+  fun testRetrieveSubtopicTopic_validSubtopic_returnsSubtopicWithThumbnail() {
+    val topicLiveData = topicController.getTopic(FRACTIONS_TOPIC_ID)
+
+    val topic = topicLiveData.value!!.getOrThrow()
+    assertThat(topic.subtopicList.get(0).subtopicThumbnail.thumbnailGraphic).isEqualTo(SubtopicThumbnailGraphic.WHAT_IS_A_FRACTION)
+  }
+
+  @Test
+  fun testRetrieveSubtopicTopic_validSubtopic_subtopicsHaveNoThumbnailUrls() {
+    val topicLiveData = topicController.getTopic(FRACTIONS_TOPIC_ID)
+    val topic = topicLiveData.value!!.getOrThrow()
+    assertThat(topic.subtopicList.get(0).thumbnailUrl).isEmpty()
+    assertThat(topic.subtopicList.get(1).thumbnailUrl).isEmpty()
+  }
+
   @Test
   @ExperimentalCoroutinesApi
   fun testRetrieveQuestionsForSkillIds_returnsAllQuestions() = runBlockingTest(coroutineContext) {
@@ -739,6 +796,288 @@
     assertThat(questionListResultCaptor.value.isFailure()).isTrue()
   }
 
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testGetTopic_invalidTopicId_getTopic_noResultFound() =
+    runBlockingTest(coroutineContext) {
+      topicController.getTopic(profileId1, INVALID_TOPIC_ID_1).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicFailed()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testGetTopic_validTopicId_withoutAnyProgress_getTopicSucceedsWithCorrectProgress() =
+    runBlockingTest(coroutineContext) {
+      topicController.getTopic(profileId1, FRACTIONS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testGetTopic_recordProgress_getTopic_correctProgressFound() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId1, FRACTIONS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testGetStory_invalidData_getStory_noResultFound() =
+    runBlockingTest(coroutineContext) {
+      topicController.getStory(profileId1, INVALID_TOPIC_ID_1, INVALID_STORY_ID_1)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStoryFailed()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testGetStory_validData_withoutAnyProgress_getStorySucceedsWithCorrectProgress() =
+    runBlockingTest(coroutineContext) {
+      topicController.getStory(profileId1, FRACTIONS_TOPIC_ID, FRACTIONS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testGetStory_recordProgress_getTopic_correctProgressFound() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId1, FRACTIONS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyRecordProgressSucceeded()
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testOngoingTopicList_validData_withoutAnyProgress_ongoingTopicListIsEmpty() =
+    runBlockingTest(coroutineContext) {
+      topicController.getOngoingTopicList(profileId1).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicCount).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testOngoingTopicList_recordOneChapterCompleted_correctOngoingList() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId1).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicCount).isEqualTo(1)
+      assertThat(ongoingTopicList.topicList[0].topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testOngoingTopicList_finishEntireTopic_ongoingTopicListIsEmpty() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markFractionsStory0Chapter1AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId1).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicCount).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testOngoingTopicList_finishOneEntireTopicAndOneChapterInAnotherTopic_ongoingTopicListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      // Mark entire FRACTIONS topic as finished.
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markFractionsStory0Chapter1AsCompleted()
+      advanceUntilIdle()
+
+      // Mark only one chapter in RATIOS topic as finished.
+      markRatiosStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId1).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicCount).isEqualTo(1)
+      assertThat(ongoingTopicList.topicList[0].topicId).isEqualTo(RATIOS_TOPIC_ID)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCompletedStoryList_validData_withoutAnyProgress_completedStoryListIsEmpty() =
+    runBlockingTest(coroutineContext) {
+      topicController.getCompletedStoryList(profileId1).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryCount).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCompletedStoryList_recordOneChapterProgress_completedStoryListIsEmpty() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId1).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryCount).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCompletedStoryList_finishEntireStory_completedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markFractionsStory0Chapter1AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId1).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryCount).isEqualTo(1)
+      assertThat(completedStoryList.completedStoryList[0].storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCompletedStoryList_finishEntireStory_checkChapters_allAreCompleted() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markFractionsStory0Chapter1AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getStory(profileId1, FRACTIONS_TOPIC_ID, FRACTIONS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.chapterCount).isEqualTo(2)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCompletedStoryList_finishOneEntireStoryAndOneChapterInAnotherStory_completedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markRatiosStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markRatiosStory0Chapter1AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId1).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryCount).isEqualTo(1)
+      assertThat(completedStoryList.completedStoryList[0].storyId).isEqualTo(RATIOS_STORY_ID_0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testCompletedStoryList_finishTwoStories_completedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      markFractionsStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markFractionsStory0Chapter1AsCompleted()
+      advanceUntilIdle()
+
+      markRatiosStory0Chapter0AsCompleted()
+      advanceUntilIdle()
+
+      markRatiosStory0Chapter1AsCompleted()
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId1).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryCount).isEqualTo(2)
+      assertThat(completedStoryList.completedStoryList[0].storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+      assertThat(completedStoryList.completedStoryList[1].storyId).isEqualTo(RATIOS_STORY_ID_0)
+    }
+
   private fun setUpTestApplicationComponent() {
     DaggerTopicControllerTest_TestApplicationComponent.builder()
       .setApplication(ApplicationProvider.getApplicationContext())
@@ -746,6 +1085,81 @@
       .inject(this)
   }
 
+  private fun markFractionsStory0Chapter0AsCompleted() {
+    storyProgressController.recordCompletedChapter(
+      profileId1,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_0,
+      currentTimestamp
+    ).observeForever(mockRecordProgressObserver)
+  }
+
+  private fun markFractionsStory0Chapter1AsCompleted() {
+    storyProgressController.recordCompletedChapter(
+      profileId1,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_1,
+      currentTimestamp
+    ).observeForever(mockRecordProgressObserver)
+  }
+
+  private fun markRatiosStory0Chapter0AsCompleted() {
+    storyProgressController.recordCompletedChapter(
+      profileId1,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_0,
+      currentTimestamp
+    ).observeForever(mockRecordProgressObserver)
+  }
+
+  private fun markRatiosStory0Chapter1AsCompleted() {
+    storyProgressController.recordCompletedChapter(
+      profileId1,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_1,
+      currentTimestamp
+    ).observeForever(mockRecordProgressObserver)
+  }
+
+  private fun verifyRecordProgressSucceeded() {
+    verify(mockRecordProgressObserver, atLeastOnce()).onChanged(recordProgressResultCaptor.capture())
+    assertThat(recordProgressResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetTopicSucceeded() {
+    verify(mockTopicObserver, atLeastOnce()).onChanged(topicResultCaptor.capture())
+    assertThat(topicResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetTopicFailed() {
+    verify(mockTopicObserver, atLeastOnce()).onChanged(topicResultCaptor.capture())
+    assertThat(topicResultCaptor.value.isFailure()).isTrue()
+  }
+
+  private fun verifyGetStorySucceeded() {
+    verify(mockStorySummaryObserver, atLeastOnce()).onChanged(storySummaryResultCaptor.capture())
+    assertThat(storySummaryResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetStoryFailed() {
+    verify(mockStorySummaryObserver, atLeastOnce()).onChanged(storySummaryResultCaptor.capture())
+    assertThat(storySummaryResultCaptor.value.isFailure()).isTrue()
+  }
+
+  private fun verifyGetOngoingTopicListSucceeded() {
+    verify(mockOngoingTopicListObserver, atLeastOnce()).onChanged(ongoingTopicListResultCaptor.capture())
+    assertThat(ongoingTopicListResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetCompletedStoryListSucceeded() {
+    verify(mockCompletedStoryListObserver, atLeastOnce()).onChanged(completedStoryListResultCaptor.capture())
+    assertThat(completedStoryListResultCaptor.value.isSuccess()).isTrue()
+  }
+
   private fun getStoryIds(topic: Topic): List<String> {
     return topic.storyList.map(StorySummary::getStoryId)
   }
@@ -758,8 +1172,7 @@
     return story.chapterList.map(ChapterSummary::getExplorationId)
   }
 
-  @Qualifier
-  annotation class TestDispatcher
+  @Qualifier annotation class TestDispatcher
 
   // TODO(#89): Move this to a common test application component.
   @Module
Index: domain/src/test/java/org/oppia/domain/topic/TopicListControllerTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/test/java/org/oppia/domain/topic/TopicListControllerTest.kt	(date 1584621433000)
+++ domain/src/test/java/org/oppia/domain/topic/TopicListControllerTest.kt	(date 1584626399000)
@@ -2,6 +2,7 @@
 
 import android.app.Application
 import android.content.Context
+import androidx.lifecycle.Observer
 import androidx.test.core.app.ApplicationProvider
 import androidx.test.ext.junit.runners.AndroidJUnit4
 import com.google.common.truth.Truth.assertThat
@@ -10,13 +11,32 @@
 import dagger.Module
 import dagger.Provides
 import kotlinx.coroutines.CoroutineDispatcher
+import kotlinx.coroutines.Dispatchers
 import kotlinx.coroutines.ExperimentalCoroutinesApi
+import kotlinx.coroutines.ObsoleteCoroutinesApi
+import kotlinx.coroutines.newSingleThreadContext
 import kotlinx.coroutines.test.TestCoroutineDispatcher
+import kotlinx.coroutines.test.resetMain
+import kotlinx.coroutines.test.runBlockingTest
+import kotlinx.coroutines.test.setMain
+import org.junit.After
 import org.junit.Before
+import org.junit.Rule
 import org.junit.Test
 import org.junit.runner.RunWith
+import org.mockito.ArgumentCaptor
+import org.mockito.Captor
+import org.mockito.Mock
+import org.mockito.Mockito.atLeastOnce
+import org.mockito.Mockito.verify
+import org.mockito.junit.MockitoJUnit
+import org.mockito.junit.MockitoRule
 import org.oppia.app.model.LessonThumbnailGraphic
+import org.oppia.app.model.OngoingStoryList
+import org.oppia.app.model.ProfileId
+import org.oppia.app.model.PromotedStory
 import org.oppia.util.caching.CacheAssetsLocally
+import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
 import org.oppia.util.logging.GlobalLogLevel
@@ -27,21 +47,70 @@
 import org.oppia.util.threading.BackgroundDispatcher
 import org.oppia.util.threading.BlockingDispatcher
 import org.robolectric.annotation.Config
+import java.util.Date
 import javax.inject.Inject
 import javax.inject.Qualifier
 import javax.inject.Singleton
+import kotlin.coroutines.EmptyCoroutineContext
+
+private const val NINE_DAYS_IN_MS = 9 * 24 * 60 * 60 * 1000
 
 /** Tests for [TopicListController]. */
 @RunWith(AndroidJUnit4::class)
 @Config(manifest = Config.NONE)
 class TopicListControllerTest {
+
+  @Rule
+  @JvmField
+  val mockitoRule: MockitoRule = MockitoJUnit.rule()
+
+  @Inject lateinit var context: Context
+
   @Inject lateinit var topicListController: TopicListController
 
+  @Inject lateinit var storyProgressController: StoryProgressController
+
+  @Mock lateinit var mockOngoingStoryListObserver: Observer<AsyncResult<OngoingStoryList>>
+  @Captor lateinit var ongoingStoryListResultCaptor: ArgumentCaptor<AsyncResult<OngoingStoryList>>
+
+  @Inject
+  @field:TestDispatcher
+  lateinit var testDispatcher: CoroutineDispatcher
+
+  private val coroutineContext by lazy {
+    EmptyCoroutineContext + testDispatcher
+  }
+
+  // https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/
+  @ObsoleteCoroutinesApi
+  private val testThread = newSingleThreadContext("TestMain")
+
+  private lateinit var profileId0: ProfileId
+
   @Before
+  @ExperimentalCoroutinesApi
+  @ObsoleteCoroutinesApi
   fun setUp() {
+    profileId0 = ProfileId.newBuilder().setInternalId(0).build()
+    Dispatchers.setMain(testThread)
     setUpTestApplicationComponent()
   }
 
+  @After
+  @ExperimentalCoroutinesApi
+  @ObsoleteCoroutinesApi
+  fun tearDown() {
+    Dispatchers.resetMain()
+    testThread.close()
+  }
+
+  private fun setUpTestApplicationComponent() {
+    DaggerTopicListControllerTest_TestApplicationComponent.builder()
+      .setApplication(ApplicationProvider.getApplicationContext())
+      .build()
+      .inject(this)
+  }
+
   // TODO(#15): Add tests for recommended lessons rather than promoted, and tests for the 'continue playing' LiveData
   //  not providing any data for cases when there are no ongoing lessons. Also, add tests for other uncovered cases
   //  (such as having and not having lessons in either of the OngoingStoryList section, or AsyncResult errors).
@@ -178,108 +247,367 @@
   }
 
   @Test
-  fun testRetrieveTopicList_promotedLesson_hasCorrectLessonInfo() {
-    val topicListLiveData = topicListController.getTopicList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_defaultLesson_hasCorrectInfo() =
+    runBlockingTest(coroutineContext) {
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
 
-    val topicList = topicListLiveData.value!!.getOrThrow()
-    val promotedStory = topicList.promotedStory
-    assertThat(promotedStory.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
-    assertThat(promotedStory.storyName).isEqualTo("Matthew Goes to the Bakery")
-  }
+      verifyGetOngoingStoryListSucceeded()
+      verifyDefaultOngoingStoryListSucceeded()
+    }
 
   @Test
-  fun testRetrieveTopicList_promotedLesson_hasCorrectTopicInfo() {
-    val topicListLiveData = topicListController.getTopicList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markRecentlyPlayedFractionStory0Exploration0_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordRecentlyPlayedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
 
-    val topicList = topicListLiveData.value!!.getOrThrow()
-    val promotedStory = topicList.promotedStory
-    assertThat(promotedStory.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
-    assertThat(promotedStory.topicName).isEqualTo("Fractions")
-  }
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(1)
+      verifyOngoingStoryAsFractionStory0Exploration0(ongoingTopicList.recentStoryList[0])
+    }
 
   @Test
-  fun testRetrieveTopicList_promotedLesson_hasCorrectCompletionStats() {
-    val topicListLiveData = topicListController.getTopicList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markChapterCompletedFractionStory0Exploration0_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
 
-    val topicList = topicListLiveData.value!!.getOrThrow()
-    val promotedStory = topicList.promotedStory
-    assertThat(promotedStory.completedChapterCount).isEqualTo(1)
-    assertThat(promotedStory.totalChapterCount).isEqualTo(2)
-  }
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(1)
+      verifyOngoingStoryAsFractionStory0Exploration1(ongoingTopicList.recentStoryList[0])
+    }
 
   @Test
-  fun testRetrieveOngoingStoryList_isSuccessful() {
-    val ongoingStoryListLiveData = topicListController.getOngoingStoryList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markChapterCompletedFractionStory0Exploration0_markRecentlyPlayedFractionStory0Exploration1_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordRecentlyPlayedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_1,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
 
-    val ongoingStoryListResult = ongoingStoryListLiveData.value
-    assertThat(ongoingStoryListResult).isNotNull()
-    assertThat(ongoingStoryListResult!!.isSuccess()).isTrue()
-  }
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(1)
+      verifyOngoingStoryAsFractionStory0Exploration1(ongoingTopicList.recentStoryList[0])
+    }
 
   @Test
-  fun testRetrieveOngoingStoryList_withinSevenDays_hasOngoingLesson() {
-    val ongoingStoryListLiveData = topicListController.getOngoingStoryList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markAllChaptersCompletedInFractions_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_1,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
 
-    val ongoingStoryList = ongoingStoryListLiveData.value!!.getOrThrow()
-    assertThat(ongoingStoryList.recentStoryCount).isEqualTo(1)
-  }
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(2)
+      verifyDefaultOngoingStoryListSucceeded()
+    }
 
   @Test
-  fun testRetrieveOngoingStoryList_recentLesson_hasCorrectStoryInfo() {
-    val ongoingStoryListLiveData = topicListController.getOngoingStoryList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markRecentPlayedFirstChaptersInAllStoriesInRatios_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordRecentlyPlayedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_0,
+        RATIOS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordRecentlyPlayedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_1,
+        RATIOS_EXPLORATION_ID_2,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
 
-    val ongoingStoryList = ongoingStoryListLiveData.value!!.getOrThrow()
-    val recentLesson = ongoingStoryList.getRecentStory(0)
-    assertThat(recentLesson.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
-    assertThat(recentLesson.storyName).isEqualTo("Matthew Goes to the Bakery")
-  }
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(2)
+      verifyOngoingStoryAsRatioStory0Exploration0(ongoingTopicList.recentStoryList[0])
+      verifyOngoingStoryAsRatioStory1Exploration2(ongoingTopicList.recentStoryList[1])
+    }
 
   @Test
-  fun testRetrieveOngoingStoryList_recentLesson_hasCorrectTopicInfo() {
-    val ongoingStoryListLiveData = topicListController.getOngoingStoryList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markExploration0CompletedAndExploration2AsRecentlyPlayedInRatios_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_0,
+        RATIOS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordRecentlyPlayedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_1,
+        RATIOS_EXPLORATION_ID_2,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
 
-    val ongoingStoryList = ongoingStoryListLiveData.value!!.getOrThrow()
-    val recentLesson = ongoingStoryList.getRecentStory(0)
-    assertThat(recentLesson.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
-    assertThat(recentLesson.topicName).isEqualTo("Fractions")
-  }
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(2)
+      verifyOngoingStoryAsRatioStory0Exploration1(ongoingTopicList.recentStoryList[0])
+      verifyOngoingStoryAsRatioStory1Exploration2(ongoingTopicList.recentStoryList[1])
+    }
 
   @Test
-  fun testRetrieveOngoingStoryList_recentLesson_hasCorrectCompletionStats() {
-    val ongoingStoryListLiveData = topicListController.getOngoingStoryList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markFirstExplorationOfEveryStoryCompletedWithinLastSevenDays_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_0,
+        RATIOS_EXPLORATION_ID_0,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_1,
+        RATIOS_EXPLORATION_ID_2,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
 
-    val ongoingStoryList = ongoingStoryListLiveData.value!!.getOrThrow()
-    val recentLesson = ongoingStoryList.getRecentStory(0)
-    assertThat(recentLesson.completedChapterCount).isEqualTo(1)
-    assertThat(recentLesson.totalChapterCount).isEqualTo(2)
-  }
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(3)
+      verifyOngoingStoryAsFractionStory0Exploration1(ongoingTopicList.recentStoryList[0])
+      verifyOngoingStoryAsRatioStory0Exploration1(ongoingTopicList.recentStoryList[1])
+      verifyOngoingStoryAsRatioStory1Exploration3(ongoingTopicList.recentStoryList[2])
+    }
 
   @Test
-  fun testRetrieveOngoingStoryList_recentLesson_hasCorrectThumbnail() {
-    val ongoingStoryListLiveData = topicListController.getOngoingStoryList()
+  @ExperimentalCoroutinesApi
+  fun testRetrieveOngoingStoryList_markFirstExplorationOfEveryStoryCompletedWithinLastMonth_ongoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        FRACTIONS_TOPIC_ID,
+        FRACTIONS_STORY_ID_0,
+        FRACTIONS_EXPLORATION_ID_0,
+        getOldTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_0,
+        RATIOS_EXPLORATION_ID_0,
+        getOldTimestamp()
+      )
+      advanceUntilIdle()
+
+      storyProgressController.recordCompletedChapter(
+        profileId0,
+        RATIOS_TOPIC_ID,
+        RATIOS_STORY_ID_1,
+        RATIOS_EXPLORATION_ID_2,
+        getCurrentTimestamp()
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId0).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.recentStoryCount).isEqualTo(1)
+      assertThat(ongoingTopicList.olderStoryCount).isEqualTo(2)
+      verifyOngoingStoryAsFractionStory0Exploration1(ongoingTopicList.olderStoryList[0])
+      verifyOngoingStoryAsRatioStory0Exploration1(ongoingTopicList.olderStoryList[1])
+      verifyOngoingStoryAsRatioStory1Exploration3(ongoingTopicList.recentStoryList[0])
+    }
 
-    val ongoingStoryList = ongoingStoryListLiveData.value!!.getOrThrow()
-    val recentLesson = ongoingStoryList.getRecentStory(0)
-    assertThat(recentLesson.lessonThumbnail.thumbnailGraphic).isEqualTo(LessonThumbnailGraphic.DUCK_AND_CHICKEN)
+  private fun verifyGetOngoingStoryListSucceeded() {
+    verify(mockOngoingStoryListObserver, atLeastOnce()).onChanged(ongoingStoryListResultCaptor.capture())
+    assertThat(ongoingStoryListResultCaptor.value.isSuccess()).isTrue()
   }
 
-  @Test
-  fun testRetrieveOngoingStoryList_earlierThanSevenDays_doesNotHaveOngoingLesson() {
-    val ongoingStoryListLiveData = topicListController.getOngoingStoryList()
+  private fun verifyDefaultOngoingStoryListSucceeded() {
+    val ongoingTopicList = ongoingStoryListResultCaptor.value.getOrThrow()
+    assertThat(ongoingTopicList.recentStoryCount).isEqualTo(2)
+    verifyOngoingStoryAsFractionStory0Exploration0(ongoingTopicList.recentStoryList[0])
+    verifyOngoingStoryAsRatioStory0Exploration0(ongoingTopicList.recentStoryList[1])
+  }
 
-    val ongoingStoryList = ongoingStoryListLiveData.value!!.getOrThrow()
-    assertThat(ongoingStoryList.olderStoryCount).isEqualTo(0)
+  private fun verifyOngoingStoryAsFractionStory0Exploration0(promotedStory: PromotedStory) {
+    assertThat(promotedStory.explorationId).isEqualTo(FRACTIONS_EXPLORATION_ID_0)
+    assertThat(promotedStory.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+    assertThat(promotedStory.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+    assertThat(promotedStory.topicName).isEqualTo("Fractions")
+    assertThat(promotedStory.nextChapterName).isEqualTo("What is a Fraction?")
+    assertThat(promotedStory.lessonThumbnail.thumbnailGraphic).isEqualTo(LessonThumbnailGraphic.DUCK_AND_CHICKEN)
+    assertThat(promotedStory.completedChapterCount).isEqualTo(0)
+    assertThat(promotedStory.totalChapterCount).isEqualTo(2)
   }
 
-  private fun setUpTestApplicationComponent() {
-    DaggerTopicListControllerTest_TestApplicationComponent.builder()
-      .setApplication(ApplicationProvider.getApplicationContext())
-      .build()
-      .inject(this)
+  private fun verifyOngoingStoryAsFractionStory0Exploration1(promotedStory: PromotedStory) {
+    assertThat(promotedStory.explorationId).isEqualTo(FRACTIONS_EXPLORATION_ID_1)
+    assertThat(promotedStory.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+    assertThat(promotedStory.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+    assertThat(promotedStory.topicName).isEqualTo("Fractions")
+    assertThat(promotedStory.nextChapterName).isEqualTo("The Meaning of Equal Parts")
+    assertThat(promotedStory.lessonThumbnail.thumbnailGraphic).isEqualTo(LessonThumbnailGraphic.DUCK_AND_CHICKEN)
+    assertThat(promotedStory.completedChapterCount).isEqualTo(1)
+    assertThat(promotedStory.totalChapterCount).isEqualTo(2)
   }
 
-  @Qualifier
-  annotation class TestDispatcher
+  private fun verifyOngoingStoryAsRatioStory0Exploration0(promotedStory: PromotedStory) {
+    assertThat(promotedStory.explorationId).isEqualTo(RATIOS_EXPLORATION_ID_0)
+    assertThat(promotedStory.storyId).isEqualTo(RATIOS_STORY_ID_0)
+    assertThat(promotedStory.topicId).isEqualTo(RATIOS_TOPIC_ID)
+    assertThat(promotedStory.nextChapterName).isEqualTo("What is a Ratio?")
+    assertThat(promotedStory.topicName).isEqualTo("Ratios and Proportional Reasoning")
+    assertThat(promotedStory.lessonThumbnail.thumbnailGraphic).isEqualTo(LessonThumbnailGraphic.CHILD_WITH_FRACTIONS_HOMEWORK)
+    assertThat(promotedStory.completedChapterCount).isEqualTo(0)
+    assertThat(promotedStory.totalChapterCount).isEqualTo(2)
+  }
+
+  private fun verifyOngoingStoryAsRatioStory0Exploration1(promotedStory: PromotedStory) {
+    assertThat(promotedStory.explorationId).isEqualTo(RATIOS_EXPLORATION_ID_1)
+    assertThat(promotedStory.storyId).isEqualTo(RATIOS_STORY_ID_0)
+    assertThat(promotedStory.topicId).isEqualTo(RATIOS_TOPIC_ID)
+    assertThat(promotedStory.nextChapterName).isEqualTo("Order is important")
+    assertThat(promotedStory.topicName).isEqualTo("Ratios and Proportional Reasoning")
+    assertThat(promotedStory.lessonThumbnail.thumbnailGraphic).isEqualTo(LessonThumbnailGraphic.CHILD_WITH_FRACTIONS_HOMEWORK)
+    assertThat(promotedStory.completedChapterCount).isEqualTo(1)
+    assertThat(promotedStory.totalChapterCount).isEqualTo(2)
+  }
+
+  private fun verifyOngoingStoryAsRatioStory1Exploration2(promotedStory: PromotedStory) {
+    assertThat(promotedStory.explorationId).isEqualTo(RATIOS_EXPLORATION_ID_2)
+    assertThat(promotedStory.storyId).isEqualTo(RATIOS_STORY_ID_1)
+    assertThat(promotedStory.topicId).isEqualTo(RATIOS_TOPIC_ID)
+    assertThat(promotedStory.nextChapterName).isEqualTo("Equivalent Ratios")
+    assertThat(promotedStory.topicName).isEqualTo("Ratios and Proportional Reasoning")
+    assertThat(promotedStory.lessonThumbnail.thumbnailGraphic).isEqualTo(LessonThumbnailGraphic.CHILD_WITH_CUPCAKES)
+    assertThat(promotedStory.completedChapterCount).isEqualTo(0)
+    assertThat(promotedStory.totalChapterCount).isEqualTo(2)
+  }
+
+  private fun verifyOngoingStoryAsRatioStory1Exploration3(promotedStory: PromotedStory) {
+    assertThat(promotedStory.explorationId).isEqualTo(RATIOS_EXPLORATION_ID_3)
+    assertThat(promotedStory.storyId).isEqualTo(RATIOS_STORY_ID_1)
+    assertThat(promotedStory.topicId).isEqualTo(RATIOS_TOPIC_ID)
+    assertThat(promotedStory.nextChapterName).isEqualTo("Writing Ratios in Simplest Form")
+    assertThat(promotedStory.topicName).isEqualTo("Ratios and Proportional Reasoning")
+    assertThat(promotedStory.lessonThumbnail.thumbnailGraphic).isEqualTo(LessonThumbnailGraphic.CHILD_WITH_CUPCAKES)
+    assertThat(promotedStory.completedChapterCount).isEqualTo(1)
+    assertThat(promotedStory.totalChapterCount).isEqualTo(2)
+  }
+
+  private fun getCurrentTimestamp(): Long {
+    return Date().time
+  }
+
+  // Returns a timestamp which is atleast a week older than current timestamp.
+  private fun getOldTimestamp(): Long {
+    return Date().time - NINE_DAYS_IN_MS
+  }
+
+  @Qualifier annotation class TestDispatcher
 
   // TODO(#89): Move this to a common test application component.
   @Module
Index: app/src/main/java/org/oppia/app/topic/ViewPagerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/ViewPagerAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/ViewPagerAdapter.kt	(date 1584626399000)
@@ -5,13 +5,14 @@
 import androidx.fragment.app.FragmentManager
 import androidx.fragment.app.FragmentStatePagerAdapter
 import org.oppia.app.topic.info.TopicInfoFragment
-import org.oppia.app.topic.play.TopicPlayFragment
+import org.oppia.app.topic.lessons.TopicLessonsFragment
+import org.oppia.app.topic.practice.TopicPracticeFragment
 import org.oppia.app.topic.review.TopicReviewFragment
-import org.oppia.app.topic.train.TopicTrainFragment
 
 /** Adapter to bind fragments to [FragmentStatePagerAdapter] inside [TopicFragment]. */
 class ViewPagerAdapter(
   fragmentManager: FragmentManager,
+  private val internalProfileId: Int,
   private val topicId: String,
   private val storyId: String
 ) :
@@ -20,23 +21,25 @@
   override fun getItem(position: Int): Fragment {
     val args = Bundle()
     args.putString(TOPIC_ID_ARGUMENT_KEY, topicId)
+    args.putInt(PROFILE_ID_ARGUMENT_KEY, internalProfileId)
     when (TopicTab.getTabForPosition(position)) {
       TopicTab.INFO -> {
         val topicInfoTab = TopicInfoFragment()
         topicInfoTab.arguments = args
         return topicInfoTab
       }
-      TopicTab.PLAY -> {
-        val topicPlayTab = TopicPlayFragment()
+      TopicTab.LESSONS -> {
+        val topicPlayTab = TopicLessonsFragment()
+
         if (storyId.isNotEmpty())
           args.putString(STORY_ID_ARGUMENT_KEY, storyId)
         topicPlayTab.arguments = args
         return topicPlayTab
       }
-      TopicTab.TRAIN -> {
-        val topicTrainTab = TopicTrainFragment()
-        topicTrainTab.arguments = args
-        return topicTrainTab
+      TopicTab.PRACTICE -> {
+        val topicPracticeTab = TopicPracticeFragment()
+        topicPracticeTab.arguments = args
+        return topicPracticeTab
       }
       TopicTab.REVIEW -> {
         val topicReviewTab = TopicReviewFragment()
Index: app/src/main/java/org/oppia/app/topic/TopicTab.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/TopicTab.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/TopicTab.kt	(date 1584626399000)
@@ -3,8 +3,8 @@
 /** Enum to store the tabs of [TopicFragment] and get tab by position. */
 enum class TopicTab(private var position: Int) {
   INFO(position = 0),
-  PLAY(position = 1),
-  TRAIN(position = 2),
+  LESSONS(position = 1),
+  PRACTICE(position = 2),
   REVIEW(position = 3);
 
   companion object {
Index: app/src/main/java/org/oppia/app/topic/RouteToStoryListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/RouteToStoryListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/RouteToStoryListener.kt	(date 1584626399000)
@@ -2,5 +2,5 @@
 
 /** Listener for when an [TopicActivity] should route to a [StoryActivity]. */
 interface RouteToStoryListener {
-  fun routeToStory(storyId: String)
+  fun routeToStory(internalProfileId: Int, topicId: String, storyId: String)
 }
Index: app/src/main/java/org/oppia/app/home/HomeActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/HomeActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/HomeActivityPresenter.kt	(date 1584626399000)
@@ -9,6 +9,8 @@
 import org.oppia.app.drawer.NavigationDrawerFragment
 import javax.inject.Inject
 
+const val TAG_HOME_FRAGMENT = "HOME_FRAGMENT"
+
 /** The presenter for [HomeActivity]. */
 @ActivityScope
 class HomeActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
@@ -20,7 +22,8 @@
     if (getHomeFragment() == null) {
       activity.supportFragmentManager.beginTransaction().add(
         R.id.home_fragment_placeholder,
-        HomeFragment()
+        HomeFragment(),
+        TAG_HOME_FRAGMENT
       ).commitNow()
     }
   }
Index: app/src/main/java/org/oppia/app/home/HomeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/HomeActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/HomeActivity.kt	(date 1584626399000)
@@ -1,10 +1,12 @@
 package org.oppia.app.home
 
+import android.content.Context
 import android.content.Intent
 import android.os.Bundle
 import androidx.appcompat.app.AlertDialog
 import org.oppia.app.R
 import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
 import org.oppia.app.profile.ProfileActivity
 import org.oppia.app.topic.TopicActivity
 import javax.inject.Inject
@@ -12,16 +14,26 @@
 /** The central activity for all users entering the app. */
 class HomeActivity : InjectableAppCompatActivity(), RouteToTopicListener {
   @Inject lateinit var homeActivityPresenter: HomeActivityPresenter
+  private var internalProfileId: Int = -1
+
+  companion object {
+    fun createHomeActivity(context: Context, profileId: Int?): Intent {
+      val intent = Intent(context, HomeActivity::class.java)
+      intent.putExtra(KEY_NAVIGATION_PROFILE_ID, profileId)
+      return intent
+    }
+  }
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
+    internalProfileId = intent?.getIntExtra(KEY_NAVIGATION_PROFILE_ID, -1)!!
     homeActivityPresenter.handleOnCreate()
     title = getString(R.string.menu_home)
   }
 
-  override fun routeToTopic(topicId: String) {
-    startActivity(TopicActivity.createTopicActivityIntent(this, topicId))
+  override fun routeToTopic(internalProfileId: Int, topicId: String) {
+    startActivity(TopicActivity.createTopicActivityIntent(this, internalProfileId, topicId))
   }
 
   override fun onBackPressed() {
Index: app/src/main/java/org/oppia/app/player/state/itemviewmodel/NumericInputViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/itemviewmodel/NumericInputViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/itemviewmodel/NumericInputViewModel.kt	(date 1584626399000)
@@ -1,12 +1,68 @@
 package org.oppia.app.player.state.itemviewmodel
 
+import android.content.Context
+import android.text.Editable
+import android.text.TextWatcher
+import androidx.databinding.Bindable
+import androidx.databinding.Observable
+import androidx.databinding.ObservableField
 import org.oppia.app.model.InteractionObject
 import org.oppia.app.model.UserAnswer
+import org.oppia.app.parser.StringToNumberParser
+import org.oppia.app.player.state.answerhandling.AnswerErrorCategory
+import org.oppia.app.player.state.answerhandling.InteractionAnswerErrorReceiver
 import org.oppia.app.player.state.answerhandling.InteractionAnswerHandler
 
 /** [ViewModel] for the numeric input interaction. */
-class NumericInputViewModel : StateItemViewModel(ViewType.NUMERIC_INPUT_INTERACTION), InteractionAnswerHandler {
+class NumericInputViewModel(
+  private val context: Context,
+  private val interactionAnswerErrorReceiver: InteractionAnswerErrorReceiver
+) : StateItemViewModel(ViewType.NUMERIC_INPUT_INTERACTION), InteractionAnswerHandler {
   var answerText: CharSequence = ""
+  private var pendingAnswerError: String? = null
+  val errorMessage = ObservableField<String>("")
+  private val stringToNumberParser: StringToNumberParser = StringToNumberParser()
+
+  init {
+    val callback: Observable.OnPropertyChangedCallback = object : Observable.OnPropertyChangedCallback() {
+      override fun onPropertyChanged(sender: Observable, propertyId: Int) {
+        interactionAnswerErrorReceiver.onPendingAnswerError(pendingAnswerError)
+      }
+    }
+    errorMessage.addOnPropertyChangedCallback(callback)
+  }
+
+  /** It checks the pending error for the current numeric input, and correspondingly updates the error string based on the specified error category. */
+  override fun checkPendingAnswerError(category: AnswerErrorCategory): String? {
+    if (answerText.isNotEmpty()) {
+      pendingAnswerError = when (category) {
+        AnswerErrorCategory.REAL_TIME -> stringToNumberParser.getRealTimeAnswerError(answerText.toString()).getErrorMessageFromStringRes(
+          context
+        )
+        AnswerErrorCategory.SUBMIT_TIME -> stringToNumberParser.getSubmitTimeError(answerText.toString()).getErrorMessageFromStringRes(
+          context
+        )
+      }
+    }
+    errorMessage.set(pendingAnswerError)
+    return pendingAnswerError
+  }
+
+  @Bindable
+  fun getAnswerTextWatcher(): TextWatcher {
+    return object : TextWatcher {
+      override fun beforeTextChanged(s: CharSequence, start: Int, count: Int, after: Int) {
+      }
+
+      override fun onTextChanged(answer: CharSequence, start: Int, before: Int, count: Int) {
+        answerText = answer.toString().trim()
+        checkPendingAnswerError(AnswerErrorCategory.REAL_TIME)
+      }
+
+      override fun afterTextChanged(s: Editable) {
+      }
+    }
+  }
 
   override fun getPendingAnswer(): UserAnswer {
     val userAnswerBuilder = UserAnswer.newBuilder()
Index: app/src/main/java/org/oppia/app/home/HomeFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/HomeFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/HomeFragmentPresenter.kt	(date 1584626399000)
@@ -10,6 +10,7 @@
 import androidx.lifecycle.Transformations
 import androidx.recyclerview.widget.GridLayoutManager
 import org.oppia.app.databinding.HomeFragmentBinding
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
 import org.oppia.app.fragment.FragmentScope
 import org.oppia.app.home.topiclist.AllTopicsViewModel
 import org.oppia.app.home.topiclist.PromotedStoryListViewModel
@@ -18,10 +19,11 @@
 import org.oppia.app.home.topiclist.TopicSummaryClickListener
 import org.oppia.app.home.topiclist.TopicSummaryViewModel
 import org.oppia.app.model.OngoingStoryList
+import org.oppia.app.model.Profile
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.TopicList
 import org.oppia.app.model.TopicSummary
-import org.oppia.app.model.UserAppHistory
-import org.oppia.domain.UserAppHistoryController
+import org.oppia.domain.profile.ProfileManagementController
 import org.oppia.domain.topic.TopicListController
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.Logger
@@ -32,27 +34,34 @@
 class HomeFragmentPresenter @Inject constructor(
   private val activity: AppCompatActivity,
   private val fragment: Fragment,
-  private val userAppHistoryController: UserAppHistoryController,
+  private val profileManagementController: ProfileManagementController,
   private val topicListController: TopicListController,
   private val logger: Logger
 ) {
   private val routeToTopicListener = activity as RouteToTopicListener
   private val itemList: MutableList<HomeItemViewModel> = ArrayList()
   private val promotedStoryList: MutableList<PromotedStoryViewModel> = ArrayList()
-  private lateinit var userAppHistoryViewModel: UserAppHistoryViewModel
+  private lateinit var welcomeViewModel: WelcomeViewModel
   private lateinit var promotedStoryListViewModel: PromotedStoryListViewModel
   private lateinit var allTopicsViewModel: AllTopicsViewModel
   private lateinit var topicListAdapter: TopicListAdapter
   private lateinit var binding: HomeFragmentBinding
+  private var internalProfileId: Int = -1
+  private lateinit var profileId: ProfileId
+  private lateinit var profileName: String
+
   fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
     binding = HomeFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
     // NB: Both the view model and lifecycle owner must be set in order to correctly bind LiveData elements to
     // data-bound view models.
 
-    userAppHistoryViewModel = UserAppHistoryViewModel()
-    promotedStoryListViewModel = PromotedStoryListViewModel(activity)
+    internalProfileId = activity.intent.getIntExtra(KEY_NAVIGATION_PROFILE_ID, -1)
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+
+    welcomeViewModel = WelcomeViewModel()
+    promotedStoryListViewModel = PromotedStoryListViewModel(activity, internalProfileId)
     allTopicsViewModel = AllTopicsViewModel()
-    itemList.add(userAppHistoryViewModel)
+    itemList.add(welcomeViewModel)
     itemList.add(promotedStoryListViewModel)
     itemList.add(allTopicsViewModel)
     topicListAdapter = TopicListAdapter(activity, itemList, promotedStoryList)
@@ -78,13 +87,34 @@
       it.lifecycleOwner = fragment
     }
 
-    userAppHistoryController.markUserOpenedApp()
-    subscribeToUserAppHistory()
+    subscribeToProfileLiveData()
     subscribeToOngoingStoryList()
     subscribeToTopicList()
     return binding.root
   }
 
+  private val profileLiveData: LiveData<Profile> by lazy {
+    getProfileData()
+  }
+
+  private fun getProfileData(): LiveData<Profile> {
+    return Transformations.map(profileManagementController.getProfile(profileId), ::processGetProfileResult)
+  }
+
+  private fun subscribeToProfileLiveData() {
+    profileLiveData.observe(activity, Observer<Profile> { result ->
+      profileName = result.name
+      setProfileName()
+    })
+  }
+
+  private fun processGetProfileResult(profileResult: AsyncResult<Profile>): Profile {
+    if (profileResult.isFailure()) {
+      logger.e("HomeFragment", "Failed to retrieve profile", profileResult.getErrorOrNull()!!)
+    }
+    return profileResult.getOrDefault(Profile.getDefaultInstance())
+  }
+
   private val topicListSummaryResultLiveData: LiveData<AsyncResult<TopicList>> by lazy {
     topicListController.getTopicList()
   }
@@ -104,35 +134,20 @@
     return Transformations.map(topicListSummaryResultLiveData) { it.getOrDefault(TopicList.getDefaultInstance()) }
   }
 
-  private fun subscribeToUserAppHistory() {
-    getUserAppHistory().observe(fragment, Observer<UserAppHistory> { result ->
-      userAppHistoryViewModel = UserAppHistoryViewModel()
-      userAppHistoryViewModel.setAlreadyAppOpened(result.alreadyOpenedApp)
-      itemList[0] = userAppHistoryViewModel
-      topicListAdapter.notifyItemChanged(0)
-    })
-  }
-
-  private fun getUserAppHistory(): LiveData<UserAppHistory> {
-    // If there's an error loading the data, assume the default.
-    return Transformations.map(userAppHistoryController.getUserAppHistory(), ::processUserAppHistoryResult)
-  }
-
-  private fun processUserAppHistoryResult(appHistoryResult: AsyncResult<UserAppHistory>): UserAppHistory {
-    if (appHistoryResult.isFailure()) {
-      logger.e("HomeFragment", "Failed to retrieve user app history" + appHistoryResult.getErrorOrNull())
+  private fun setProfileName() {
+    if (::welcomeViewModel.isInitialized && ::profileName.isInitialized) {
+      welcomeViewModel.profileName = "$profileName!"
     }
-    return appHistoryResult.getOrDefault(UserAppHistory.getDefaultInstance())
   }
 
   private val ongoingStoryListSummaryResultLiveData: LiveData<AsyncResult<OngoingStoryList>> by lazy {
-    topicListController.getOngoingStoryList()
+    topicListController.getOngoingStoryList(profileId)
   }
 
   private fun subscribeToOngoingStoryList() {
     getAssumedSuccessfulOngoingStoryList().observe(fragment, Observer<OngoingStoryList> {
       it.recentStoryList.take(3).forEach { promotedStory ->
-        val recentStory = PromotedStoryViewModel(activity)
+        val recentStory = PromotedStoryViewModel(activity, internalProfileId)
         recentStory.setPromotedStory(promotedStory)
         promotedStoryList.add(recentStory)
       }
@@ -146,6 +161,6 @@
   }
 
   fun onTopicSummaryClicked(topicSummary: TopicSummary) {
-    routeToTopicListener.routeToTopic(topicSummary.topicId)
+    routeToTopicListener.routeToTopic(internalProfileId, topicSummary.topicId)
   }
 }
Index: app/src/main/java/org/oppia/app/player/state/itemviewmodel/FractionInteractionViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/itemviewmodel/FractionInteractionViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/itemviewmodel/FractionInteractionViewModel.kt	(date 1584626399000)
@@ -1,32 +1,88 @@
 package org.oppia.app.player.state.itemviewmodel
 
 import android.content.Context
+import android.text.Editable
+import android.text.TextWatcher
+import androidx.databinding.Bindable
+import androidx.databinding.Observable
+import androidx.databinding.ObservableField
 import org.oppia.app.R
 import org.oppia.app.model.Interaction
 import org.oppia.app.model.InteractionObject
 import org.oppia.app.model.UserAnswer
 import org.oppia.app.parser.StringToFractionParser
+import org.oppia.app.player.state.answerhandling.AnswerErrorCategory
+import org.oppia.app.player.state.answerhandling.InteractionAnswerErrorReceiver
 import org.oppia.app.player.state.answerhandling.InteractionAnswerHandler
 
 /** [ViewModel] for the fraction input interaction. */
 class FractionInteractionViewModel(
-  interaction: Interaction, private val context: Context
+  interaction: Interaction,
+  private val context: Context,
+  private val interactionAnswerErrorReceiver: InteractionAnswerErrorReceiver
 ) : StateItemViewModel(ViewType.FRACTION_INPUT_INTERACTION), InteractionAnswerHandler {
+  private var pendingAnswerError: String? = null
   var answerText: CharSequence = ""
+  var errorMessage = ObservableField<String>("")
+
   val hintText: CharSequence = deriveHintText(interaction)
+  private val stringToFractionParser: StringToFractionParser = StringToFractionParser()
+
+  init {
+    val callback: Observable.OnPropertyChangedCallback = object : Observable.OnPropertyChangedCallback() {
+      override fun onPropertyChanged(sender: Observable, propertyId: Int) {
+        interactionAnswerErrorReceiver.onPendingAnswerError(pendingAnswerError)
+      }
+    }
+    errorMessage.addOnPropertyChangedCallback(callback)
+  }
 
   override fun getPendingAnswer(): UserAnswer {
     val userAnswerBuilder = UserAnswer.newBuilder()
     if (answerText.isNotEmpty()) {
       val answerTextString = answerText.toString()
       userAnswerBuilder.answer = InteractionObject.newBuilder()
-        .setFraction(StringToFractionParser().getFractionFromString(answerTextString))
+        .setFraction(stringToFractionParser.parseFractionFromString(answerTextString))
         .build()
       userAnswerBuilder.plainAnswer = answerTextString
     }
     return userAnswerBuilder.build()
   }
 
+  /** It checks the pending error for the current fraction input, and correspondingly updates the error string based on the specified error category. */
+  override fun checkPendingAnswerError(category: AnswerErrorCategory): String? {
+    if (answerText.isNotEmpty()) {
+      when (category) {
+        AnswerErrorCategory.REAL_TIME -> pendingAnswerError =
+          stringToFractionParser.getRealTimeAnswerError(answerText.toString()).getErrorMessageFromStringRes(
+            context
+          )
+        AnswerErrorCategory.SUBMIT_TIME -> pendingAnswerError =
+          stringToFractionParser.getSubmitTimeError(answerText.toString()).getErrorMessageFromStringRes(
+            context
+          )
+      }
+      errorMessage.set(pendingAnswerError)
+    }
+    return pendingAnswerError
+  }
+
+  @Bindable
+  fun getAnswerTextWatcher(): TextWatcher {
+    return object : TextWatcher {
+      override fun beforeTextChanged(s: CharSequence, start: Int, count: Int, after: Int) {
+      }
+
+      override fun onTextChanged(answer: CharSequence, start: Int, before: Int, count: Int) {
+        answerText = answer.toString().trim()
+        checkPendingAnswerError(AnswerErrorCategory.REAL_TIME)
+      }
+
+      override fun afterTextChanged(s: Editable) {
+      }
+    }
+  }
+
   private fun deriveHintText(interaction: Interaction): CharSequence {
     val customPlaceholder = interaction.customizationArgsMap["customPlaceholder"]?.normalizedString ?: ""
     val allowNonzeroIntegerPart = interaction.customizationArgsMap["allowNonzeroIntegerPart"]?.boolValue ?: true
Index: app/src/main/java/org/oppia/app/parser/StringToFractionParser.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/parser/StringToFractionParser.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/parser/StringToFractionParser.kt	(date 1584626399000)
@@ -1,5 +1,9 @@
 package org.oppia.app.parser
 
+import android.content.Context
+import androidx.annotation.StringRes
+import org.oppia.app.R
+import org.oppia.app.customview.interaction.FractionInputInteractionView
 import org.oppia.app.model.Fraction
 import org.oppia.domain.util.normalizeWhitespace
 
@@ -8,14 +12,59 @@
   private val wholeNumberOnlyRegex = """^-? ?(\d+)$""".toRegex()
   private val fractionOnlyRegex = """^-? ?(\d+) ?/ ?(\d+)$""".toRegex()
   private val mixedNumberRegex = """^-? ?(\d+) (\d+) ?/ ?(\d+)$""".toRegex()
+  private val invalidCharsRegex = """^[\d\s/-]+$""".toRegex()
+  private val invalidCharsLengthRegex = "\\d{8,}".toRegex()
+
+  /**
+   * Returns a [FractionParsingError] for the specified text input if it's an invalid fraction, or
+   * [FractionParsingError.VALID] if no issues are found. Note that a valid fraction returned by this method is guaranteed
+   * to be parsed correctly by [parseRegularFraction].
+   *
+   * This method should only be used when a user tries submitting an answer. Real-time error detection should be done
+   * using [getRealTimeAnswerError], instead.
+   */
+  fun getSubmitTimeError(text: String): FractionParsingError {
+    if (invalidCharsLengthRegex.find(text) != null)
+      return FractionParsingError.NUMBER_TOO_LONG
+    val fraction = parseFraction(text)
+    return when {
+      fraction == null -> FractionParsingError.INVALID_FORMAT
+      fraction.denominator == 0 -> FractionParsingError.DIVISION_BY_ZERO
+      else -> FractionParsingError.VALID
+    }
+  }
 
-  fun getFractionFromString(text: String): Fraction {
+  /**
+   * Returns a [FractionParsingError] for obvious incorrect fraction formatting issues for the specified raw text, or
+   * [FractionParsingError.VALID] if not such issues are found.
+   *
+   * Note that this method returning a valid result does not guarantee the text is a valid fraction--
+   * [getSubmitTimeError] should be used for that, instead. This method is meant to be used as a quick sanity check for
+   * general validity, not for definite correctness.
+   */
+  fun getRealTimeAnswerError(text: String): FractionParsingError {
+    val normalized = text.normalizeWhitespace()
+    return when {
+      !normalized.matches(invalidCharsRegex) -> FractionParsingError.INVALID_CHARS
+      normalized.startsWith("/") -> FractionParsingError.INVALID_FORMAT
+      normalized.count { it == '/' } > 1 -> FractionParsingError.INVALID_FORMAT
+      normalized.lastIndexOf('-') > 0 -> FractionParsingError.INVALID_FORMAT
+      else -> FractionParsingError.VALID
+    }
+  }
+
+  /** Returns a [Fraction] parse from the specified raw text string. */
+  fun parseFraction(text: String): Fraction? {
     // Normalize whitespace to ensure that answer follows a simpler subset of possible patterns.
     val inputText: String = text.normalizeWhitespace()
     return parseMixedNumber(inputText)
-      ?: parseFraction(inputText)
+      ?: parseRegularFraction(inputText)
       ?: parseWholeNumber(inputText)
-      ?: throw IllegalArgumentException("Incorrectly formatted fraction: $text")
+  }
+
+  /** Returns a [Fraction] parse from the specified raw text string. */
+  fun parseFractionFromString(text: String): Fraction {
+    return parseFraction(text) ?: throw IllegalArgumentException("Incorrectly formatted fraction: $text")
   }
 
   private fun parseMixedNumber(inputText: String): Fraction? {
@@ -29,7 +78,7 @@
       .build()
   }
 
-  private fun parseFraction(inputText: String): Fraction? {
+  private fun parseRegularFraction(inputText: String): Fraction? {
     val fractionOnlyMatch = fractionOnlyRegex.matchEntire(inputText) ?: return null
     val (_, numeratorText, denominatorText) = fractionOnlyMatch.groupValues
     // Fraction-only numbers imply no whole number.
@@ -53,4 +102,18 @@
   }
 
   private fun isInputNegative(inputText: String): Boolean = inputText.startsWith("-")
+
+  /** Enum to store the errors of [FractionInputInteractionView]. */
+  enum class FractionParsingError(@StringRes private var error: Int?) {
+    VALID(error = null),
+    INVALID_CHARS(error = R.string.fraction_error_invalid_chars),
+    INVALID_FORMAT(error = R.string.fraction_error_invalid_format),
+    DIVISION_BY_ZERO(error = R.string.fraction_error_divide_by_zero),
+    NUMBER_TOO_LONG(error = R.string.fraction_error_larger_than_seven_digits);
+
+    /** Returns the string corresponding to this error's string resources, or null if there is none. */
+    fun getErrorMessageFromStringRes(context: Context): String? {
+      return error?.let(context::getString)
+    }
+  }
 }
Index: app/src/main/java/org/oppia/app/player/state/answerhandling/InteractionAnswerHandler.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/answerhandling/InteractionAnswerHandler.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/answerhandling/InteractionAnswerHandler.kt	(date 1584626399000)
@@ -14,8 +14,15 @@
    */
   fun isExplicitAnswerSubmissionRequired(): Boolean = true
 
+  /** Return the current answer's error messages  if not valid else return null. */
+  fun checkPendingAnswerError(category: AnswerErrorCategory): String? {
+    return null
+  }
+
   /** Return the current answer that is ready for handling. */
-  fun getPendingAnswer(): UserAnswer
+  fun getPendingAnswer(): UserAnswer? {
+    return null
+  }
 }
 
 /**
@@ -25,3 +32,11 @@
 interface InteractionAnswerReceiver {
   fun onAnswerReadyForSubmission(answer: UserAnswer)
 }
+
+/** Categories of errors that can be inferred from a pending answer.  */
+enum class AnswerErrorCategory {
+  /** Corresponds to errors that may be found while the user is trying to input an answer.  */
+  REAL_TIME,
+  /** Corresponds to errors that may be found only when a user tries to submit an answer.  */
+  SUBMIT_TIME
+}
Index: app/src/main/java/org/oppia/app/topic/questionplayer/QuestionPlayerActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/questionplayer/QuestionPlayerActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/questionplayer/QuestionPlayerActivity.kt	(date 1584626399000)
@@ -8,7 +8,7 @@
 
 const val QUESTION_PLAYER_ACTIVITY_SKILL_ID_LIST_ARGUMENT_KEY = "QuestionPlayerActivity.skill_id_list"
 
-/** Activity for QuestionPlayer in train mode. */
+/** Activity for QuestionPlayer in practice mode. */
 class QuestionPlayerActivity : InjectableAppCompatActivity() {
   @Inject lateinit var questionPlayerActivityPresenter: QuestionPlayerActivityPresenter
 
@@ -19,7 +19,7 @@
   }
 
   companion object {
-    // TODO(#159): Use this skillList from TopicTrainFragment to fetch questions and start train mode.
+    // TODO(#159): Use this skillList from TopicPracticeFragment to fetch questions and start practice mode.
     /** Returns a new [Intent] to route to [QuestionPlayerActivity] for a specified skill ID list. */
     fun createQuestionPlayerActivityIntent(context: Context, skillIdList: ArrayList<String>): Intent {
       val intent = Intent(context, QuestionPlayerActivity::class.java)
Index: app/src/main/java/org/oppia/app/player/state/itemviewmodel/SelectionInteractionViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/itemviewmodel/SelectionInteractionViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/itemviewmodel/SelectionInteractionViewModel.kt	(date 1584626399000)
@@ -6,15 +6,20 @@
 import org.oppia.app.model.StringList
 import org.oppia.app.model.UserAnswer
 import org.oppia.app.player.state.SelectionItemInputType
+import org.oppia.app.player.state.answerhandling.InteractionAnswerErrorReceiver
 import org.oppia.app.player.state.answerhandling.InteractionAnswerHandler
 import org.oppia.app.player.state.answerhandling.InteractionAnswerReceiver
 import org.oppia.app.viewmodel.ObservableArrayList
 
 /** ViewModel for multiple or item-selection input choice list. */
 class SelectionInteractionViewModel(
-  val explorationId: String, interaction: Interaction, private val interactionAnswerReceiver: InteractionAnswerReceiver
-): StateItemViewModel(ViewType.SELECTION_INTERACTION), InteractionAnswerHandler {
+  val explorationId: String,
+  interaction: Interaction,
+  private val interactionAnswerReceiver: InteractionAnswerReceiver,
+  interactionAnswerErrorReceiver: InteractionAnswerErrorReceiver
+) : StateItemViewModel(ViewType.SELECTION_INTERACTION), InteractionAnswerHandler {
   private val interactionId: String = interaction.id
+
   private val choiceStrings: List<String> by lazy {
     interaction.customizationArgsMap["choices"]?.setOfHtmlString?.htmlList ?: listOf()
   }
Index: app/src/main/java/org/oppia/app/player/state/itemviewmodel/InteractionViewModelModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/itemviewmodel/InteractionViewModelModule.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/itemviewmodel/InteractionViewModelModule.kt	(date 1584626399000)
@@ -18,7 +18,7 @@
   @IntoMap
   @StringKey("Continue")
   fun provideContinueInteractionViewModelFactory(): InteractionViewModelFactory {
-    return { _, _, interactionAnswerReceiver ->
+    return { _, _, interactionAnswerReceiver, _ ->
       ContinueInteractionViewModel(interactionAnswerReceiver)
     }
   }
@@ -41,20 +41,25 @@
   @IntoMap
   @StringKey("FractionInput")
   fun provideFractionInputViewModelFactory(context: Context): InteractionViewModelFactory {
-    return { _, interaction, _ -> FractionInteractionViewModel(interaction, context) }
+    return { _, interaction, _, interactionAnswerHandler ->
+      FractionInteractionViewModel(
+        interaction, context,
+        interactionAnswerHandler
+      )
+    }
   }
 
   @Provides
   @IntoMap
   @StringKey("NumericInput")
-  fun provideNumericInputViewModelFactory(): InteractionViewModelFactory {
-    return { _, _, _ -> NumericInputViewModel() }
+  fun provideNumericInputViewModelFactory(context: Context): InteractionViewModelFactory {
+    return { _, _, _, interactionAnswerHandler -> NumericInputViewModel(context, interactionAnswerHandler) }
   }
 
   @Provides
   @IntoMap
   @StringKey("TextInput")
   fun provideTextInputViewModelFactory(): InteractionViewModelFactory {
-    return { _, interaction, _ -> TextInputViewModel(interaction) }
+    return { _, interaction, _, _ -> TextInputViewModel(interaction) }
   }
 }
Index: app/src/main/java/org/oppia/app/player/state/itemviewmodel/InteractionViewModelFactory.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/itemviewmodel/InteractionViewModelFactory.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/itemviewmodel/InteractionViewModelFactory.kt	(date 1584626399000)
@@ -1,7 +1,7 @@
 package org.oppia.app.player.state.itemviewmodel
 
 import org.oppia.app.model.Interaction
-import org.oppia.app.model.InteractionObject
+import org.oppia.app.player.state.answerhandling.InteractionAnswerErrorReceiver
 import org.oppia.app.player.state.answerhandling.InteractionAnswerReceiver
 
 /**
@@ -9,5 +9,5 @@
  * pushes answers, the [Interaction] object corresponding to the interaction view, and the exploration ID.
  */
 typealias InteractionViewModelFactory = (
-  explorationId: String, interaction: Interaction, interactionAnswerReceiver: InteractionAnswerReceiver
+  explorationId: String, interaction: Interaction, interactionAnswerReceiver: InteractionAnswerReceiver, interactionAnswerHandler: InteractionAnswerErrorReceiver
 ) -> StateItemViewModel
Index: app/src/main/java/org/oppia/app/player/exploration/ExplorationViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/exploration/ExplorationViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/exploration/ExplorationViewModel.kt	(date 1584626399000)
@@ -7,7 +7,7 @@
 
 /** The ViewModel for [ExplorationActivity] */
 @ActivityScope
-class ExplorationViewModel @Inject constructor(): ObservableViewModel() {
+class ExplorationViewModel @Inject constructor() : ObservableViewModel() {
   /** Used to control visibility of audio button. */
   val showAudioButton = ObservableField(false)
 
Index: app/src/main/java/org/oppia/app/player/audio/CellularAudioDialogFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/audio/CellularAudioDialogFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/audio/CellularAudioDialogFragment.kt	(date 1584626399000)
@@ -3,6 +3,7 @@
 import android.app.Dialog
 import android.content.Context
 import android.os.Bundle
+import android.view.View
 import android.widget.CheckBox
 import androidx.appcompat.app.AlertDialog
 import androidx.appcompat.view.ContextThemeWrapper
@@ -25,7 +26,7 @@
   }
 
   override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {
-    val view = activity!!.layoutInflater.inflate(R.layout.cellular_data_dialog, null)
+    val view = View.inflate(context, R.layout.cellular_data_dialog, /* root= */ null)
     val checkBox = view.findViewById<CheckBox>(R.id.cellular_data_dialog_checkbox)
 
     val cellularDataInterface: CellularDataInterface = parentFragment as AudioFragment
Index: app/src/main/java/org/oppia/app/home/topiclist/PromotedStoryListViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/topiclist/PromotedStoryListViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/topiclist/PromotedStoryListViewModel.kt	(date 1584626399000)
@@ -3,18 +3,27 @@
 import androidx.appcompat.app.AppCompatActivity
 import androidx.lifecycle.ViewModel
 import org.oppia.app.home.HomeItemViewModel
-import org.oppia.app.home.RouteToContinuePlayingListener
-import org.oppia.app.home.continueplaying.ContinuePlayingActivity
+import org.oppia.app.home.RouteToRecentlyPlayedListener
+import org.oppia.app.home.recentlyplayed.RecentlyPlayedActivity
 
 /** [ViewModel] promoted story list in [HomeFragment]. */
-class PromotedStoryListViewModel(private val activity: AppCompatActivity) : HomeItemViewModel(),
-  RouteToContinuePlayingListener {
+class PromotedStoryListViewModel(
+  private val activity: AppCompatActivity,
+  private val internalProfileId: Int
+) :
+  HomeItemViewModel(),
+  RouteToRecentlyPlayedListener {
 
   fun clickOnViewAll() {
-    routeToContinuePlaying()
+    routeToRecentlyPlayed()
   }
 
-  override fun routeToContinuePlaying() {
-    activity.startActivity(ContinuePlayingActivity.createContinuePlayingActivityIntent(activity.applicationContext))
+  override fun routeToRecentlyPlayed() {
+    activity.startActivity(
+      RecentlyPlayedActivity.createRecentlyPlayedActivityIntent(
+        activity.applicationContext,
+        internalProfileId
+      )
+    )
   }
 }
Index: app/src/main/java/org/oppia/app/story/StoryViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/story/StoryViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/story/StoryViewModel.kt	(date 1584626399000)
@@ -8,6 +8,7 @@
 import org.oppia.app.fragment.FragmentScope
 import org.oppia.app.model.ChapterPlayState
 import org.oppia.app.model.ChapterSummary
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.StorySummary
 import org.oppia.app.story.storyitemviewmodel.StoryChapterSummaryViewModel
 import org.oppia.app.story.storyitemviewmodel.StoryHeaderViewModel
@@ -26,12 +27,14 @@
   private val explorationDataController: ExplorationDataController,
   private val logger: Logger
 ) : ViewModel() {
+  private var internalProfileId: Int = -1
+  private lateinit var topicId: String
   /** [storyId] needs to be set before any of the live data members can be accessed. */
   private lateinit var storyId: String
   private val explorationSelectionListener = fragment as ExplorationSelectionListener
 
   private val storyResultLiveData: LiveData<AsyncResult<StorySummary>> by lazy {
-    topicController.getStory(storyId)
+    topicController.getStory(ProfileId.newBuilder().setInternalId(internalProfileId).build(), topicId, storyId)
   }
 
   private val storyLiveData: LiveData<StorySummary> by lazy {
@@ -46,6 +49,14 @@
     Transformations.map(storyLiveData, ::processStoryChapterList)
   }
 
+  fun setInternalProfileId(internalProfileId: Int) {
+    this.internalProfileId = internalProfileId
+  }
+
+  fun setTopicId(topicId: String) {
+    this.topicId = topicId
+  }
+
   fun setStoryId(storyId: String) {
     this.storyId = storyId
   }
@@ -80,7 +91,15 @@
     // Add the rest of the list
     itemViewModelList.addAll(chapterList.mapIndexed { index, chapter ->
       StoryChapterSummaryViewModel(
-        index, fragment, explorationSelectionListener, explorationDataController, logger, chapter
+        index,
+        fragment,
+        explorationSelectionListener,
+        explorationDataController,
+        logger,
+        internalProfileId,
+        topicId,
+        storyId,
+        chapter
       )
     })
 
Index: app/src/main/java/org/oppia/app/databinding/ImageViewBindingAdapters.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/databinding/ImageViewBindingAdapters.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/databinding/ImageViewBindingAdapters.kt	(date 1584626399000)
@@ -10,6 +10,7 @@
 import org.oppia.app.model.LessonThumbnailGraphic
 import org.oppia.app.model.ProfileAvatar
 import org.oppia.app.model.SkillThumbnailGraphic
+import org.oppia.app.model.SubtopicThumbnailGraphic
 
 /**
  * Allows binding drawables to an [ImageView] via "android:src". Source: https://stackoverflow.com/a/35809319/3689782.
@@ -73,6 +74,23 @@
     }
   )
 }
+
+/**
+ * Binds the specified [SkillThumbnailGraphic] as the source for the [ImageView]. The view should be specified to have
+ * no width/height (when sized in a constraint layout), and use centerCrop for the image to appear correctly.
+ */
+@BindingAdapter("android:src")
+fun setImageDrawable(imageView: ImageView, thumbnailGraphic: SubtopicThumbnailGraphic) {
+  setImageDrawable(
+    imageView, when (thumbnailGraphic) {
+      SubtopicThumbnailGraphic.WHAT_IS_A_FRACTION -> R.drawable.topic_fractions_01
+      SubtopicThumbnailGraphic.FRACTION_OF_A_GROUP -> R.drawable.topic_fractions_02
+      SubtopicThumbnailGraphic.ADDING_FRACTIONS -> R.drawable.topic_fractions_03
+      SubtopicThumbnailGraphic.MIXED_NUMBERS -> R.drawable.topic_fractions_04
+      else -> R.drawable.topic_fractions_01
+    }
+  )
+}
 
 /**
  * Binding adapter for profile images. Used to either display a local image or custom colored avatar.
Index: app/src/main/java/org/oppia/app/story/StoryFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/story/StoryFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/story/StoryFragmentPresenter.kt	(date 1584626399000)
@@ -34,9 +34,17 @@
   private lateinit var linearLayoutManager: LinearLayoutManager
   private lateinit var linearSmoothScroller: RecyclerView.SmoothScroller
 
-  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?, storyId: String): View? {
+  fun handleCreateView(
+    inflater: LayoutInflater,
+    container: ViewGroup?,
+    internalProfileId: Int,
+    topicId: String,
+    storyId: String
+  ): View? {
     val viewModel = getStoryViewModel()
     binding = StoryFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    viewModel.setInternalProfileId(internalProfileId)
+    viewModel.setTopicId(topicId)
     viewModel.setStoryId(storyId)
 
     binding.storyToolbar.setNavigationOnClickListener {
@@ -60,8 +68,8 @@
     return binding.root
   }
 
-  fun handleSelectExploration(explorationId: String) {
-    routeToExplorationListener.routeToExploration(explorationId, /* topicId= */ null)
+  fun handleSelectExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    routeToExplorationListener.routeToExploration(internalProfileId, topicId, storyId, explorationId)
   }
 
   private fun createRecyclerViewAdapter(): BindableAdapter<StoryItemViewModel> {
Index: app/src/main/java/org/oppia/app/story/StoryFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/story/StoryFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/story/StoryFragment.kt	(date 1584626399000)
@@ -8,15 +8,19 @@
 import org.oppia.app.fragment.InjectableFragment
 import javax.inject.Inject
 
+private const val KEY_INTERNAL_PROFILE_ID_ARGUMENT = "INTERNAL_PROFILE_ID"
+private const val KEY_TOPIC_ID_ARGUMENT = "TOPIC_ID"
 private const val KEY_STORY_ID_ARGUMENT = "STORY_ID"
 
 /** Fragment for displaying a story. */
 class StoryFragment : InjectableFragment(), ExplorationSelectionListener {
   companion object {
     /** Returns a new [StoryFragment] to display the story corresponding to the specified story ID. */
-    fun newInstance(storyId: String): StoryFragment {
+    fun newInstance(internalProfileId: Int, topicId: String, storyId: String): StoryFragment {
       val storyFragment = StoryFragment()
       val args = Bundle()
+      args.putInt(KEY_INTERNAL_PROFILE_ID_ARGUMENT, internalProfileId)
+      args.putString(KEY_TOPIC_ID_ARGUMENT, topicId)
       args.putString(KEY_STORY_ID_ARGUMENT, storyId)
       storyFragment.arguments = args
       return storyFragment
@@ -36,13 +40,16 @@
     savedInstanceState: Bundle?
   ): View? {
     val args = checkNotNull(arguments) { "Expected arguments to be passed to StoryFragment" }
+    val internalProfileId = args.getInt(KEY_INTERNAL_PROFILE_ID_ARGUMENT, -1)
+    val topicId =
+      checkNotNull(args.getString(KEY_TOPIC_ID_ARGUMENT)) { "Expected topicId to be passed to StoryFragment" }
     val storyId =
       checkNotNull(args.getString(KEY_STORY_ID_ARGUMENT)) { "Expected storyId to be passed to StoryFragment" }
-    return storyFragmentPresenter.handleCreateView(inflater, container, storyId)
+    return storyFragmentPresenter.handleCreateView(inflater, container, internalProfileId, topicId, storyId)
   }
 
-  override fun selectExploration(explorationId: String) {
-    storyFragmentPresenter.handleSelectExploration(explorationId)
+  override fun selectExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    storyFragmentPresenter.handleSelectExploration(internalProfileId, topicId, storyId, explorationId)
   }
 
   fun smoothScrollToPosition(position: Int) {
Index: app/src/main/java/org/oppia/app/settings/profile/ProfileListActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/settings/profile/ProfileListActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/settings/profile/ProfileListActivity.kt	(date 1584626399000)
@@ -1,5 +1,7 @@
 package org.oppia.app.settings.profile
 
+import android.content.Context
+import android.content.Intent
 import android.os.Bundle
 import org.oppia.app.activity.InjectableAppCompatActivity
 import javax.inject.Inject
@@ -18,4 +20,11 @@
     finish()
     return false
   }
+
+  companion object {
+    /** Returns a new [Intent] to route to [ProfileListActivity]. */
+    fun createProfileListActivityIntent(context: Context): Intent {
+      return Intent(context, ProfileListActivity::class.java)
+    }
+  }
 }
Index: app/src/main/java/org/oppia/app/story/ExplorationSelectionListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/story/ExplorationSelectionListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/story/ExplorationSelectionListener.kt	(date 1584626399000)
@@ -3,5 +3,5 @@
 /** Listener for cases when the user taps on a specific chapter/exploration to play. */
 interface ExplorationSelectionListener {
   /** Called when an exploration has been selected by the user. */
-  fun selectExploration(explorationId: String)
+  fun selectExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String)
 }
Index: app/src/main/java/org/oppia/app/story/StoryActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/story/StoryActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/story/StoryActivity.kt	(date 1584626399000)
@@ -15,23 +15,39 @@
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
-    val storyId: String = checkNotNull(intent.getStringExtra(STORY_ACTIVITY_INTENT_EXTRA)) {
+    val internalProfileId = intent.getIntExtra(STORY_ACTIVITY_INTENT_EXTRA_INTERNAL_PROFILE_ID, -1)
+    val topicId = checkNotNull(intent.getStringExtra(STORY_ACTIVITY_INTENT_EXTRA_TOPIC_ID)) {
+      "Expected extra topic ID to be included for StoryActivity."
+    }
+    val storyId: String = checkNotNull(intent.getStringExtra(STORY_ACTIVITY_INTENT_EXTRA_STORY_ID)) {
       "Expected extra story ID to be included for StoryActivity."
     }
-    storyActivityPresenter.handleOnCreate(storyId)
+    storyActivityPresenter.handleOnCreate(internalProfileId, topicId, storyId)
   }
 
-  override fun routeToExploration(explorationId: String, topicId: String?) {
-    startActivity(ExplorationActivity.createExplorationActivityIntent(this, explorationId, topicId))
+  override fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    startActivity(
+      ExplorationActivity.createExplorationActivityIntent(
+        this,
+        internalProfileId,
+        topicId,
+        storyId,
+        explorationId
+      )
+    )
   }
 
   companion object {
-    const val STORY_ACTIVITY_INTENT_EXTRA = "StoryActivity.story_id"
+    const val STORY_ACTIVITY_INTENT_EXTRA_INTERNAL_PROFILE_ID = "StoryActivity.internal_profile_id"
+    const val STORY_ACTIVITY_INTENT_EXTRA_TOPIC_ID = "StoryActivity.topic_id"
+    const val STORY_ACTIVITY_INTENT_EXTRA_STORY_ID = "StoryActivity.story_id"
 
-    /** Returns a new [Intent] to route to [StoryActivity] for a specified story ID. */
-    fun createStoryActivityIntent(context: Context, storyId: String): Intent {
+    /** Returns a new [Intent] to route to [StoryActivity] for a specified story. */
+    fun createStoryActivityIntent(context: Context, internalProfileId: Int, topicId: String, storyId: String): Intent {
       val intent = Intent(context, StoryActivity::class.java)
-      intent.putExtra(STORY_ACTIVITY_INTENT_EXTRA, storyId)
+      intent.putExtra(STORY_ACTIVITY_INTENT_EXTRA_INTERNAL_PROFILE_ID, internalProfileId)
+      intent.putExtra(STORY_ACTIVITY_INTENT_EXTRA_TOPIC_ID, topicId)
+      intent.putExtra(STORY_ACTIVITY_INTENT_EXTRA_STORY_ID, storyId)
       return intent
     }
   }
Index: app/src/main/java/org/oppia/app/story/StoryActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/story/StoryActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/story/StoryActivityPresenter.kt	(date 1584626399000)
@@ -8,12 +8,12 @@
 /** The presenter for [StoryActivity]. */
 @ActivityScope
 class StoryActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
-  fun handleOnCreate(storyId: String) {
+  fun handleOnCreate(internalProfileId: Int, topicId: String, storyId: String) {
     activity.setContentView(R.layout.story_activity)
     if (getStoryFragment() == null) {
       activity.supportFragmentManager.beginTransaction().add(
         R.id.story_fragment_placeholder,
-        StoryFragment.newInstance(storyId)
+        StoryFragment.newInstance(internalProfileId, topicId, storyId)
       ).commitNow()
     }
   }
Index: app/src/main/java/org/oppia/app/story/storyitemviewmodel/StoryChapterSummaryViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/story/storyitemviewmodel/StoryChapterSummaryViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/story/storyitemviewmodel/StoryChapterSummaryViewModel.kt	(date 1584626399000)
@@ -19,6 +19,9 @@
   private val explorationSelectionListener: ExplorationSelectionListener,
   private val explorationDataController: ExplorationDataController,
   private val logger: Logger,
+  val internalProfileId: Int,
+  val topicId: String,
+  val storyId: String,
   val chapterSummary: ChapterSummary
 ) : StoryItemViewModel() {
   val explorationId: String = chapterSummary.explorationId
@@ -36,7 +39,7 @@
         result.isFailure() -> logger.e(STORY_VIEWER_TAG, "Failed to load exploration", result.getErrorOrNull()!!)
         else -> {
           logger.d(STORY_VIEWER_TAG, "Successfully loaded exploration: $explorationId")
-          explorationSelectionListener.selectExploration(explorationId)
+          explorationSelectionListener.selectExploration(internalProfileId, topicId, storyId, explorationId)
         }
       }
     })
Index: app/src/main/java/org/oppia/app/profile/ProfileActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/ProfileActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/ProfileActivity.kt	(date 1584626399000)
@@ -1,5 +1,7 @@
 package org.oppia.app.profile
 
+import android.content.Context
+import android.content.Intent
 import android.os.Bundle
 import kotlinx.coroutines.ExperimentalCoroutinesApi
 import org.oppia.app.activity.InjectableAppCompatActivity
@@ -9,6 +11,14 @@
 class ProfileActivity : InjectableAppCompatActivity() {
   @Inject lateinit var profileActivityPresenter: ProfileActivityPresenter
 
+  companion object {
+    fun createProfileActivity(context: Context): Intent {
+      val intent = Intent(context, ProfileActivity::class.java)
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+      return intent
+    }
+  }
+
   @ExperimentalCoroutinesApi
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
Index: app/src/main/java/org/oppia/app/profile/ProfileChooserFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/ProfileChooserFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/ProfileChooserFragmentPresenter.kt	(date 1584626399000)
@@ -1,7 +1,6 @@
 package org.oppia.app.profile
 
 import android.content.Context
-import android.content.Intent
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
@@ -113,7 +112,7 @@
       if (model.profile.pin.isEmpty()) {
         profileManagementController.loginToProfile(model.profile.id).observe(fragment, Observer {
           if (it.isSuccess()) {
-            activity.startActivity(Intent(fragment.context, HomeActivity::class.java))
+            activity.startActivity((HomeActivity.createHomeActivity(activity, model.profile.id.internalId)))
           }
         })
       } else {
Index: app/src/main/java/org/oppia/app/profile/ProfileActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/ProfileActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/ProfileActivityPresenter.kt	(date 1584626399000)
@@ -3,6 +3,9 @@
 import androidx.appcompat.app.AppCompatActivity
 import org.oppia.app.R
 import org.oppia.app.activity.ActivityScope
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.StoryTextSize
 import org.oppia.domain.profile.ProfileManagementController
 import javax.inject.Inject
 
@@ -21,7 +24,10 @@
       avatarImagePath = null,
       allowDownloadAccess = true,
       colorRgb = -10710042,
-      isAdmin = true
+      isAdmin = true,
+      storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+      appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+      audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
     )
     activity.setContentView(R.layout.profile_activity)
     if (getProfileChooserFragment() == null) {
Index: domain/src/main/java/org/oppia/domain/profile/ProfileTestHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/java/org/oppia/domain/profile/ProfileTestHelper.kt	(date 1584621433000)
+++ domain/src/main/java/org/oppia/domain/profile/ProfileTestHelper.kt	(date 1584626399000)
@@ -1,7 +1,10 @@
 package org.oppia.domain.profile
 
 import androidx.lifecycle.LiveData
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
 import org.oppia.app.model.ProfileId
+import org.oppia.app.model.StoryTextSize
 import org.oppia.util.data.AsyncResult
 import javax.inject.Inject
 
@@ -17,7 +20,10 @@
       avatarImagePath = null,
       allowDownloadAccess = true,
       colorRgb = -10710042,
-      isAdmin = true
+      isAdmin = true,
+      storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+      appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+      audioLanguage = AudioLanguage.HINDI_AUDIO_LANGUAGE
     )
     profileManagementController.addProfile(
       name = "Ben",
@@ -25,7 +31,10 @@
       avatarImagePath = null,
       allowDownloadAccess = false,
       colorRgb = -10710042,
-      isAdmin = false
+      isAdmin = false,
+      storyTextSize = StoryTextSize.MEDIUM_TEXT_SIZE,
+      appLanguage = AppLanguage.HINDI_APP_LANGUAGE,
+      audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
     )
     return profileManagementController.loginToProfile(ProfileId.newBuilder().setInternalId(0).build())
   }
@@ -39,7 +48,10 @@
         avatarImagePath = null,
         allowDownloadAccess = false,
         colorRgb = -10710042,
-        isAdmin = false
+        isAdmin = false,
+        storyTextSize = StoryTextSize.LARGE_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
       )
     }
   }
@@ -51,4 +63,7 @@
   /** Login to user profile. */
   fun loginToUser() =
     profileManagementController.loginToProfile(ProfileId.newBuilder().setInternalId(1).build())
+  /** Login to user profile. */
+  fun loginToUser2() =
+    profileManagementController.loginToProfile(ProfileId.newBuilder().setInternalId(2).build())
 }
Index: app/src/main/res/drawable/pin_view_background_shadow.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/pin_view_background_shadow.xml	(date 1584626399000)
+++ app/src/main/res/drawable/pin_view_background_shadow.xml	(date 1584626399000)
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+  <item>
+    <shape>
+      <corners android:radius="6dp" />
+      <solid android:color="@color/mid_grey_03" />
+      <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+    </shape>
+  </item>
+  <item>
+    <shape>
+      <corners android:radius="4dp" />
+      <solid android:color="@color/mid_grey_03" />
+      <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+    </shape>
+  </item>
+  <item>
+    <shape>
+      <corners android:radius="4dp" />
+      <solid android:color="@color/mid_grey_03" />
+      <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+    </shape>
+  </item>  <item>
+    <shape>
+      <corners android:radius="4dp" />
+      <solid android:color="@color/mid_grey_05" />
+      <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+    </shape>
+  </item>
+  <item>
+    <shape>
+      <corners android:radius="4dp" />
+      <solid android:color="@color/mid_grey_05" />
+      <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+    </shape>
+  </item>
+  <item>
+    <shape>
+      <corners android:radius="2dp" />
+      <solid android:color="@color/white" />
+    </shape>
+  </item>
+</layer-list>
Index: app/src/main/res/drawable/ic_onboarding_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_onboarding_0.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_onboarding_0.xml	(date 1584626399000)
@@ -0,0 +1,88 @@
+<vector android:height="24dp" android:viewportHeight="380"
+    android:viewportWidth="360" android:width="24dp"
+    xmlns:aapt="http://schemas.android.com/aapt" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:pathData="M0,285.42c26.65,-35.19 47.27,-92.09 95.37,-91.53 76.39,0.89 106.5,142.2 200,115 28.73,-8.37 49.57,-31.18 64.66,-58.75V0H0Z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="68.56" android:endY="-50.31"
+                android:startX="303.82" android:startY="357.18" android:type="linear">
+                <item android:color="#4C5DC5C1" android:offset="0"/>
+                <item android:color="#99049489" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:pathData="M0,195.53c39.26,-12.43 81.59,-28.47 118,-16.1 71.31,24.27 89.11,103.66 182.58,76.45 28,-8.16 46.82,-18.85 59.46,-29.84V0H0Z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="107.46" android:endY="-27.88"
+                android:startX="301.3" android:startY="307.86" android:type="linear">
+                <item android:color="#66169A90" android:offset="0"/>
+                <item android:color="#FF049489" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:fillColor="#ffebc2" android:pathData="M222.69,226.15c-3.36,3.06 -6.53,6.32 -10.81,8.23a54.6,54.6 0,0 1,-11.77 3.33c-3.65,1.34 -7.38,0.76 -10.84,-0.26 -4.21,-1.23 -7.53,-1.35 -11.32,1.67 -4.69,3.76 -10.56,4.14 -16.44,2.8a25.09,25.09 0,0 1,-8.62 -4.63,3.71 3.71,0 0,0 -3.8,-0.75A35.6,35.6 0,0 1,120.94 234c-0.65,-0.81 -1.12,-1.83 -2.35,-1.93 -0.34,-0.6 0.06,-1 0.35,-1.48 2.68,-4.56 6.84,-7.58 11.07,-10.52a30.31,30.31 0,0 0,-11 10.34c-0.38,0.31 -0.46,1 -1.2,0.84a48.07,48.07 0,0 1,-6.13 -6.06c-0.16,-1.47 1,-2.19 1.84,-3A33.92,33.92 0,0 1,125.89 215a5.74,5.74 0,0 0,1.49 -0.57c0.14,-0.09 0.21,-0.21 0.25,-0.5 -0.73,-0.5 -1.39,0 -2,0.26a32.18,32.18 0,0 0,-12.44 8.32c-0.62,0.62 -1.09,1.53 -2.18,1.49 -0.92,-1.88 -2,-3.67 -2.4,-5.77a1,1 0,0 0,-0.92 -0.84c-0.12,-1.06 0.75,-1.44 1.39,-1.92a30.85,30.85 0,0 1,15.18 -6,4.55 4.55,0 0,0 3,-1.12 24.1,24.1 0,0 0,-9 1.53,30.63 30.63,0 0,0 -8,4.31c-0.74,0.52 -1.41,1.23 -2.46,1a5.44,5.44 0,0 0,-0.51 -2.78c0.14,-8.92 4.54,-15.37 11.73,-20.19a3.39,3.39 0,0 1,2.17 -0.6c3.24,1.11 6.33,2.69 9.84,2.93a43.4,43.4 0,0 0,13.45 -0.66c7.23,-1.77 11.52,-6.83 14.93,-13 1.07,-1.91 1.35,-4.27 3.21,-5.74a11.81,11.81 0,0 1,8.08 -0.13c1,0.49 1.19,1.52 1.59,2.42 2.32,5.3 5.18,10.21 10.12,13.58A22.3,22.3 0,0 0,194 194.7c6.31,0.33 12.54,0 18.16,-3.44a2.48,2.48 0,0 1,1.1 -0.3c5.22,2 8.76,5.86 11.54,10.54a22.78,22.78 0,0 1,2.93 9c-0.83,1.76 -0.06,3.77 -0.88,5.54 -1,0.27 -1.53,-0.52 -2.17,-1a32.62,32.62 0,0 0,-15 -6.59,6.37 6.37,0 0,0 -3.09,0.06 2.76,2.76 0,0 0,2.28 0.92,32.56 32.56,0 0,1 15.69,6c0.84,0.6 1.89,1.1 1.82,2.42 -0.38,2.69 -2.11,4.86 -2.83,7.43a0.57,0.57 0,0 1,-0.6 0.06c-3.7,-4.25 -7.71,-8.1 -13,-10.39a10.47,10.47 0,0 0,-4.32 -1.21c0.7,1.15 1.62,1.13 2.37,1.39a34.24,34.24 0,0 1,12.33 7.4,11.05 11.05,0 0,1 2.4,3A0.61,0.61 0,0 1,222.69 226.15Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M120.94,234c0.68,-0.89 1.25,0 1.76,0.2a35.28,35.28 0,0 0,26.9 1.56,2.62 2.62,0 0,1 3.07,0.55 25.77,25.77 0,0 0,8.85 5.1c1.49,1.9 1.14,4.07 0.72,6.16 -1,5.07 -3.9,9.06 -7.66,12.48 -10.78,9.8 -19,21.29 -23.56,35.25A60,60 0,0 0,128.67 306a1.56,1.56 0,0 1,-0.31 0.6c-4.49,0 -9,0 -13.45,0 -1.22,0 -1.77,0.19 -1.56,1.66a12.19,12.19 0,0 1,-0.72 5.81c-1,0.67 -1.22,1.89 -2,2.74 -6.76,7.13 -17.78,4.63 -21.55,-5a16.34,16.34 0,0 1,1.25 -15.41,3.74 3.74,0 0,0 1,-2.26 16.11,16.11 0,0 0,-7.46 12.68,18.51 18.51,0 0,0 3.51,12.79c1.54,2.11 1.15,2.89 -1.49,3.53 -5.38,1.29 -11.84,-1.68 -14.83,-7 -4,-7 -3.92,-14 0.77,-20.74 0.2,-0.3 0.52,-0.57 0.34,-1.13a10.41,10.41 0,0 0,-4.55 4.05C63,305 62.94,312 66.14,319.13c0.12,0.28 0.31,0.53 0.43,0.81 0.38,0.95 1.64,1.95 0.87,2.87s-2.33,0.27 -3.45,-0.11c-6.19,-2.11 -10.32,-8 -10.74,-15.22A21,21 0,0 1,60 290.55c0.66,-0.64 1.5,-1.14 1.13,-2.28 7.6,-3.82 15.7,-4.86 24.07,-4.33a41.85,41.85 0,0 1,11.43 2.31c0.8,0.29 1.56,0.7 1.87,-0.69 2.75,-12.19 10.33,-21.51 18.26,-30.62 1.45,-1.67 2.94,-3.33 4.24,-5.13 3,-4.1 3.83,-8.44 1.09,-13.07A21.53,21.53 0,0 1,120.94 234Z"/>
+    <path android:fillColor="#664320" android:pathData="M128.35,306.28c0.1,-6.78 2.48,-13 5.18,-19 4.87,-10.93 12.24,-20 21,-28 4.21,-3.83 7.31,-8.44 7.36,-14.47a26.13,26.13 0,0 0,-0.41 -3.39c7.82,1.55 14.64,-0.35 20.35,-6a1.14,1.14 0,0 1,1.41 -0.3c5.4,2.21 11.08,2.65 16.83,2.58 -4,3.19 -8.16,6.16 -11.48,10.12 -10.33,12.31 -10.13,24.83 0.65,36.76 0.56,0.62 1.11,1.25 1.67,1.88 0.51,1.27 -0.56,1.62 -1.29,2a23.38,23.38 0,0 0,-12 15.72c-0.31,1.32 -0.69,2.31 -2.52,2.3 -15.22,-0.08 -30.44,0 -45.66,0A1.92,1.92 0,0 1,128.35 306.28Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M133.94,136.36c0.68,1.07 0,2.39 0.65,3.6 11.67,-9.86 24.5,-16.63 40.81,-15.91 -2.74,2.21 -6.15,2.94 -7.86,6.52 4.34,-1.19 8.15,-2.43 12.14,-2.91a42.16,42.16 0,0 1,12.37 0.18c-2.77,1.66 -6,2.39 -8.23,5.4 5,-0.43 9.54,-0.93 14.2,0.07 -2.42,1.68 -5.52,1.93 -7.13,4.52 -0.37,1.57 0.82,2.15 1.84,2.8a39.36,39.36 0,0 1,11.2 10.27c0.6,0.85 2,1.84 0.28,3a38.24,38.24 0,0 1,-7.33 0.21,58.72 58.72,0 0,0 -16.3,2.35c-2.65,0.74 -5.34,1.35 -8,2 -5.71,1.46 -11.29,0.52 -16.73,-1.19 -12.42,-3.92 -25,-3.95 -37.68,-1.85a19.45,19.45 0,0 1,-4.09 0.48c-2.83,-0.17 -4.46,-1.94 -5.34,-4.38 -1.42,-3.9 -0.34,-7.45 2.15,-10.52a9.92,9.92 0,0 1,9.54 -3.89,7.33 7.33,0 0,1 6.57,6.13c0.3,1.52 0.75,1.6 1.9,0.82 2.39,-1.59 4.93,-3 4.47,-6.56A1.27,1.27 0,0 1,133.94 136.36Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M192.74,286.44c6.34,-2.89 13.1,-3.57 19.92,-3.43a47.49,47.49 0,0 1,18.51 3.91c12,5.36 18.53,18.59 15,30.59a4.24,4.24 0,0 1,-0.41 0.79c-1.85,1.68 -3.47,3.58 -5.85,4.68a13.37,13.37 0,0 1,-15.42 -2.86A18.58,18.58 0,0 1,223 297a6.07,6.07 0,0 0,1.16 -2,13.15 13.15,0 0,0 -6.3,5.79c-4,7.24 -4,14.48 0.56,21.55 1.53,2.4 1.29,3 -1.53,3.62 -5.61,1.27 -12.67,-2.24 -15.74,-8 -4.19,-7.87 -3.53,-15.46 1.68,-22.68a2.68,2.68 0,0 0,0.8 -1.32,10.85 10.85,0 0,0 -5.12,3.72c-6,7.49 -6.56,15.57 -2.53,24.12 0.44,0.93 1.55,2 0.74,2.9s-2.06,0.16 -3,-0.2c-6.35,-2.34 -9.93,-7.09 -11,-13.58 -1.51,-8.89 1.4,-16.28 8.34,-22A4,4 0,0 0,192.74 286.44Z"/>
+    <path android:fillColor="#986c42" android:pathData="M192.74,286.44c1,1 0.4,1.58 -0.47,2.18 -6.31,4.32 -9.28,10.63 -9.47,18 -0.18,7.55 3.94,16.52 14,17.86a26.85,26.85 0,0 1,-3.89 -11c-0.82,-6.73 2.61,-16.22 9.64,-19.93 0.63,-0.33 1.42,-1.07 2.07,-0.31 0.79,0.92 -0.43,1.28 -0.86,1.75 -6.3,7 -6.34,18.93 0.2,25.85 3.74,4 10.35,6.43 15.21,3.54a20.53,20.53 0,0 1,-4.78 -14,19.7 19.7,0 0,1 7.72,-15.25 8,8 0,0 1,1.39 -0.8c0.6,-0.29 1.32,-0.86 1.87,-0.15s-0.39,1.16 -0.77,1.62c-5.82,7.07 -6.1,16.47 -0.18,23.36 5.29,6.16 14.14,6.54 20.15,-0.63 0.28,-0.33 0.46,-1.73 1.14,-0.22 -3.36,9.78 -13.86,13.84 -22,8.72 -0.9,-0.56 -1.39,-0.33 -2.14,0.3 -5.56,4.61 -11.88,5.27 -18.14,1.92a3,3 0,0 0,-2.75 -0.23c-8.81,3.26 -16.26,0.49 -20.9,-7.63a24.56,24.56 0,0 1,-3.37 -12.71c0,-2 -0.69,-2 -2.16,-2q-20.68,0 -41.37,0c-1.53,0 -3.06,-0.05 -4.59,-0.08a2.17,2.17 0,0 1,0 -0.36c15.24,0 30.47,0 45.71,0 1.94,0 2.65,-0.6 3,-2.39 1.54,-7.37 5.9,-12.61 12.48,-16.11 0.58,-0.31 1.33,-0.48 1.39,-1.35C191.55,286.85 192.15,286.48 192.74,286.44Z"/>
+    <path android:fillColor="#986c42" android:pathData="M61.13,288.27c0.91,0.08 2,0.13 0.78,1.35s-2.57,2.35 -3.71,3.7c-6.31,7.46 -5.79,19.42 1.19,26.1a13.15,13.15 0,0 0,7.92 3.26c-0.83,-1.65 -1.72,-3.22 -2.41,-4.88 -3,-7.23 -1.64,-17 4.74,-22.53 0.17,-0.15 0.31,-0.38 0.5,-0.47 1,-0.46 2,-2.2 3.12,-1.1s-0.73,1.73 -1.3,2.5c-5.84,7.94 -3.24,20.38 5.32,25.24a11.75,11.75 0,0 0,10.88 0.17,19.26 19.26,0 0,1 -4.9,-14.79A17.33,17.33 0,0 1,90.38 294c0.58,-0.46 1.48,-1 2.09,-0.45 0.85,0.84 -0.38,1.29 -0.76,1.8a16.25,16.25 0,0 0,1.12 21.19c5.61,5.58 13.18,5.18 18.17,-1 0.46,-0.57 0.65,-1.44 1.63,-1.42 -2.25,7.54 -7.42,11.68 -14.33,11.49A11.28,11.28 0,0 1,93 324.17c-1.15,-0.66 -1.81,-0.41 -2.77,0.42 -4.87,4.22 -10.33,5 -16.22,2.34a3.13,3.13 0,0 0,-2.78 -0.05c-8,3.25 -14.67,1.17 -19.37,-5.91A22,22 0,0 1,61.13 288.27Z"/>
+    <path android:fillColor="#986c42" android:pathData="M199.65,137.27a22.08,22.08 0,0 1,0.64 -6.38c0.74,-3.59 2.58,-5.09 6.25,-5.12 6.33,0 11.57,2.79 16.25,6.63 6.84,5.6 10.71,12.76 10,21.84 -0.37,4.69 -2.45,8.48 -6.78,10.77a1.23,1.23 0,0 1,-1.72 -0.48c-0.65,-1.44 -0.35,-3 -0.4,-4.48 -0.08,-2.82 -0.29,-3.1 -3.14,-3.71a1.78,1.78 0,0 1,-1.35 -0.71c0,-0.36 0.18,-0.54 0.48,-0.68 4.41,-2 5.91,-5.43 4.31,-9.91a9.85,9.85 0,0 0,-10.05 -6.76,6.46 6.46,0 0,0 -6,5.68c-0.18,0.92 0,2.07 -1.22,2.47a13.88,13.88 0,0 1,-6.8 -3.92C198.75,141.17 199.44,139.07 199.65,137.27Z"/>
+    <path android:fillColor="#986c42" android:pathData="M133.94,136.36c1.11,5.19 -2.72,7 -6.17,9.19 -0.62,0.39 -1.2,0.64 -1.21,-0.41 0,-4.5 -2.35,-6.87 -6.69,-7.48 -3.67,-0.51 -7.84,1.86 -9.89,5.66 -2.35,4.33 -1.39,9.58 2.15,11.58a6.21,6.21 0,0 0,1.5 0.45c-0.21,1.19 -1.25,0.94 -2,1.05a2.56,2.56 0,0 0,-2.42 2.8c-0.1,2.06 0.2,4.12 -0.08,6.17a0.68,0.68 0,0 1,-1 0c-6.24,-3.69 -8.6,-9.63 -7,-17.6 2.36,-11.54 14.52,-22.08 25.47,-22.06 4.21,0 6,1.5 6.78,5.59A21.66,21.66 0,0 1,133.94 136.36Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M108.12,165.42H109c2.53,0.55 3.28,2.56 3.74,4.7 0.91,4.19 1.86,8.37 2.81,12.55a13.51,13.51 0,0 0,4.45 7.81,2.1 2.1,0 0,1 1,1.47c-5.82,2.65 -9.51,7.24 -12,13 -1,2.4 -0.9,5 -1.85,7.44a49.53,49.53 0,0 1,-5.8 -22,46.1 46.1,0 0,1 5.85,-22.88C107.6,166.84 108.16,166.25 108.12,165.42Z"/>
+    <path android:fillColor="#986c42" android:pathData="M224.52,164.51l1.49,0.5c-1.14,0.91 -0.13,1.61 0.27,2.32a46.72,46.72 0,0 1,6.33 23.59,46 46,0 0,1 -4.9,19.58c-0.59,-0.07 -0.71,-0.53 -0.77,-1 -1.19,-8.12 -6,-13.62 -12.74,-17.76 -0.26,-0.16 -0.49,-0.35 -0.73,-0.53 -0.05,-0.15 -0.12,-0.34 0,-0.43 4.19,-4.38 4.56,-10.2 5.89,-15.65 0.4,-1.63 0.76,-3.28 1,-4.93A7.93,7.93 0,0 1,224.52 164.51Z"/>
+    <path android:fillColor="#986c42" android:pathData="M199.65,137.27c0.17,1.83 -0.66,4.12 1.21,5.28s3.83,2.91 6.2,3.55c3.38,1.78 6,4.54 8.84,7 0.55,0.48 1.64,1.22 0.33,2.14 -3.89,-0.18 -7.84,0 -11.48,-1.8 -2.23,-4.49 -5.88,-7.68 -9.79,-10.61 -1.35,-1 -2.82,-1.83 -4.16,-2.83 -0.93,-0.69 -1.38,-1.51 0.09,-2.17 2.3,1 4.63,2 6.87,3.1 1.29,0.66 1.73,0.56 1.66,-1A4.68,4.68 0,0 1,199.65 137.27Z"/>
+    <path android:fillColor="#694522" android:pathData="M226.4,217.82c-4.79,-4.63 -10.64,-6.9 -17.14,-7.75a15.11,15.11 0,0 0,-2.5 -0.24c-1.19,0 -1.09,-0.69 -1.11,-1.49 0,-1.21 0.78,-0.81 1.4,-0.77 7.59,0.48 14.07,3.58 19.77,8.48 2.2,2.5 4.7,4.8 5.75,8.15C230.52,222.05 228.85,219.56 226.4,217.82Z"/>
+    <path android:fillColor="#684522" android:pathData="M107.71,215.18c5.89,-4.54 12.37,-7.51 20,-7.65 1,2.34 -0.63,2.34 -2.2,2.47a29.5,29.5 0,0 0,-17.84 7.38,30.52 30.52,0 0,0 -6,6.48c-0.43,0.06 -0.71,0 -0.48,-0.54C102.69,220.09 105.29,217.7 107.71,215.18Z"/>
+    <path android:fillColor="#694623" android:pathData="M111,224c4.36,-4.94 9.39,-8.91 15.82,-10.82 0.58,-0.17 1.24,-0.82 1.74,0.18 0.65,1.28 -0.12,1.52 -1.14,1.79a31.31,31.31 0,0 0,-13.11 7.17,11.62 11.62,0 0,0 -2.59,2.87l-1.74,1.91c-0.44,0.06 -0.67,-0.08 -0.51,-0.57Z"/>
+    <path android:fillColor="#7c5b3c" android:pathData="M223.19,225.17l0.38,0.08c0.49,1.2 1.66,2.08 1.8,3.74 -1.46,-0.66 -1.67,-2.13 -2.68,-2.84 0,-0.14 0,-0.29 0,-0.43A0.64,0.64 0,0 1,223.19 225.17Z"/>
+    <path android:fillColor="#7f5f40" android:pathData="M109.43,226.52l0.51,0.57a3.44,3.44 0,0 1,-1.57 1.9C108.14,227.82 108.83,227.19 109.43,226.52Z"/>
+    <path android:fillColor="#866646" android:pathData="M119.16,230.78l-0.57,1.28c-0.75,0.19 -0.87,-0.21 -0.78,-0.82l0.87,-1A0.58,0.58 0,0 1,119.16 230.78Z"/>
+    <path android:fillColor="#816143" android:pathData="M101.16,223.32l0.48,0.54c-0.16,0.47 -0.42,1.18 -0.93,0.8S100.7,223.68 101.16,223.32Z"/>
+    <path android:fillColor="#761121" android:pathData="M204.75,153.44l11.93,1.42a2.41,2.41 0,0 1,2.77 0.5c0.06,0 0.11,0.12 0.18,0.13 4.91,1.23 4.91,1.23 4.9,6.5 0,0.84 0,1.68 0,2.52a0.49,0.49 0,0 1,-0.08 0.21c-4.6,4 -4,9.89 -5.43,15 -1.16,4.19 -1.8,8.57 -5.54,11.48 -7.17,4.38 -15,4.87 -23,3.63 -8.91,-1.38 -14.08,-7.37 -17.82,-15 -0.7,-1.43 -1.29,-2.92 -1.92,-4.38 -1,-0.77 -1.07,-2 -1.41,-3a2.73,2.73 0,0 0,-2.86 -2.16,2.55 2.55,0 0,0 -2.55,2.2 5.41,5.41 0,0 1,-1.45 3.05c-1.32,2.74 -2.47,5.56 -4.05,8.19 -4.1,6.87 -10.07,10.78 -18,11.48 -6.7,0.58 -13.31,0.21 -19.36,-3.27a12.1,12.1 0,0 1,-5.71 -7.91c-0.91,-4.26 -2.11,-8.45 -2.89,-12.72 -0.46,-2.46 -1.27,-4.51 -3.41,-5.9 -0.82,-2.46 -0.4,-5 -0.32,-7.49 0,-1.31 1.14,-2.07 2.55,-2.17 0.81,-0.06 1.69,0.22 2.41,-0.41 4,-0.49 8,-1 12,-1.47A69.6,69.6 0,0 1,154 156.15c5.74,1.71 11.54,3.18 17.57,1.88 4.32,-0.93 8.59,-2.13 12.88,-3.21C191.14,153.14 198,153.37 204.75,153.44Z"/>
+    <path android:fillColor="#010101" android:pathData="M166.25,220.73c-0.22,-1.51 -0.46,-3 -0.64,-4.54a6.81,6.81 0,0 0,-4.8 -6.06,11 11,0 0,1 -7.42,-9.08 9.59,9.59 0,0 1,1 -6.22,27 27,0 0,1 8.44,-9.8c2.88,-2 5.06,-2.09 7.74,0.12 3.95,3.28 7.71,6.83 8.95,12.12 1.08,4.65 -0.73,10 -5,11.73 -5.69,2.3 -6.82,6.62 -7.15,11.78C167,221.32 166.59,221.44 166.25,220.73Z"/>
+    <path android:fillColor="#9c3821" android:pathData="M166.25,220.73a1,1 0,0 0,1.12 0.05,22.56 22.56,0 0,0 6,8.26c0.83,0.74 0.83,1.12 -0.14,1.8a11.21,11.21 0,0 1,-12.26 0.4c-1.11,-0.68 -1.54,-1.13 -0.32,-2.26A21.78,21.78 0,0 0,166.25 220.73Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M162.43,175.55c0.34,-1.24 0.66,-2.49 1,-3.72a3.32,3.32 0,0 1,6.23 0c0.36,1.23 0.69,2.47 1,3.71A19.38,19.38 0,0 0,162.43 175.55Z"/>
+    <path android:fillColor="#694623" android:pathData="M223.19,225.17l-0.51,0.55c-4.55,-5.17 -10,-9 -16.75,-10.64 -0.68,-0.17 -1.36,-0.31 -1,-1.35 0.29,-0.86 0.68,-1 1.52,-0.72A31.14,31.14 0,0 1,223.19 225.17Z"/>
+    <path android:fillColor="#6b4925" android:pathData="M119.16,230.78l-0.48,-0.5a29.84,29.84 0,0 1,10.46 -10.6c0.45,-0.29 1,-1.16 1.65,-0.14s-0.26,1.26 -0.83,1.57A33.48,33.48 0,0 0,119.16 230.78Z"/>
+    <path android:fillColor="#6b4925" android:pathData="M213.47,229.4A35,35 0,0 0,203.36 221c-0.49,-0.27 -1.17,-0.42 -0.66,-1.32s1,-0.49 1.49,-0.17a29.18,29.18 0,0 1,9.78 9.42C214.15,229.4 213.92,229.5 213.47,229.4Z"/>
+    <path android:fillColor="#714f2c" android:pathData="M213.47,229.4l0.5,-0.51a2.56,2.56 0,0 1,0.93 1.37c0.22,0.51 -0.05,0.58 -0.47,0.51Z"/>
+    <path android:fillColor="#7f5f3b" android:pathData="M214.43,230.77l0.47,-0.51c0.38,0.42 1.07,1 0.52,1.42S214.64,231.24 214.43,230.77Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M219.45,155.36a6,6 0,0 1,-2.77 -0.5c-2.4,-3 -5.54,-5.14 -8.51,-7.49 -0.46,-0.36 -1.17,-0.47 -1.11,-1.27 0.83,-0.82 0.3,-1.9 0.52,-2.84 1,-4.39 5.56,-6.75 10.28,-5.29a11,11 0,0 1,7.07 13.15C224.08,154 222.46,155.21 219.45,155.36Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M126.63,189.23a12.16,12.16 0,0 1,-7.63 -8,32.29 32.29,0 0,1 -1.22,-16.08 6.32,6.32 0,0 1,5 -5.32,46.25 46.25,0 0,1 28.13,1.42c5.76,2.2 7.26,4.39 6.36,10.4a20.18,20.18 0,0 1,-3.21 9,31.61 31.61,0 0,0 -5.46,6.68 2.83,2.83 0,0 1,-1.74 1.18,13.73 13.73,0 0,1 -3.2,-0.18 31.91,31.91 0,0 0,-13.44 0.5A23.24,23.24 0,0 1,126.63 189.23Z"/>
+    <path android:fillColor="#b6885e" android:pathData="M178.15,178.87a21.25,21.25 0,0 1,-2.45 -11.27c0.13,-2.61 1.79,-4.18 3.92,-5.24 4.35,-2.16 9.06,-3.05 13.81,-3.89 5.12,-0.91 10,0.25 15,1 2.1,2.21 2.31,5.13 2.72,7.87a35.84,35.84 0,0 1,-1.79 18.25,8.21 8.21,0 0,1 -1.73,2.93l-0.54,0.34a4,4 0,0 1,-0.92 0,49.56 49.56,0 0,0 -19.34,0l-1,-0.47C183.8,184.79 180.57,182.16 178.15,178.87Z"/>
+    <path android:fillColor="#986c42" android:pathData="M207.6,188.55c1.86,-4.77 3.35,-9.63 3.33,-14.81a34.63,34.63 0,0 0,-1.55 -11.2c-0.35,-1 -0.66,-2 -1,-3 4.84,0.56 7,2.8 7.35,8a34.62,34.62 0,0 1,-1.8 14.2A11.59,11.59 0,0 1,207.6 188.55Z"/>
+    <path android:fillColor="#ffeac1" android:pathData="M186.8,188.86c5.18,-2.07 10.53,-2 15.9,-1.13a10.8,10.8 0,0 1,4.36 1.16C200.3,191.61 193.55,192 186.8,188.86Z"/>
+    <path android:fillColor="#ffeac1" android:pathData="M126.63,189.23a31.81,31.81 0,0 1,20.26 -0.76c-4.82,3.1 -10.13,2.72 -15.44,2.08A16,16 0,0 1,126.63 189.23Z"/>
+    <path android:fillColor="#f8e1bb" android:pathData="M178.15,178.87c3.12,2.72 6.31,5.39 7.7,9.52A20,20 0,0 1,178.15 178.87Z"/>
+    <path android:fillColor="#f6deb8" android:pathData="M148.63,187.29a10.26,10.26 0,0 1,5.46 -6.68A16.09,16.09 0,0 1,148.63 187.29Z"/>
+    <path android:fillColor="#020201" android:pathData="M151.72,176.36a9.37,9.37 0,1 1,-9.52 -9.44A9.47,9.47 0,0 1,151.72 176.36Z"/>
+    <path android:fillColor="#020201" android:pathData="M200.57,176.28a9.44,9.44 0,0 1,-9.33 9.37,9.37 9.37,0 1,1 0,-18.73A9.37,9.37 0,0 1,200.57 176.28Z"/>
+    <path android:fillColor="#fbfbfb" android:pathData="M142.31,170.49a3.45,3.45 0,0 1,3.43 3.27,3.5 3.5,0 0,1 -3.34,3.37 3.33,3.33 0,0 1,-3.39 -3.27A3.38,3.38 0,0 1,142.31 170.49Z"/>
+    <path android:fillColor="#fcfcfc" android:pathData="M191.33,177.14a3.28,3.28 0,0 1,-3.37 -3.26,3.22 3.22,0 0,1 3.23,-3.39 3.45,3.45 0,0 1,3.42 3.25A3.39,3.39 0,0 1,191.33 177.14Z"/>
+    <path android:fillColor="#f8f7f3" android:pathData="M242.51,291.22c3.25,-1.53 2.66,-4.76 3.06,-7.42a48.83,48.83 0,0 0,0.07 -7.16c1.28,-0.84 2.43,0 3.53,0.38q25.08,9.41 50.18,18.75c4.17,1.56 8.38,3 12.52,4.58 1.35,0.52 2.69,1.06 2.87,2.8 0.35,3.88 -0.52,7.65 -1.1,11.45a2.33,2.33 0,0 1,-1.76 2.07c-1.77,0.23 -3.31,-0.58 -4.87,-1.17q-30.39,-11.43 -60.75,-22.93A17.86,17.86 0,0 1,242.51 291.22Z"/>
+    <path android:fillColor="#f8f7f3" android:pathData="M285.18,376.08c-6.28,-5.91 -12.58,-11.78 -18.82,-17.72q-14.49,-13.78 -28.92,-27.63a14.27,14.27 0,0 0,1.26 -10.8c2.72,0.71 3.64,2 3.29,4.49 0.18,1.59 1.43,2 2.67,2.41 0.89,0.31 1.74,0.7 2.61,1.05 3,1.2 4.93,3.72 7.19,5.77q8,7.23 15.86,14.6c4.78,4.5 9.81,8.72 14.44,13.38a6.64,6.64 0,0 1,2.06 2.74,21 21,0 0,1 0.11,8.89C286.68,374.37 286.89,375.85 285.18,376.08Z"/>
+    <path android:fillColor="#9e5f75" android:pathData="M238.13,315.74c-0.63,-0.62 -1.25,-1.24 -1.88,-1.84a1.77,1.77 0,0 1,-0.55 -2.35c0.68,-1.08 1.59,-0.92 2.47,-0.2 3,1.83 6.18,3.54 7.56,7.13a4.18,4.18 0,0 1,-0.34 2.39c-1.11,1 -2,0.11 -2.78,-0.44A16,16 0,0 1,238.13 315.74Z"/>
+    <path android:fillColor="#b27787" android:pathData="M245.19,318.44c-1.5,-3.19 -4.86,-4.54 -7,-7.09l5.33,-0.59c1.41,-0.24 1.68,0.85 2.1,1.78C246.88,315.08 246.77,316.73 245.19,318.44Z"/>
+    <path android:fillColor="#ebe9e4" android:pathData="M238.13,315.74c1.57,1.36 3.1,2.76 4.71,4.07 0.62,0.5 1.09,1.49 2.18,1 0.58,0.94 -0.19,1.61 -0.46,2.38a2.28,2.28 0,0 0,-2.57 1.22c0,-2.28 -1.82,-3.27 -3.29,-4.49C239,318.47 238.24,317.15 238.13,315.74Z"/>
+    <path android:fillColor="#f0f0ea" android:pathData="M314.07,302.83h0.53c1.46,2.56 0.74,5.31 0.57,8a26.25,26.25 0,0 1,-1 5.44,2.22 2.22,0 0,1 -2.83,0c2.93,-0.57 1.67,-3.2 2.08,-4.79A26.38,26.38 0,0 0,314.07 302.83Z"/>
+    <path android:fillColor="#f9f9f6" android:pathData="M244.56,323.2c-0.73,-1 0.44,-1.56 0.46,-2.38s0.12,-1.59 0.17,-2.38c0.82,-1.92 0.23,-3.94 0.41,-5.9 0,-1.83 0.88,-1.71 2.23,-1.24 4.78,1.66 9.59,3.21 14.39,4.83q24.7,8.31 49.41,16.62c6.55,2.2 13.12,4.34 19.66,6.55a26.35,26.35 0,0 1,3.08 1.48c1.26,4.36 0.39,8.43 -1.59,12.37a1.67,1.67 0,0 1,-1.7 0.23q-42.66,-14.85 -85.34,-29.62A12.73,12.73 0,0 1,244.56 323.2Z"/>
+    <path android:fillColor="#edece5" android:pathData="M333.3,356.85c-3.19,0.51 -6.37,1.11 -9.57,1.53 -8.31,1.1 -16.61,2.24 -24.88,3.63 -4,0.68 -8.06,0.95 -12,1.76q-0.27,0.41 -0.54,0c-3,-2.26 -5.43,-5 -8.2,-7.52 -8.05,-7.18 -15.77,-14.73 -23.77,-21.95 -2.36,-2.13 -4.62,-4.35 -7,-6.42a34.9,34.9 0,0 1,7.86 2.8c4.72,2.92 8.46,7 12.53,10.67 4.75,4.27 9.69,8.35 14.14,12.94 2.22,2.3 4.72,2.69 7.74,2.21 8.94,-1.41 17.92,-2.53 26.9,-3.64a10.73,10.73 0,0 1,3.44 0.07c3.35,1.12 6.71,2.22 10.07,3.35A7,7 0,0 0,333.3 356.85Z"/>
+    <path android:fillColor="#b17586" android:pathData="M262.74,333.25c7.38,2.5 14.77,5 22.14,7.51 9.21,3.18 18.41,6.43 27.61,9.64 -0.08,1.32 -1.21,1.15 -2,1.27 -7.47,1.18 -15,2.13 -22.46,3.11a5.38,5.38 0,0 1,-4.4 -1.44c-6.62,-5.67 -12.9,-11.72 -19.48,-17.44C263.4,335.23 262.43,334.55 262.74,333.25Z"/>
+    <path android:fillColor="#9d5d74" android:pathData="M262.74,333.25c2.27,3.13 5.54,5.23 8.26,7.89 4.18,4.09 8.77,7.76 13.09,11.7a4.14,4.14 0,0 0,3.58 1.3l24.42,-3.4c0.14,0 0.26,-0.22 0.4,-0.34l7.39,2.53c-11.28,1.55 -22.55,3.08 -33.82,4.66a2.13,2.13 0,0 1,-2 -0.45l-29,-26.46A33.62,33.62 0,0 1,262.74 333.25Z"/>
+    <path android:fillColor="#f0f0eb" android:pathData="M334.91,340.78a33.6,33.6 0,0 1,-0.92 9.94,1.5 1.5,0 0,0 0.5,1.89 1.82,1.82 0,0 1,-1.71 0.53c0.78,-4.08 1.68,-8.15 1.6,-12.36Z"/>
+    <path android:fillColor="#f0efea" android:pathData="M286.27,363.77h0.54a22.64,22.64 0,0 1,0 10.26c-0.44,1.64 0.14,2.3 1.79,2.1 -1.15,0.44 -2.3,1 -3.42,-0.05a14.77,14.77 0,0 0,1.34 -8.63C286.4,366.23 286.35,365 286.27,363.77Z"/>
+    <path android:fillColor="#9d5d74" android:pathData="M360,348.37v-2c-0.92,0.42 -1.82,0.87 -2.71,1.37A3.05,3.05 0,0 0,360 348.37Z"/>
+    <path android:fillColor="#9d5d74" android:pathData="M360,363.7l-71.06,11.78c-1.11,0.26 -2.21,0.71 -3.34,0.09 -2.78,-2.22 -5.33,-4.73 -7.87,-7.2 -9.13,-8.87 -18.52,-17.46 -27.56,-26.42 -3.48,-3.45 -7.37,-6.45 -10.68,-10.07a3.1,3.1 0,0 0,-2.05 -1.15c-2.59,0.94 -2.72,1.72 -0.5,3.84q23.26,22.21 46.53,44.45a3.4,3.4 0,0 0,3.33 0.88c24.39,-4.07 48.77,-8.24 73.2,-12.08Z"/>
+    <path android:fillColor="#849d6d" android:pathData="M360,278.21q-24.25,-8.43 -48.54,-16.79a8.07,8.07 0,0 0,-3.88 -0.46c-10,1.37 -19.94,2.61 -29.9,3.94q-17.43,2.33 -34.86,4.72c1.11,1.46 2.87,1.73 4.42,2.29 21.16,7.73 42.27,15.55 63.45,23.21a9.18,9.18 0,0 0,5.46 0.35c14.64,-3.4 29.19,-7.2 43.85,-10.52Z"/>
+    <path android:fillColor="#edece5" android:pathData="M360,347.59c-0.9,0.08 -1.8,0.13 -2.71,0.14a250.23,250.23 0,0 0,-23.66 9c1.13,-0.15 2.27,-0.29 3.39,-0.46 7.15,-1 14.28,-2.17 21.43,-3.08L360,353Z"/>
+    <path android:fillColor="#edece5" android:pathData="M360,324q-12.4,5.1 -24.79,10.24a6.82,6.82 0,0 1,-5.12 0.22q-21.91,-7.2 -43.89,-14.25 -21.06,-6.78 -42.15,-13.51c1.24,1.57 1.91,3.05 -0.55,4.11 0.65,0.76 1.06,1.82 2.33,1.75 1.31,-0.91 2.56,-0.26 3.82,0.15 21.47,7.08 42.82,14.49 64.27,21.65 6.74,2.25 13.6,4.2 20.22,6.83a2.32,2.32 0,0 0,0.83 0q12.5,-5.42 25,-10.76Z"/>
+    <path android:fillColor="#f9f9f6" android:pathData="M359.41,329.84c-3.44,1.46 -6.88,2.94 -10.29,4.44 -4.77,2.1 -9.8,3.63 -14.21,6.5 -0.46,3.47 -0.47,7 -1.33,10.42 -0.16,0.66 -0.21,1.47 0.91,1.41a4,4 0,0 0,0.78 -0.14l24.14,-9.37Z"/>
+    <path android:fillColor="#f8f7f3" android:pathData="M360,352.24c-8.81,1.35 -17.77,1.85 -26.37,4.5a0.23,0.23 0,0 0,-0.33 0.11c-1.84,0.77 -3.66,-0.3 -5.53,0 -12.57,1.94 -25.19,3.66 -37.78,5.52 -1.22,0.18 -2.52,0.25 -3.33,1.42 0.24,3.49 0.74,7 -0.2,10.45 -0.63,2.34 0.45,2.36 2.14,1.9 0.88,-0.07 1.78,-0.09 2.65,-0.23L360,364.48Z"/>
+    <path android:fillColor="#f8f7f3" android:pathData="M360,290.93l-13.23,3.24c-9.28,2.26 -18.57,4.47 -27.83,6.81 -1.5,0.38 -3.43,0 -4.34,1.85 0,3.95 0.31,7.92 -1,11.77a1.33,1.33 0,0 0,0.5 1.64q22.94,-5.57 45.87,-11.1Z"/>
+    <path android:fillColor="#7a986d" android:pathData="M360,304.44q-22.85,5.49 -45.63,11.2c-1,0.18 -1.89,1.2 -3.07,0.59 -0.5,-0.15 -1,-0.27 -1.52,-0.45l-63.68,-24c-1.16,-0.44 -2.29,-1 -3.59,-0.54 -1,1.91 0.09,2.62 1.71,3.28 4.63,1.9 9.52,3.13 13.9,5.62 1.69,0.54 3.41,1 5.06,1.61q23.18,8.73 46.32,17.51a9.1,9.1 0,0 0,5.7 0.29c14.92,-3.69 29.86,-7.29 44.8,-10.91Z"/>
+    <path android:fillColor="#7a986d" android:pathData="M244.63,273.31a4.77,4.77 0,0 0,2.48 1.48c5.13,2 10.34,3.83 15.5,5.77 15.9,6 31.88,11.73 47.75,17.78a9.35,9.35 0,0 0,5.73 0.34c14.64,-3.52 29.26,-7.07 43.91,-10.54v-4c-13.56,3.31 -27.12,6.62 -40.7,9.83 -2.19,0.51 -4.46,1.87 -6.71,1.07 -11.45,-4.07 -22.84,-8.33 -34.26,-12.5q-17.74,-6.49 -35.51,-12.94C240.09,272.48 243.74,272.22 244.63,273.31Z"/>
+    <path android:fillColor="#edece5" android:pathData="M360,287.36q-22,5.28 -43.94,10.61a8.65,8.65 0,0 1,-5.41 -0.3q-18.58,-7 -37.24,-13.85c-9.58,-3.53 -19.19,-7 -28.78,-10.51 0.34,1.11 0.68,2.22 1,3.33a4.08,4.08 0,0 1,0.79 0.14q32,11.87 64,23.79c1.26,0.48 3.16,0.33 3.61,2.26a0.89,0.89 0,0 0,0.82 0.14,22.91 22.91,0 0,1 3,-1c14,-3.39 28,-6.89 42.08,-10.26Z"/>
+    <path android:fillColor="#4b6082" android:pathData="M360,307.83q-21.42,5.12 -42.76,10.49a15.49,15.49 0,0 1,-9.86 -0.61q-22.56,-8.7 -45.21,-17.13c-1.27,-0.47 -2.58,-1.38 -4.05,-0.46 -1.05,1 -2.44,0.85 -3.71,1.1 -3.79,0.74 -7.59,1.44 -11.39,2.15 1.13,1 2.64,1 4,1.42 26.41,8.82 52.95,17.27 79.35,26.13 1.09,0.37 2.21,0.68 3.32,1a8.08,8.08 0,0 0,5.72 -0.38q12.14,-5.22 24.4,-10.12l0.22,-0.09Z"/>
+    <path android:fillColor="#435673" android:pathData="M360,342.15 L334.48,352a7.12,7.12 0,0 1,-1.94 0.45,6 6,0 0,1 -2.88,-0.4c-10.23,-3.67 -20.53,-7.11 -30.8,-10.67 -18.1,-6.26 -36.16,-12.6 -54.31,-18.7a2.57,2.57 0,0 0,-2.9 1.47c-0.28,1.67 0.9,2.34 2.09,2.95a31.65,31.65 0,0 0,3.45 1.28c2.71,0.75 5.31,1.86 7.95,2.82s5.15,1.63 7.67,2.58c9.48,3.35 19,6.53 28.5,9.87 7,2.46 14,4.62 20.92,7.29 2.58,0.89 5.21,1.64 7.76,2.61 2.26,0.78 4.55,1.46 6.78,2.32 2.06,0.79 4.08,1.77 6.39,1.51a3.71,3.71 0,0 0,0.81 -0.21c7.8,-3.06 15.54,-6.26 23.46,-9 0.85,-0.41 1.7,-0.78 2.57,-1.14Z"/>
+    <path android:fillColor="#435673" android:pathData="M244.05,306.65a16.61,16.61 0,0 0,4.32 2c3.72,1.2 7.48,2.32 11.19,3.54 22.88,7.58 45.91,14.72 68.75,22.42a11,11 0,0 0,8.26 -0.25q11.7,-4.89 23.43,-9.71v-4.14c-7.68,3.16 -15.35,6.34 -23,9.63a12.67,12.67 0,0 1,-9.7 0.38c-10.77,-3.63 -21.58,-7.11 -32.37,-10.67q-23.9,-7.86 -47.78,-15.76a10.19,10.19 0,0 0,-4.15 -0.76C241,305.22 242.61,305.9 244.05,306.65Z"/>
+</vector>
Index: app/src/main/res/drawable/ic_onboarding_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_onboarding_3.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_onboarding_3.xml	(date 1584626399000)
@@ -0,0 +1,63 @@
+<vector android:height="24dp" android:viewportHeight="412"
+    android:viewportWidth="360" android:width="24dp"
+    xmlns:aapt="http://schemas.android.com/aapt" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:pathData="M126.7,179c-32.3,-11 -69.4,0.4 -104.8,11.8c-7.4,2.4 -14.7,4.7 -21.9,6.9V0h360v232.9c-12.1,8.4 -28.4,16.2 -50.2,22.6c-13.4,3.9 -25.3,5.6 -36,5.6C209.9,261.1 188,199.8 126.7,179z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="131" android:endY="6.984533"
+                android:startX="270.68" android:startY="268.8547" android:type="linear">
+                <item android:color="#99395FD0" android:offset="0"/>
+                <item android:color="#1A2D4A9D" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:pathData="M104.1,193.5c-35,-0.4 -55.5,29.5 -74.3,59.3C20,268.3 10.7,283.8 0,295V0h360v265.1c-14.1,20.5 -32.2,36.6 -55.4,43.4c-7.6,2.3 -15.4,3.4 -23.3,3.5C205.2,312 173.9,194.3 104.1,193.5z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="120.236" android:endY="11.594069"
+                android:startX="272.516" android:startY="357.86423" android:type="linear">
+                <item android:color="#66395FD0" android:offset="0"/>
+                <item android:color="#CC2D4A9D" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:fillColor="#010101" android:pathData="M94.9,178.9C81,164 81.8,143.1 97,128c9.2,-9.2 20.2,-15.2 33.3,-17c0.7,-0.1 1.3,-0.3 1.4,-1h20.9c10.7,2.2 21,7.5 32.5,3.6c-0.2,3.1 -3,3.1 -3.9,5.3c5.2,0.5 10.1,0.6 15.7,-1.6c-0.3,0.8 -0.7,1.5 -1.2,2.2c-2.3,2.1 -6,3.8 -6.4,6.2c-0.3,1.9 3.6,4.3 5.2,6.8c4.8,7.1 9,14.4 10.1,23.3c0.9,5.6 -0.3,11.3 -3.3,16c-1,1.4 -1.6,3.1 -3.5,3.7c-3.1,0.4 -3.3,-2 -3.9,-4c-3.2,-10.8 -10,-18.8 -19.5,-24.6c-2.2,-1.3 -3.8,-2 -3.9,1.8c-0.2,5.6 -3.7,8.9 -8.7,10.8c-5.2,2 -10.6,1.9 -16.1,1.4c-4.7,-0.8 -9.3,-2.3 -13.9,-3.6c-6.9,-2 -12.6,-0.1 -17.8,4.6c-1.3,1.2 -2.3,3.9 -4.7,2.5c-2.4,-1.4 -1.3,-3.8 -1.1,-5.9c0.3,-1.2 0.3,-2.4 0.1,-3.7c-6.6,5.3 -8,13 -10.6,20.2C97,176.4 97.3,178.8 94.9,178.9z"/>
+    <path android:fillColor="#EFE6E6" android:pathData="M273.9,245.3c-6.7,7.3 -5.7,15.9 -4.2,24.6c0.5,2.6 -1.7,4.1 -2.6,6.2l-0.3,0.7c-1,1.2 -2.5,1.7 -4,1.5c-6.7,-0.9 -13.4,-0.3 -19.9,1.7c-1.1,0.5 -2.3,0.5 -3.4,0c-8.1,-4.3 -16.7,-1.4 -25,-1.5c-5.6,0 -11.1,2.8 -16.8,0.2c-1.4,-0.6 -3.2,0.3 -4.8,0.9c-2.8,1 -5.5,1.1 -8,-0.8c-1.4,-1.2 -2.4,-2.7 -3.1,-4.4c-1.8,-4.3 -1.3,-5.7 3.1,-8.2c14,-1 28.1,-0.4 42.1,-0.3c11.4,0 22.8,-0.3 34.2,-0.1c3.9,0.1 4.6,-2.6 4.9,-5.5c0.3,-2.9 1.6,-6.5 -2.7,-8c-2.2,-0.8 -4.5,-2 -6.7,-1.3c-5.3,1.5 -10.8,1.3 -16,-0.4c-6.9,-2 -14.1,1 -21.1,-1c-2.1,-0.6 -4,1.1 -5.8,2.3c-2.5,1.7 -5.4,2.2 -8,0.7c-6.1,-3.4 -12.7,-2.4 -19.2,-2.2c-6.7,-0.1 -8.8,-2.1 -8.6,-7.9c0.5,-0.7 1.4,-1 2.2,-0.7c6.2,3.7 13.2,2 19.8,2.9c1.1,0.2 2.6,-0.3 3.4,0.5c4.2,4 8.2,2.5 12.4,-0.1c1.3,-0.8 2.8,-1.1 4.3,-0.9c8.6,1.2 17.6,-1.2 26,2.1c1.2,0.5 2.6,0.6 3.9,0.2c4.4,-1.7 9.2,-1.6 13.6,0.3c2.3,1 3.7,-0.5 5.1,-2s2.5,-3.8 5.2,-2.4L273.9,245.3z"/>
+    <path android:fillColor="#F1E9E8" android:pathData="M273.9,242.3c-2.6,0.1 -3.3,2.3 -4.6,4c-1.7,2.2 -3.2,3.7 -6.5,1.7c-3.1,-2 -7.1,-2.3 -10.4,-0.7c-5.5,2.6 -10.4,-1.9 -15.9,-1.5c-6.6,0.6 -13.3,-0.6 -19.9,0.4c-0.3,0.1 -0.8,0 -1,0.1c-4.2,3.8 -7.7,4.1 -12.6,0.2c-2.7,-2.1 -7.9,-0.9 -11.9,-0.9c-4.7,-0.1 -8.8,-0.5 -12.4,-3.3c-2.4,-3.4 -0.9,-6.4 1.3,-8.9c2.2,-2.5 5.2,-2.4 8.2,-1.1c1.2,0.5 2.3,1.4 3.7,1.1c1.2,-0.2 2.4,-0.6 3.6,-0.1l2.4,-0.1c3.3,0.5 6.6,-1 8.5,-3.8c1.3,1 2.4,2.3 4.3,2c0.4,0.6 0.5,1.2 0.4,1.9c-0.1,2 0.2,3.8 2.4,4.2c2.1,0.4 2.9,-1.2 3.6,-2.7c0.3,-0.6 0.7,-1.1 1.2,-1.5c1.2,0.8 1.8,5.1 4.1,0.8c1.4,-1.3 3.3,-2 5.3,-1.8c1.7,0.1 2.6,-0.8 3.5,-2c2.1,1.1 0.1,4 2.2,5c0.4,0.3 0.8,0.6 1.1,1c1.2,1.6 2.3,3.7 4.7,2.6s1.4,-3.3 0.9,-5.2c-0.1,-0.5 -0.1,-1 0.2,-1.4c2.8,1.7 4.8,0.9 6.2,-1.9c2.9,1.3 6.8,0.1 8.6,3.8c3.5,-0.4 6.9,-1 10.3,-1.8c4.6,-1.2 6.2,3.3 8.8,5.8L273.9,242.3z"/>
+    <path android:fillColor="#B44A44" android:pathData="M192.5,234.5c-0.9,0.8 -1.9,1.6 -3,0.5c-2.3,-2.2 -4.7,-3.6 -7.7,-1.6c-3.4,2.1 -3.8,5.4 -3.3,8.9c0.1,4.9 2.6,7.3 7.5,7.3c-0.7,5.9 1.1,12 -1.6,17.6c-3.6,3.3 -3.5,4.6 0.9,10.8c1.1,5 2.1,10.1 0.9,15.2c-2.8,2.7 -3.4,5.5 -0.7,8.7c0.6,0.9 1,2 1.1,3.2c0.4,4.8 0.3,9.7 -0.2,14.5c-1.7,2.4 -3,5.2 -5.3,7.2l-19.6,-0.3c-0.5,-0.4 -0.8,-0.9 -1,-1.4c-0.9,-5 -0.3,-10 -0.5,-15c-0.1,-2.1 0,-4.2 0,-6.3c-2.1,-13 -0.1,-26.3 -1.9,-39.3c-0.1,-8.6 -0.2,-17.1 0,-25.7c0.1,-5.1 -1.3,-10.1 -1.1,-15.2c0.2,-6.5 0.5,-7.3 6.6,-9.2c3.8,-1.2 7.3,-4.3 11.7,-1.9c5.5,2.8 10.2,6.9 13.7,12C190.1,227.9 192.8,230.7 192.5,234.5z"/>
+    <path android:fillColor="#E5C5B0" android:pathData="M175.5,212.4c-5.8,-0.1 -10.5,3.6 -15.9,4.8c-1.8,0.4 -1.2,2.9 -1,4.4c1.1,12.5 0.9,25.1 1.1,37.6c0,1.6 0,3.3 -0.1,4.9c-3.1,-0.5 -2.5,-3.1 -2.5,-5c-0.1,-10.9 -0.1,-21.7 -1,-32.6c-0.5,-6.2 -0.2,-6.2 -6.2,-6.9c-0.8,-0.1 -1.6,-0.4 -2.3,-0.8c-2.3,-4.2 -1.8,-8.4 -0.3,-12.7c2.6,-2.4 6.4,-2.2 9.2,-3.9c2,-1.2 5.4,-1.3 4.7,-5c-1.1,-1.6 -2.2,-3.6 -4.5,-2.8c-2.2,0.7 -2.6,2.7 -2.5,4.8c0.1,1.3 0.2,2.6 -0.8,3.7c-3.4,2.1 -7.1,2 -10.8,1.8c-1.4,-0.1 -3,-0.2 -3.1,-2.3c5.5,-1.1 6,-4.7 5.8,-9.7c-0.4,-9.2 -1.6,-18.4 -1.2,-27.7c0.1,-2 -0.3,-4 1.6,-5.4c4.7,-0.6 9.5,0.4 14.2,-1c7.9,-2.5 10.8,-7.4 8.8,-15.2c11.1,1.9 24.9,17.1 26.5,28.1c0.3,2.3 1,3.2 3.2,3.2c-0.6,5 -1.2,9.9 -2.9,14.7c-0.8,2.2 -1.8,4.2 -4,5.2c-3.8,5.9 -8.7,10.9 -14.4,14.9C176.1,210.2 174.4,210.6 175.5,212.4z"/>
+    <path android:fillColor="#EDD0BF" android:pathData="M191.4,194.6c3,-4.5 4.7,-9.8 4.9,-15.2c0,-1.8 0.7,-3.5 2.1,-4.7c1,-1 2,-2 2.9,-3c-0.3,1.5 0.2,3.1 1.5,4.1c5.8,5.4 4.7,14.2 -1.9,18.6C197.6,196.5 194.5,194.7 191.4,194.6z"/>
+    <path android:fillColor="#E4473C" android:pathData="M218.2,233.4c-0.3,3.4 -1.1,6.7 -5.4,5.6c-4,-1 -3.9,-4.2 -2.3,-7.5C213.7,229.5 216.3,230.2 218.2,233.4z"/>
+    <path android:fillColor="#E4453A" android:pathData="M240.1,232.4c1.9,2.2 3.6,4.5 1,7.2c-1,1 -2.2,2.1 -3.9,1.4c-2.4,-0.8 -4,-3.1 -3.9,-5.6C234.6,232.2 237.2,232.1 240.1,232.4z"/>
+    <path android:fillColor="#E65343" android:pathData="M231.1,230.4c0.2,2.1 0.4,4.1 -2.8,3.1c-2.1,-0.6 -3.9,1.4 -6,0.7c-0.5,-2.7 0.1,-4.9 2.9,-6.1C227.9,227 229.4,228.8 231.1,230.4z"/>
+    <path android:fillColor="#E65244" android:pathData="M206.1,229.5c-1.9,5.9 -3.2,6.5 -8.5,3.8C198.7,227.5 201.1,226.4 206.1,229.5z"/>
+    <path android:fillColor="#E75E4D" android:pathData="M254.8,234.3c-2.1,-1 -4.1,-2.2 -6.5,-1.9c-1.4,0.2 -2.2,-0.4 -2,-1.9c1.5,-2.2 3.4,-3.5 6.1,-2.3C255.1,229.3 255.2,231.8 254.8,234.3z"/>
+    <path android:fillColor="#94433C" android:pathData="M192.5,234.5c-1.7,-3.2 -3.6,-6.3 -3.3,-10.1c2.8,2.4 4.3,5.8 6.1,8.9C194.4,234 193.7,234.8 192.5,234.5z"/>
+    <path android:fillColor="#B44A44" android:pathData="M102.1,227.4c3.4,-5.3 7.8,-10 12.9,-13.7c1.8,-1.7 4.5,-2.1 6.8,-1c3,1.2 6.2,2.1 9.4,2.8c3.1,0.7 5,2.3 5,5.6c0.3,17.6 -1.1,35.2 -1.6,52.9c-0.3,9.7 -1.6,19.4 -1.1,29.1c0.1,2.4 -0.4,4.7 -0.4,7.1c-0.1,5.4 1,11 -2.6,15.8c-10.6,0.3 -21.2,0 -31.8,0.2c-2.8,0 -3.9,-1.2 -4.2,-3.7c-0.3,-2.8 -0.2,-5.6 0.1,-8.4c1.1,-10.7 0.8,-21.5 1.6,-32.2c-1,-5.6 0.2,-11.1 0.6,-16.7c1.3,-6.5 0.1,-13.2 0.9,-19.8C98.3,239.3 99.8,233.2 102.1,227.4z"/>
+    <path android:fillColor="#EDD0BE" android:pathData="M134.8,220.4c-0.2,-0.6 -0.2,-1.8 -0.5,-1.9c-6.5,-1.3 -12.1,-6.3 -19.3,-4.8c-0.2,-1 2,-1.8 0.9,-2.4c-5.6,-3.2 -9.2,-8.9 -15,-11.9c-1,-1.5 -1.5,-3.3 -2.4,-4.8c-4,-5.9 -4.6,-13.5 -1.6,-20c2,-9 5.1,-17.3 13.5,-23.5c-0.2,4.9 -2.2,9 -0.5,13.9c2.5,-3.3 4.7,-6.2 8.1,-7.8c4.1,-1.9 8.2,-3 12.9,-1.5c4.8,1.6 9.8,2.6 14.8,3.9c0.1,7.5 -0.6,15 0.7,22.5c1.1,6.2 -0.6,12.5 1.1,18.7c0.3,1.2 -1,1.5 -2,1.6c-2,0.1 -3.9,0.1 -5.9,0.2c-2.7,1.3 -4.6,-0.7 -6.8,-1.6c3.7,2.2 7.5,3.7 11.9,3.5c1.4,0 3,-0.4 4,1.2c-1.9,4.1 -0.6,8.5 -1,12.8c-2.3,2.1 -5.1,1.1 -7.7,1.3C138.1,218.9 136.4,219.8 134.8,220.4z"/>
+    <path android:fillColor="#65261B" android:pathData="M264.9,346.8h-78.3c-1.3,-4.3 -0.3,-8.8 -0.6,-13.2c-0.2,-1 0.5,-1.9 1.5,-2c0.1,0 0.1,0 0.2,0c4.8,-1 9.4,-3.2 14.5,-1.2c4.6,1.8 8.8,-1.8 13.5,-1.6c1.9,0.1 3.8,0 5.8,0.1c6.8,0.3 13.6,-1.2 20.1,2c4.7,-3.1 10.2,-0.9 15.3,-2.2c5.6,-1.5 9.7,1.9 9.7,7.6C266.4,339.8 266.3,343.4 264.9,346.8z"/>
+    <path android:fillColor="#F1E8E8" android:pathData="M264.9,346.8c0.2,-2.8 0.5,-5.6 0.6,-8.4c0.4,-7.3 0.1,-7.6 -6.5,-9.4c-1.2,-0.3 -1.8,0.8 -2.6,0.9c-5.6,0.8 -11.3,1 -16.9,2.3c-1.1,0.2 -2.1,-0.7 -3.1,-1.2c-2.7,-1.5 -5.5,-3 -8.6,-0.7c-0.8,0.6 -1.8,0.8 -2.8,0.6c-4.4,-1.9 -8.9,0.2 -13.3,-0.7c-0.2,0 -0.4,-0.1 -0.5,-0.1c-5.1,4.5 -10.5,0.4 -15.8,0.5c-3,0 -5.1,3.6 -8.7,2.1c-0.4,-0.2 -0.5,1.7 -0.5,2.6c0.1,3.8 0.2,7.6 0.3,11.4c-2.4,-2.5 -1.2,-5.7 -1,-8.4c0.3,-4.3 -1.3,-8.5 -4.3,-11.6c0.8,-2.4 0.6,-5.7 4.3,-6c1.5,-1.3 3.3,-1.4 5.1,-1.4c23.7,-0.1 47.5,0 71.2,0c1.2,0 2.3,0.1 3.4,0.5c0.6,0.3 1.1,0.6 1.6,1c3,2.1 3.5,4.7 0.9,7.4c-1.3,1.4 -1,2.8 -1.1,4.4C266.4,337.4 268.8,342.6 264.9,346.8z"/>
+    <path android:fillColor="#F0E7E7" android:pathData="M267,320.9h-1.1c-2.1,-2.8 -1.2,-6.1 -1.2,-9.1c0,-2.8 -0.4,-4.4 -3.8,-5c-4.1,-0.8 -7.9,-1.3 -12.1,-0.2c-4.5,1.2 -8.9,-2.5 -13.5,-1.7c-7.4,1.2 -15.1,-2.6 -22.2,1.6c-1,0.6 -2.2,0.8 -3.4,0.4c-7.1,-2.4 -14.4,-2.6 -21.8,-1.8c-1,0.1 -2,-0.4 -2.5,-1.4c-0.9,-1.4 -1.8,-2.7 -2.6,-4.2c-1.7,-3 -1.1,-5 2.5,-5.6c1.3,-1 3,-1.5 4.7,-1.4c24.6,0.1 49.2,-0.2 73.9,0c0.8,0 1.6,0.2 2.4,0.5c0.6,0.3 1.1,0.6 1.6,1c2.2,3.3 2.3,6.3 -0.1,9.9c-2.1,3.2 -0.6,7.3 -0.8,11C266.8,317 267,319 267,320.9z"/>
+    <path android:fillColor="#E4C4AF" android:pathData="M97.8,281.4c-0.5,13.3 -1,26.7 -1.7,40c-0.2,3.6 0.8,4.9 4.6,4.8c10,-0.3 20.1,-0.2 30.1,-0.3c0.4,-0.1 0.8,0.3 0.9,0.7c0,0 0,0.1 0,0.1c-13.4,0.6 -26.8,0.3 -40.2,0.1c-2.1,0 -3.7,-0.6 -3.3,-3.1c2,-12.9 1.7,-26 3.4,-38.9c0.4,-2.7 -0.3,-3.8 -3,-3.6c-1.4,0.1 -2.8,0 -2.6,-2.1C90.2,279 94.7,277 97.8,281.4z"/>
+    <path android:fillColor="#324469" android:pathData="M131.8,326.8l-0.9,-0.8c0.4,-5.3 0.7,-10.6 1,-15.9c1.9,-1.9 4.1,-1.4 6.3,-1c1.8,0.6 3.5,1.5 5.3,2.1c4.2,1 4.7,4.2 4.4,7.6c-0.4,4.3 1.4,6 5.7,5.7c2.5,-0.2 5.3,-0.6 7.6,1.3c0.1,0.2 0.2,0.4 0.3,0.6L131.8,326.8z"/>
+    <path android:fillColor="#E5C5B1" android:pathData="M96.9,174.6c-1.9,8.1 -0.3,15.6 4.2,22.5c0.5,0.8 0.1,1.6 -0.2,2.3c-6.8,2.2 -11.7,-0.2 -14,-6.8s0.1,-10.5 8,-13.8C97.2,178.3 95.4,175.7 96.9,174.6z"/>
+    <path android:fillColor="#B85244" android:pathData="M97.8,281.4c-3.5,-2.8 -8.1,0 -11.7,-2.4c0.4,-5.2 1,-10.4 1.3,-15.6c0.2,-3.3 2,-3.5 4.5,-3.1c2.6,0.9 4.2,3 6,4.9C98.8,270.6 96,276 97.8,281.4z"/>
+    <path android:fillColor="#7F2928" android:pathData="M97.9,265.2c-2.9,-0.5 -4.4,-2.8 -6,-4.9c0.6,-11.8 3.1,-23.1 10.1,-32.9c0.5,4.6 -1.7,8.7 -2.3,13.1c-0.9,7 -0.8,14 -0.9,21C98.9,262.9 99.2,264.3 97.9,265.2z"/>
+    <path android:fillColor="#EFE6E6" android:pathData="M267.9,294.1l-1.2,-0.1c-2.1,-5.7 -2.1,-11.9 0,-17.6l0.3,-0.3C269,282 267.5,288.1 267.9,294.1z"/>
+    <path android:fillColor="#64241A" android:pathData="M184.4,267.3c0,-4.5 0,-8.9 -0.2,-13.4c-0.2,-1.6 0.5,-3.3 1.8,-4.2c2.5,-1.6 5,-3.1 7.8,-0.6c0.1,0.1 0.3,0.1 0.5,0.1c4.5,0.5 9.4,-1.7 13.3,3c1,1.3 4.1,0.3 5.8,-1.5c2.8,-3.2 6,-3.9 9.9,-1.9c1.3,0.6 3.3,1.2 4.3,0.6c4.6,-2.7 9.4,0.9 14,-0.6c0.6,-0.2 1.6,0.3 2.2,0.8c3,2.2 6.1,2.2 9.3,0.4c5,-2.7 9.4,1 14.1,1.7c1.1,0.2 0.6,2.4 0.5,3.7c-0.1,12.1 -0.1,12.1 -12.1,12.1C231.9,267.4 208.1,267.4 184.4,267.3z"/>
+    <path android:fillColor="#64241A" android:pathData="M266.7,276.4c0.5,5.9 0.5,11.7 0,17.6h-81.4c0.9,-5.3 -1.6,-10.6 0,-16c2.2,1.7 4.6,1.9 6.9,0.4c3.1,-2.1 6.3,-1.8 9.3,-0.2c2.7,1.4 4.8,0.5 7.4,-0.3c3.8,-1.2 8,-2.3 12.2,-1.1c2.4,0.7 5,1 7.2,-0.3c3,-1.7 5.6,-0.9 8,0.8c1.6,1.1 3.7,2.7 4.9,1.7c4.9,-3.9 11.2,0 16,-3.2c0.8,-0.6 1.9,-0.5 2.5,0.3c0,0 0,0 0,0C262,278 264.4,277.7 266.7,276.4z"/>
+    <path android:fillColor="#64241A" android:pathData="M185.4,303.8c2.3,0.4 4.6,0.9 6.6,-1c1.1,-1.1 1.9,-0.2 3,0.1c5.2,1.9 11,0.1 16.1,2.8c1.1,0.6 2.7,-0.6 4,-1.4c2.6,-1.5 5.4,-3 8.4,-0.8c1.3,0.9 3.3,1.2 4.3,0.5c4.1,-2.8 8.4,1.5 12.4,-0.5c1,-0.5 1.8,0.6 2.6,1.1c2.2,1.5 5.1,1.7 7.4,0.3c2.8,-1.5 6.2,-1.5 8.9,0.2c0.7,0.4 1.6,1.1 2.2,1c6.2,-1.6 4.6,2.9 4.6,6c0,3 -0.1,6 -0.1,8.9l-80.4,-0.2C185.5,315.1 185.5,309.4 185.4,303.8z"/>
+    <path android:fillColor="#F2F0EC" android:pathData="M138.7,218.5h8.9c1.1,0 2.3,0.1 3.4,0c6.4,-0.6 6.1,-0.6 6.6,6.1c0.9,12.1 0.9,24.3 1,36.5c0,1.1 -0.1,2.3 1,3.1c1.2,6.5 0.6,13.1 0.8,19.7c0.3,6.7 0.6,13.5 0.9,20.2c-1.9,1.7 -4.1,1.3 -6.4,1.1c-1.4,-0.3 -2.7,-0.7 -4,-1.2c-2.4,-1.3 -5.8,0.7 -7.5,-2.6c1.5,-2.9 1.7,-6 1.7,-9.2c0,-21 -0.1,-42 0,-63c0,-4.4 0.1,-8.3 -5.6,-9.1C138.9,220 138.7,219.2 138.7,218.5z"/>
+    <path android:fillColor="#2D3D5D" android:pathData="M161.3,325.8c-3.6,0 -7.2,-0.1 -10.8,0.1c-3,0.2 -4.2,-1 -3.9,-3.9c0.2,-1.5 -0.2,-3 0.1,-4.4c0.6,-3.3 -1,-4.7 -4,-5.2c0.7,-1.6 2.2,-1.5 3.6,-1.7c3,0.2 6,-0.3 8.7,-1.6c2.3,-0.5 4.6,-0.9 6.5,1L161.3,325.8z"/>
+    <path android:fillColor="#252018" android:pathData="M161.4,310.1h-6.6c-1.1,-1.9 -1.4,-3.8 -0.1,-5.8l6.6,-0.2L161.4,310.1z"/>
+    <path android:fillColor="#3C332E" android:pathData="M148.6,205.7c-4.8,-0.1 -9.5,-0.2 -14,-2.3c-1.3,-0.7 -2.5,-1.6 -3.6,-2.6c-0.4,-0.4 -0.9,-1.4 -0.7,-1.7c0.6,-0.9 1.5,-0.5 2.1,0.1c1.9,2.1 4.5,2.6 7,3.3c4.8,0.8 9.6,1.6 14.2,-0.9c2.6,-2.3 5.8,-3.5 8.9,-5c2.5,2.1 0,3 -1,4C158,204.2 153.1,204.5 148.6,205.7z"/>
+    <path android:fillColor="#F0B99E" android:pathData="M176.9,195.6c-2,-0.2 -5.6,0.7 -5.8,-2.3c-0.2,-2.7 3.5,-2.9 5.8,-3.6c0.9,-0.3 2,-0.3 2.9,0c1.7,0.7 4.9,0.2 4.7,2.5s-2.7,3.6 -5.3,3.3C178.6,195.5 177.9,195.6 176.9,195.6z"/>
+    <path android:fillColor="#171310" android:pathData="M174.1,186.5c-3,0 -4.7,-1.8 -4.6,-4.6c0,-2.8 1.9,-4.6 4.8,-4.4c2.6,0.1 4.2,1.7 4.3,4.4C178.6,184.9 177.2,186.5 174.1,186.5z"/>
+    <path android:fillColor="#352E29" android:pathData="M173.8,163.7c1,-0.1 2.1,0 3.1,0.3c2.3,1 6.8,1.2 6.1,3.6c-0.9,3 -4,-0.3 -6.1,-0.7c-4.6,-0.9 -8.4,0.6 -12,3c-0.9,0.6 -1.9,1.9 -3,0.7s0.5,-2 1.3,-2.7C166.1,165.3 169.9,163.8 173.8,163.7z"/>
+    <path android:fillColor="#EA9B9A" android:pathData="M162.6,196.7c-2.4,2.8 -5.1,4.9 -8.9,5c0.1,-1.6 -1.5,-3 -0.8,-4.7s1.6,-3.7 3.7,-4.2C160,191.9 160.8,195 162.6,196.7z"/>
+    <path android:fillColor="#FFFFFE" android:pathData="M138.7,218.5c0.4,0.3 0.8,0.7 1.2,0.8c6.7,1.1 6.7,1.1 6.7,7.7c0,23 0,46 0,69c0,2.6 -0.1,4.9 -3,5.9c-1.3,2.1 -3.4,2.7 -5.5,3.2c-2,0.2 -4,0.5 -5.6,-1c-1,-7.7 -0.1,-15.5 0.1,-23.2c0.7,-20.2 1.4,-40.3 2.1,-60.5C135.6,218.9 136.5,217.3 138.7,218.5z"/>
+    <path android:fillColor="#29211B" android:pathData="M132.5,304.1l6.3,0.1c1.5,1.7 1.5,4.2 -0.1,5.8H132C131.5,308.1 131.7,306 132.5,304.1z"/>
+    <path android:fillColor="#171412" android:pathData="M119.4,180.7c2.2,0.2 3.8,2 3.7,4.8c0,2.3 -1.9,4.2 -4.2,4.2c-0.1,0 -0.3,0 -0.4,0c-2.9,-0.1 -4.6,-1.6 -4.6,-4.6S115.7,180.6 119.4,180.7z"/>
+    <path android:fillColor="#35302B" android:pathData="M118.5,171.7c3.6,-0.1 7.2,1 10.1,3.2c0.8,0.6 1.7,1.3 1,2.3c-0.6,0.8 -1.5,0.6 -2.2,0.1c-5.6,-4 -11.2,-4 -17,-0.3c-0.8,0.5 -1.9,1.1 -2.5,-0.2c-0.6,-1.3 0.5,-1.7 1.4,-2.2C111.9,172.6 115.2,171.6 118.5,171.7z"/>
+    <path android:fillColor="#F1B89D" android:pathData="M115.1,198.6c-1.8,-0.5 -5.4,1.1 -5.6,-1.8c-0.1,-3.2 3.7,-2.7 6.1,-3.2c0.5,-0.1 1,-0.1 1.5,0c2.2,0 4.9,0 4.9,2.6c0,2.2 -2.6,2.5 -4.7,2.4C116.7,198.5 116,198.6 115.1,198.6z"/>
+    <path android:fillColor="#D1B353" android:pathData="M138.7,310.1l0.1,-5.9l4.9,-2.3c2.7,0.8 5.7,-0.8 8.3,1c-4.5,1.4 -3.2,6.2 -5.3,9.1l-4,0.4C141.1,312.1 139.7,311.3 138.7,310.1z"/>
+    <path android:fillColor="#D0AA52" android:pathData="M146.6,312c0.1,-1.2 0.1,-2.3 0,-3.5c-0.7,-4.2 0.9,-6.2 5.3,-5.7l2.8,1.4l0.1,5.8C152.6,312.9 149.6,312.2 146.6,312z"/>
+</vector>
Index: app/src/main/java/org/oppia/app/testing/TopicTestActivityForStory.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/TopicTestActivityForStory.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/TopicTestActivityForStory.kt	(date 1584626399000)
@@ -5,58 +5,42 @@
 import org.oppia.app.home.RouteToExplorationListener
 import org.oppia.app.player.exploration.ExplorationActivity
 import org.oppia.app.story.StoryActivity
-import org.oppia.app.topic.RouteToConceptCardListener
 import org.oppia.app.topic.RouteToQuestionPlayerListener
+import org.oppia.app.topic.RouteToReviewCardListener
 import org.oppia.app.topic.RouteToStoryListener
 import org.oppia.app.topic.TopicActivityPresenter
 import org.oppia.app.topic.TopicFragment
-import org.oppia.app.topic.conceptcard.ConceptCardFragment
-import org.oppia.app.topic.conceptcard.ConceptCardListener
 import org.oppia.app.topic.questionplayer.QuestionPlayerActivity
+import org.oppia.app.topic.reviewcard.ReviewCardActivity
 import org.oppia.domain.topic.TEST_STORY_ID_1
 import org.oppia.domain.topic.TEST_TOPIC_ID_0
 import javax.inject.Inject
 
 /** The test activity for [TopicFragment] to test displaying story by storyId. */
 class TopicTestActivityForStory : InjectableAppCompatActivity(), RouteToQuestionPlayerListener,
-  RouteToConceptCardListener, RouteToStoryListener,
-  RouteToExplorationListener, ConceptCardListener {
+  RouteToStoryListener, RouteToExplorationListener, RouteToReviewCardListener {
+
   @Inject lateinit var topicActivityPresenter: TopicActivityPresenter
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
-    topicActivityPresenter.handleOnCreate(topicId = TEST_TOPIC_ID_0, storyId = TEST_STORY_ID_1)
+    topicActivityPresenter.handleOnCreate(internalProfileId = 0, topicId = TEST_TOPIC_ID_0, storyId = TEST_STORY_ID_1)
   }
 
   override fun routeToQuestionPlayer(skillIdList: ArrayList<String>) {
     startActivity(QuestionPlayerActivity.createQuestionPlayerActivityIntent(this, skillIdList))
   }
 
-  override fun routeToStory(storyId: String) {
-    startActivity(StoryActivity.createStoryActivityIntent(this, storyId))
-  }
-
-  override fun routeToConceptCard(skillId: String) {
-    if (getConceptCardFragment() == null) {
-      val conceptCardFragment: ConceptCardFragment = ConceptCardFragment.newInstance(skillId)
-      conceptCardFragment.showNow(supportFragmentManager, TAG_CONCEPT_CARD_DIALOG)
-    }
+  override fun routeToStory(internalProfileId: Int, topicId: String, storyId: String) {
+    startActivity(StoryActivity.createStoryActivityIntent(this, internalProfileId, topicId, storyId))
   }
 
-  override fun dismiss() {
-    getConceptCardFragment()?.dismiss()
+  override fun routeToExploration(profileId: Int, topicId: String, storyId: String, explorationId: String) {
+    startActivity(ExplorationActivity.createExplorationActivityIntent(this, profileId, topicId, storyId, explorationId))
   }
 
-  override fun routeToExploration(explorationId: String, topicId: String?) {
-    startActivity(ExplorationActivity.createExplorationActivityIntent(this, explorationId, topicId))
-  }
-
-  private fun getConceptCardFragment(): ConceptCardFragment? {
-    return supportFragmentManager.findFragmentByTag(TAG_CONCEPT_CARD_DIALOG) as ConceptCardFragment?
-  }
-
-  companion object {
-    internal const val TAG_CONCEPT_CARD_DIALOG = "CONCEPT_CARD_DIALOG"
+  override fun routeToReviewCard(topicId: String, subtopicId: String) {
+    startActivity(ReviewCardActivity.createReviewCardActivityIntent(this, topicId, subtopicId))
   }
 }
Index: app/src/main/res/drawable/ic_onboarding_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_onboarding_2.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_onboarding_2.xml	(date 1584626399000)
@@ -0,0 +1,23 @@
+<vector android:height="24dp" android:viewportHeight="412"
+    android:viewportWidth="360" android:width="24dp"
+    xmlns:aapt="http://schemas.android.com/aapt" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:pathData="M126.7,179c-32.3,-11 -69.4,0.4 -104.8,11.8c-7.4,2.4 -14.7,4.7 -21.9,6.9V0h360v232.9c-12.1,8.4 -28.4,16.2 -50.2,22.6c-13.4,3.9 -25.3,5.6 -36,5.6C209.9,261.1 188,199.8 126.7,179z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="130.97687" android:endY="6.993863"
+                android:startX="270.65686" android:startY="268.86304" android:type="linear">
+                <item android:color="#FFFFE558" android:offset="0"/>
+                <item android:color="#FFE76F51" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:pathData="M104.1,193.5c-35,-0.4 -55.5,29.5 -74.3,59.3C20,268.3 10.7,283.8 0,295V0h360v265.1c-14.1,20.5 -32.2,36.6 -55.4,43.4c-7.6,2.3 -15.4,3.4 -23.3,3.5C205.2,311.9 173.9,194.3 104.1,193.5z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="120.212875" android:endY="11.586597"
+                android:startX="272.52887" android:startY="357.85242" android:type="linear">
+                <item android:color="#80FFE558" android:offset="0"/>
+                <item android:color="#CCCBAC04" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:fillColor="#00645C" android:pathData="M257,227h-44v-66h-66v66h-44l77,77L257,227zM103,326v22h154v-22H103z"/>
+</vector>
Index: app/src/main/java/org/oppia/app/testing/InputInteractionViewTestActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/InputInteractionViewTestActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/InputInteractionViewTestActivity.kt	(date 1584626399000)
@@ -1,39 +1,68 @@
 package org.oppia.app.testing
 
 import android.os.Bundle
+import android.view.View
 import androidx.appcompat.app.AppCompatActivity
 import androidx.databinding.DataBindingUtil
 import org.oppia.app.R
 import org.oppia.app.customview.interaction.FractionInputInteractionView
 import org.oppia.app.customview.interaction.NumericInputInteractionView
 import org.oppia.app.customview.interaction.TextInputInteractionView
-import org.oppia.app.databinding.ActivityNumericInputInteractionViewTestBinding
+import org.oppia.app.databinding.ActivityInputInteractionViewTestBinding
 import org.oppia.app.model.Interaction
+import org.oppia.app.player.state.answerhandling.AnswerErrorCategory
+import org.oppia.app.player.state.answerhandling.InteractionAnswerErrorReceiver
 import org.oppia.app.player.state.itemviewmodel.FractionInteractionViewModel
 import org.oppia.app.player.state.itemviewmodel.NumericInputViewModel
 import org.oppia.app.player.state.itemviewmodel.TextInputViewModel
+import org.oppia.app.player.state.listener.StateKeyboardButtonListener
 
 /**
  * This is a dummy activity to test input interaction views.
- * It contains [NumericInputInteractionView], [TextInputInteractionView], [FractionInputInteractionView] and [NumberWithUnitsInputInteractionView].
+ * It contains [FractionInputInteractionView], [NumericInputInteractionView],and [TextInputInteractionView].
  */
-class InputInteractionViewTestActivity : AppCompatActivity() {
-  val numericInputViewModel = NumericInputViewModel()
+class InputInteractionViewTestActivity : AppCompatActivity(), StateKeyboardButtonListener,
+  InteractionAnswerErrorReceiver {
+  override fun onEditorAction(actionCode: Int) {
+  }
+
+  private lateinit var binding: ActivityInputInteractionViewTestBinding
+  lateinit var fractionInteractionViewModel: FractionInteractionViewModel
+  val numericInputViewModel = NumericInputViewModel(
+    context = this,
+    interactionAnswerErrorReceiver = this
+  )
+
   val textInputViewModel = TextInputViewModel(
     interaction = Interaction.getDefaultInstance()
   )
-  val fractionInteractionViewModel = FractionInteractionViewModel(
-    interaction = Interaction.getDefaultInstance(),
-    context = this@InputInteractionViewTestActivity.applicationContext
-  )
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
-    val binding = DataBindingUtil.setContentView<ActivityNumericInputInteractionViewTestBinding>(
-      this, R.layout.activity_numeric_input_interaction_view_test
+    binding = DataBindingUtil.setContentView<ActivityInputInteractionViewTestBinding>(
+      this, R.layout.activity_input_interaction_view_test
+    )
+    fractionInteractionViewModel = FractionInteractionViewModel(
+      interaction = Interaction.getDefaultInstance(),
+      context = this,
+      interactionAnswerErrorReceiver = this
     )
     binding.numericInputViewModel = numericInputViewModel
     binding.textInputViewModel = textInputViewModel
     binding.fractionInteractionViewModel = fractionInteractionViewModel
   }
+
+  fun getPendingAnswerErrorOnSubmitClick(v: View) {
+    fractionInteractionViewModel.checkPendingAnswerError(AnswerErrorCategory.SUBMIT_TIME)
+    numericInputViewModel.checkPendingAnswerError(AnswerErrorCategory.SUBMIT_TIME)
+  }
+
+  override fun onPendingAnswerError(
+    pendingAnswerError: String?
+  ) {
+    if (pendingAnswerError != null)
+      binding.submitButton.isEnabled = false
+    else
+      binding.submitButton.isEnabled = true
+  }
 }
Index: app/src/main/res/drawable/ic_landscape_onboarding_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_landscape_onboarding_1.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_landscape_onboarding_1.xml	(date 1584626399000)
@@ -0,0 +1,143 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="320dp"
+    android:height="360dp"
+    android:viewportWidth="320"
+    android:viewportHeight="360">
+  <path
+      android:pathData="M59.43,161.22C25,180.14 2.47,218.75 -18.71,256c-11.7,20.59 -23,40.78 -35.66,57L-200,167.41 139.41,-172 293.68,-17.73c-0.59,19.69 -7.8,46.48 -29.14,82a173.55,173.55 0,0 1,-25.72 33.65C186.06,150.65 124.68,125.39 59.43,161.22Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="105.274315"
+          android:startX="243.15976"
+          android:endY="52.994225"
+          android:endX="-73.86013"
+          android:type="linear">
+        <item android:offset="0" android:color="#6688241B"/>
+        <item android:offset="1" android:color="#FFE76F51"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+      android:pathData="M20.74,388.16 L-200,167.41 139.41,-172 305,-6.37c11.48,37 13.78,77.28 -7.34,112.39C239.63,202.59 114.79,127.57 51,190.13 21.8,218.72 26,256.75 31.6,293.4c5.55,36.4 12.47,71.44 -10.63,94.53Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="169.39801"
+          android:startX="307.27563"
+          android:endY="66.9288"
+          android:endX="-80.297966"
+          android:type="linear">
+        <item android:offset="0" android:color="#33A62E23"/>
+        <item android:offset="1" android:color="#FFC55F45"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+      android:pathData="M85,130m-32,0a32,32 0,1 1,64 0a32,32 0,1 1,-64 0"
+      android:fillColor="#fee557"/>
+  <path
+      android:pathData="M73.91,124.89m-5.96,0a5.96,5.96 0,1 1,11.92 0a5.96,5.96 0,1 1,-11.92 0"
+      android:fillColor="#d6a229"/>
+  <path
+      android:pathData="M96.33,124.89m-5.96,0a5.96,5.96 0,1 1,11.92 0a5.96,5.96 0,1 1,-11.92 0"
+      android:fillColor="#d6a229"/>
+  <path
+      android:pathData="M76.44,138.36H93.8a1,1 0,0 1,1 1v4.91a6,6 0,0 1,-6 6H81.44a6,6 0,0 1,-6 -6v-4.91A1,1 0,0 1,76.44 138.36Z"
+      android:fillColor="#d6a229"/>
+  <path
+      android:pathData="M185,130m-32,0a32,32 0,1 1,64 0a32,32 0,1 1,-64 0"
+      android:fillColor="#76c47f"/>
+  <path
+      android:pathData="M173.47,118.92a6,6 0,0 1,5.95 6h0c0,3.29 -11.91,3.29 -11.91,0a6,6 0,0 1,6 -6Z"
+      android:fillColor="#389b4a"/>
+  <path
+      android:pathData="M195.89,118.92a6,6 0,0 1,6 6h0c0,3.29 -11.91,3.29 -11.91,0a6,6 0,0 1,6 -6Z"
+      android:fillColor="#389b4a"/>
+  <path
+      android:pathData="M176,138.36h17.36a1,1 0,0 1,1 1v4.91a6,6 0,0 1,-6 6H181a6,6 0,0 1,-6 -6v-4.91A1,1 0,0 1,176 138.36Z"
+      android:fillColor="#389b4a"/>
+  <path
+      android:pathData="M179,136.86h11.4a1,1 0,0 1,1 1v3.43a6,6 0,0 1,-6 6H184a6,6 0,0 1,-6 -6v-3.43A1,1 0,0 1,179 136.86Z"
+      android:fillColor="#76c47f"/>
+  <path
+      android:pathData="M85,230m-32,0a32,32 0,1 1,64 0a32,32 0,1 1,-64 0"
+      android:fillColor="#a5d2eb"/>
+  <path
+      android:pathData="M73.91,224.45m-5.96,0a5.96,5.96 0,1 1,11.92 0a5.96,5.96 0,1 1,-11.92 0"
+      android:fillColor="#618da5"/>
+  <path
+      android:pathData="M96.33,224.45m-5.96,0a5.96,5.96 0,1 1,11.92 0a5.96,5.96 0,1 1,-11.92 0"
+      android:fillColor="#618da5"/>
+  <path
+      android:pathData="M79.91,242.39a5.21,7.45 0,1 0,10.42 0a5.21,7.45 0,1 0,-10.42 0z"
+      android:fillColor="#618da5"/>
+  <path
+      android:strokeWidth="1"
+      android:pathData="M97.07,216.24L97.07,222.2"
+      android:fillColor="#00000000"
+      android:strokeColor="#618da5"
+      android:strokeLineCap="round"/>
+  <path
+      android:strokeWidth="1"
+      android:pathData="M101.55,218.13L98.57,223.29"
+      android:fillColor="#00000000"
+      android:strokeColor="#618da5"
+      android:strokeLineCap="round"/>
+  <path
+      android:strokeWidth="1"
+      android:pathData="M73.17,216.24L73.17,222.2"
+      android:fillColor="#00000000"
+      android:strokeColor="#618da5"
+      android:strokeLineCap="round"/>
+  <path
+      android:strokeWidth="1"
+      android:pathData="M68.69,218.13L71.67,223.29"
+      android:fillColor="#00000000"
+      android:strokeColor="#618da5"
+      android:strokeLineCap="round"/>
+  <path
+      android:pathData="M185,231m-32,0a32,32 0,1 1,64 0a32,32 0,1 1,-64 0"
+      android:strokeAlpha="0"
+      android:fillColor="#adaaa9"
+      android:fillAlpha="0"/>
+  <path
+      android:pathData="M184.68,219.38L184.68,244.69"
+      android:strokeAlpha="0"
+      android:strokeWidth="5"
+      android:fillColor="#00000000"
+      android:strokeColor="#fff"
+      android:fillAlpha="0"
+      android:strokeLineCap="round"/>
+  <path
+      android:pathData="M197.33,232.03L172.02,232.03"
+      android:strokeAlpha="0"
+      android:strokeWidth="5"
+      android:fillColor="#00000000"
+      android:strokeColor="#fff"
+      android:fillAlpha="0"
+      android:strokeLineCap="round"/>
+  <path
+      android:pathData="M185,230m-32,0a32,32 0,1 1,64 0a32,32 0,1 1,-64 0"
+      android:fillColor="#c082b8"/>
+  <path
+      android:pathData="M173.47,226.06m-5.96,0a5.96,5.96 0,1 1,11.92 0a5.96,5.96 0,1 1,-11.92 0"
+      android:fillColor="#7e4584"/>
+  <path
+      android:pathData="M195.89,226.06m-5.96,0a5.96,5.96 0,1 1,11.92 0a5.96,5.96 0,1 1,-11.92 0"
+      android:fillColor="#7e4584"/>
+  <path
+      android:pathData="M175.78,240.32h17.79a0.79,0.79 0,0 1,0.79 0.79h0a4.71,4.71 0,0 1,-4.7 4.7h-10a4.7,4.7 0,0 1,-4.7 -4.7h0A0.78,0.78 0,0 1,175.78 240.32Z"
+      android:fillColor="#7e4584"/>
+  <path
+      android:pathData="M165.46,213.66c0,-4.82 12,-4.82 12,0"
+      android:strokeWidth="3"
+      android:fillColor="#00000000"
+      android:strokeColor="#7e4584"
+      android:strokeLineCap="round"/>
+  <path
+      android:pathData="M191.25,213.66c0,-4.82 12.05,-4.82 12.05,0"
+      android:strokeWidth="3"
+      android:fillColor="#00000000"
+      android:strokeColor="#7e4584"
+      android:strokeLineCap="round"/>
+</vector>
Index: app/src/main/res/drawable/onboarding_dot_active.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/onboarding_dot_active.xml	(date 1584626399000)
+++ app/src/main/res/drawable/onboarding_dot_active.xml	(date 1584626399000)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+  android:shape="oval">
+  <solid android:color="@color/onboardingDotActive" />
+  <corners android:radius="4dp" />
+</shape>
Index: app/src/main/res/drawable/ic_profile_exit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_profile_exit.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_profile_exit.xml	(date 1584626399000)
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="200dp"
+    android:height="197.23dp"
+    android:viewportWidth="200"
+    android:viewportHeight="197.23">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M200,6.07c-2,-5 -3.56,-6 -9.15,-6q-60.27,0 -120.54,-0.05c-5.56,0 -8.49,3.26 -8.43,8.3 0.2,17.62 0.07,35.24 0.07,52.87v2.52L75.56,63.71L75.56,14.16h89.92a18.64,18.64 0,0 1,-1.59 1.18c-11,6.21 -21.92,12.47 -32.95,18.59a8.63,8.63 0,0 0,-4.87 8.37q0.09,51.87 0,103.73v3.25L75.71,149.28L75.71,111.07L61.95,111.07v2.3q0,21.24 0,42.47c0,4.71 2.59,7.37 7.32,7.38q27,0 54,0h2.87v24.48c0,6 1.06,7.55 6.63,9.52h0.88c1.52,-0.68 3.1,-1.25 4.54,-2.06 18.48,-10.45 36.92,-21 55.44,-31.36 2.82,-1.58 5.46,-3.07 6.39,-6.4Z"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M46.89,97.16h2.84q16.92,0 33.84,0c5.27,0 9,-2.27 10.29,-6.65 2.21,-7.35 -3.1,-12.81 -8.91,-12.76 -11.87,0.09 -23.74,0 -35.61,0.07 -1.94,0 -2.54,-0.53 -2.49,-2.49 0.13,-5.23 0,-10.47 0.06,-15.7 0,-1.75 -0.27,-3.21 -2,-4a4.58,4.58 0,0 0,-4.94 0.64q-9.89,7.21 -19.77,14.4 -8.65,6.27 -17.32,12.53c-3.78,2.73 -3.83,5.49 -0.11,8.2q18.54,13.49 37.07,26.95c1.62,1.18 3.25,1.7 5.1,0.76s2,-2.47 2,-4.3C46.85,109.04 46.89,103.29 46.89,97.16Z"/>
+</vector>
Index: app/src/main/java/org/oppia/app/profile/AddProfileViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/AddProfileViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/AddProfileViewModel.kt	(date 1584626399000)
@@ -12,6 +12,7 @@
   val pinErrorMsg = ObservableField("")
   val confirmPinErrorMsg = ObservableField("")
   val nameErrorMsg = ObservableField("")
+  val createPin = ObservableField(false)
 
   fun clearAllErrorMessages() {
     pinErrorMsg.set("")
Index: app/src/main/res/drawable/ic_landscape_onboarding_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_landscape_onboarding_0.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_landscape_onboarding_0.xml	(date 1584626399000)
@@ -0,0 +1,233 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="320dp"
+    android:height="360dp"
+    android:viewportWidth="320"
+    android:viewportHeight="360">
+  <path
+      android:pathData="M62.1,163.64C27.59,182.35 5.3,221 -15.66,258.35c-11.71,20.86 -23,41.3 -35.78,57.62L-200,167.41 139.41,-172 296.26,-15.15c-0.2,19.9 -7.09,47.09 -28.55,83.16 -8.24,13.85 -16.77,24.84 -25.56,33.63C189.53,154.25 127.46,128.19 62.1,163.64Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="141.30495"
+          android:startX="208.80219"
+          android:endY="25.53355"
+          android:endX="-63.09782"
+          android:type="linear">
+        <item android:offset="0" android:color="#66169A90"/>
+        <item android:offset="1" android:color="#FF049489"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+      android:pathData="M20.74,388.15 L-200,167.41 139.41,-172l164,164c12.23,37.71 15.21,78.77 -6,114.31 -57.58,96.64 -183.82,20.09 -247.48,82.47 -29.09,28.51 -24.52,66.8 -18.57,103.71 5.9,36.66 13.16,72 -9.87,95C21.23,387.68 21,387.92 20.74,388.15Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="166.48878"
+          android:startX="308.66403"
+          android:endY="67.40259"
+          android:endX="-82.31477"
+          android:type="linear">
+        <item android:offset="0" android:color="#4C5DC5C1"/>
+        <item android:offset="1" android:color="#99049489"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+      android:pathData="M154.84,157.47c-2.28,2.08 -4.44,4.3 -7.35,5.6a37.49,37.49 0,0 1,-8 2.27,11.62 11.62,0 0,1 -7.37,-0.18c-2.86,-0.84 -5.12,-0.92 -7.7,1.14 -3.19,2.55 -7.18,2.81 -11.18,1.9a17.25,17.25 0,0 1,-5.86 -3.15,2.51 2.51,0 0,0 -2.59,-0.51 24.22,24.22 0,0 1,-19.14 -1.73c-0.44,-0.55 -0.76,-1.25 -1.6,-1.31 -0.23,-0.41 0,-0.68 0.24,-1 1.82,-3.12 4.65,-5.16 7.52,-7.16a20.59,20.59 0,0 0,-7.48 7c-0.26,0.21 -0.31,0.68 -0.82,0.57a32.46,32.46 0,0 1,-4.17 -4.12c-0.1,-1 0.68,-1.49 1.26,-2A22.94,22.94 0,0 1,89 149.89a3.71,3.71 0,0 0,1 -0.39c0.1,-0.06 0.14,-0.14 0.17,-0.34 -0.5,-0.34 -1,0 -1.36,0.18a21.89,21.89 0,0 0,-8.5 5.65c-0.42,0.42 -0.74,1 -1.48,1a14.65,14.65 0,0 1,-1.63 -3.92,0.68 0.68,0 0,0 -0.63,-0.57c-0.08,-0.72 0.51,-1 1,-1.31a21,21 0,0 1,10.32 -4.08,3.12 3.12,0 0,0 2,-0.76 16.36,16.36 0,0 0,-6.12 1,20.88 20.88,0 0,0 -5.44,2.93c-0.5,0.35 -1,0.84 -1.67,0.68a3.73,3.73 0,0 0,-0.35 -1.89c0.1,-6.07 3.09,-10.45 8,-13.73a2.27,2.27 0,0 1,1.47 -0.41c2.2,0.76 4.3,1.83 6.7,2a29.22,29.22 0,0 0,9.14 -0.45c4.92,-1.2 7.84,-4.64 10.16,-8.84 0.72,-1.3 0.91,-2.9 2.18,-3.9a8,8 0,0 1,5.49 -0.08c0.68,0.33 0.81,1 1.09,1.64 1.57,3.6 3.52,6.94 6.88,9.24a15.25,15.25 0,0 0,7.91 2.51c4.29,0.22 8.53,0 12.35,-2.34a1.53,1.53 0,0 1,0.75 -0.2c3.55,1.36 6,4 7.85,7.16a15.64,15.64 0,0 1,2 6.13c-0.56,1.2 0,2.56 -0.6,3.76 -0.68,0.19 -1,-0.35 -1.47,-0.68a22.29,22.29 0,0 0,-10.2 -4.48,4.38 4.38,0 0,0 -2.1,0 1.89,1.89 0,0 0,1.55 0.63,22.12 22.12,0 0,1 10.67,4.08c0.57,0.41 1.28,0.75 1.24,1.64 -0.26,1.83 -1.44,3.31 -1.93,5.06a0.4,0.4 0,0 1,-0.41 0,25.16 25.16,0 0,0 -8.84,-7.07 7.19,7.19 0,0 0,-2.94 -0.82c0.48,0.78 1.1,0.77 1.62,0.94a23.35,23.35 0,0 1,8.38 5,7.48 7.48,0 0,1 1.63,2A0.38,0.38 0,0 1,154.84 157.47Z"
+      android:fillColor="#ffebc2"/>
+  <path
+      android:pathData="M85.65,162.81c0.46,-0.6 0.85,0 1.2,0.14A24,24 0,0 0,105.14 164a1.78,1.78 0,0 1,2.09 0.37,17.36 17.36,0 0,0 6,3.47c1,1.29 0.77,2.77 0.49,4.19a15.57,15.57 0,0 1,-5.21 8.49c-7.33,6.66 -12.92,14.47 -16,24a40.34,40.34 0,0 0,-1.6 7.27,1.07 1.07,0 0,1 -0.21,0.41H81.55c-0.83,0 -1.2,0.13 -1.06,1.13a8.29,8.29 0,0 1,-0.49 3.95c-0.68,0.46 -0.83,1.29 -1.36,1.87C74,224 66.55,222.27 64,215.73a11.12,11.12 0,0 1,0.85 -10.48,2.5 2.5,0 0,0 0.68,-1.54 11,11 0,0 0,-5.07 8.62,12.52 12.52,0 0,0 2.39,8.7c1,1.44 0.78,2 -1,2.4 -3.66,0.88 -8.05,-1.14 -10.08,-4.76 -2.72,-4.76 -2.67,-9.52 0.52,-14.1 0.14,-0.2 0.36,-0.39 0.23,-0.77a7.09,7.09 0,0 0,-3.09 2.72c-3.14,4.58 -3.18,9.34 -1,14.19 0.08,0.19 0.21,0.36 0.29,0.55 0.26,0.65 1.12,1.33 0.6,2s-1.59,0.19 -2.35,-0.07c-4.21,-1.44 -7,-5.44 -7.3,-10.35a14.3,14.3 0,0 1,4.59 -11.52c0.45,-0.43 1,-0.77 0.77,-1.55a31.21,31.21 0,0 1,16.37 -2.94,28.25 28.25,0 0,1 7.77,1.57c0.54,0.2 1.06,0.47 1.27,-0.47 1.87,-8.29 7,-14.63 12.42,-20.82 1,-1.14 2,-2.27 2.88,-3.49 2,-2.79 2.6,-5.74 0.74,-8.89a15.9,15.9 0,0 1,-0.78 -1.86Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M90.69,212c0.07,-4.62 1.68,-8.85 3.52,-12.93a57.7,57.7 0,0 1,14.28 -19c2.86,-2.6 5,-5.74 5,-9.84a19.78,19.78 0,0 0,-0.28 -2.3,14.57 14.57,0 0,0 13.84,-4.08 0.77,0.77 0,0 1,1 -0.2,28.76 28.76,0 0,0 11.44,1.75c-2.72,2.17 -5.55,4.19 -7.81,6.88 -7,8.38 -6.89,16.89 0.45,25l1.13,1.28c0.35,0.87 -0.38,1.1 -0.88,1.36a15.94,15.94 0,0 0,-8.16 10.69c-0.21,0.9 -0.47,1.57 -1.71,1.57 -10.35,-0.06 -20.7,0 -31,0A1.42,1.42 0,0 1,90.69 212Z"
+      android:fillColor="#66431f"/>
+  <path
+      android:pathData="M94.49,96.4c0.46,0.73 0,1.63 0.44,2.45 7.94,-6.7 16.66,-11.3 27.76,-10.81 -1.87,1.5 -4.19,2 -5.35,4.43a58.41,58.41 0,0 1,8.26 -2,28.91 28.91,0 0,1 8.41,0.12c-1.89,1.13 -4.08,1.63 -5.6,3.68 3.4,-0.3 6.49,-0.64 9.66,0 -1.65,1.15 -3.76,1.32 -4.86,3.07 -0.25,1.07 0.56,1.47 1.26,1.9a26.85,26.85 0,0 1,7.61 7c0.41,0.58 1.36,1.25 0.19,2a26.73,26.73 0,0 1,-5 0.14,40 40,0 0,0 -11.09,1.6c-1.8,0.5 -3.63,0.92 -5.44,1.36 -3.88,1 -7.68,0.35 -11.38,-0.81 -8.44,-2.66 -17,-2.68 -25.62,-1.26a13,13 0,0 1,-2.78 0.33,4 4,0 0,1 -3.63,-3 7,7 0,0 1,1.46 -7.15,6.76 6.76,0 0,1 6.49,-2.64 5,5 0,0 1,4.47 4.2c0.2,1 0.51,1.09 1.29,0.56 1.63,-1.08 3.36,-2 3,-4.46a0.86,0.86 0,0 1,0.39 -0.81Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M134.48,198.47A30.64,30.64 0,0 1,148 196.14a32.22,32.22 0,0 1,12.59 2.65c8.16,3.65 12.6,12.65 10.2,20.8a2.77,2.77 0,0 1,-0.28 0.54,16.25 16.25,0 0,1 -4,3.18 9.09,9.09 0,0 1,-10.49 -1.93,12.64 12.64,0 0,1 -1,-15.73 4,4 0,0 0,0.79 -1.36,9 9,0 0,0 -4.28,3.94c-2.72,4.93 -2.72,9.85 0.38,14.66 1,1.63 0.88,2 -1,2.46 -3.82,0.86 -8.62,-1.52 -10.7,-5.44 -2.85,-5.35 -2.4,-10.51 1.14,-15.42a1.84,1.84 0,0 0,0.55 -0.9,7.36 7.36,0 0,0 -3.49,2.53c-4.08,5.09 -4.46,10.58 -1.72,16.4 0.3,0.63 1.06,1.36 0.5,2s-1.4,0.11 -2,-0.14a11.15,11.15 0,0 1,-7.48 -9.23c-1,-6.05 1,-11.07 5.67,-15A2.74,2.74 0,0 0,134.48 198.47Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M134.48,198.47c0.68,0.68 0.27,1.08 -0.32,1.49a14.55,14.55 0,0 0,-6.44 12.24c-0.12,5.13 2.68,11.23 9.52,12.14a18.35,18.35 0,0 1,-2.65 -7.48c-0.55,-4.58 1.78,-11 6.56,-13.55 0.43,-0.23 1,-0.73 1.41,-0.21s-0.29,0.87 -0.59,1.19a13.43,13.43 0,0 0,0.14 17.58c2.54,2.72 7,4.37 10.34,2.4a13.94,13.94 0,0 1,-3.25 -9.52,13.39 13.39,0 0,1 5.25,-10.37 5.55,5.55 0,0 1,1 -0.54c0.4,-0.2 0.9,-0.59 1.27,-0.1s-0.27,0.79 -0.53,1.1c-3.95,4.81 -4.14,11.2 -0.12,15.88 3.6,4.19 9.62,4.45 13.7,-0.42 0.19,-0.23 0.32,-1.18 0.78,-0.15 -2.29,6.65 -9.43,9.41 -15,5.93 -0.62,-0.39 -0.95,-0.23 -1.46,0.2a10.45,10.45 0,0 1,-12.33 1.3,2 2,0 0,0 -1.87,-0.15c-6,2.21 -11.06,0.33 -14.22,-5.19a16.73,16.73 0,0 1,-2.29 -8.65c0,-1.36 -0.47,-1.36 -1.47,-1.36H93.77c-1,0 -2.08,0 -3.12,0a1,1 0,0 1,0 -0.25c10.36,0 20.72,0 31.08,0 1.32,0 1.8,-0.4 2,-1.62a15.64,15.64 0,0 1,8.49 -11c0.39,-0.21 0.9,-0.32 1,-0.92C133.67,198.75 134.08,198.5 134.48,198.47Z"
+      android:fillColor="#986c42"/>
+  <path
+      android:pathData="M45,199.72c0.62,0.05 1.36,0.09 0.53,0.92s-1.74,1.6 -2.52,2.51a13.33,13.33 0,0 0,0.81 17.75,9 9,0 0,0 5.39,2.22c-0.57,-1.12 -1.17,-2.19 -1.64,-3.32 -2,-4.92 -1.12,-11.56 3.22,-15.32 0.12,-0.1 0.21,-0.26 0.34,-0.32 0.68,-0.32 1.36,-1.5 2.12,-0.75s-0.5,1.18 -0.88,1.7c-4,5.4 -2.2,13.86 3.62,17.16a8,8 0,0 0,7.4 0.12A13.07,13.07 0,0 1,60 212.33a11.76,11.76 0,0 1,4.84 -8.72c0.39,-0.31 1,-0.68 1.42,-0.3 0.58,0.57 -0.26,0.88 -0.52,1.22a11,11 0,0 0,0.76 14.41c3.82,3.8 9,3.53 12.36,-0.68 0.31,-0.38 0.44,-1 1.11,-1 -1.53,5.13 -5,7.94 -9.75,7.81a7.62,7.62 0,0 1,-3.6 -1c-0.78,-0.45 -1.23,-0.28 -1.88,0.29a9.64,9.64 0,0 1,-11 1.59,2.1 2.1,0 0,0 -1.89,0c-5.44,2.21 -10,0.8 -13.17,-4a15,15 0,0 1,3.76 -20.82A14.71,14.71 0,0 1,45 199.72Z"
+      android:fillColor="#986c42"/>
+  <path
+      android:pathData="M139.18,97a15.11,15.11 0,0 1,0.43 -4.34c0.5,-2.44 1.76,-3.46 4.25,-3.48 4.3,0 7.87,1.9 11,4.51 4.65,3.8 7.29,8.67 6.8,14.85a8.5,8.5 0,0 1,-4.61 7.32,0.84 0.84,0 0,1 -1.15,-0.28 0.05,0.05 0,0 0,0 0,7.87 7.87,0 0,1 -0.27,-3c0,-1.92 -0.2,-2.11 -2.14,-2.52a1.18,1.18 0,0 1,-0.91 -0.49,0.47 0.47,0 0,1 0.32,-0.46c3,-1.36 4,-3.69 2.93,-6.74a6.71,6.71 0,0 0,-6.83 -4.6,4.39 4.39,0 0,0 -4.08,3.87c-0.12,0.62 0,1.4 -0.83,1.68a9.48,9.48 0,0 1,-4.63 -2.67C138.56,99.68 139,98.25 139.18,97Z"
+      android:fillColor="#986c42"/>
+  <path
+      android:pathData="M94.49,96.41c0.75,3.53 -1.85,4.79 -4.2,6.25 -0.42,0.26 -0.82,0.43 -0.82,-0.28 0,-3.06 -1.6,-4.67 -4.55,-5.09a7,7 0,0 0,-6.71 3.85c-1.6,3 -0.95,6.52 1.46,7.88a4.59,4.59 0,0 0,1 0.3c-0.14,0.81 -0.85,0.64 -1.36,0.68a1.74,1.74 0,0 0,-1.65 1.83v0.07c-0.06,1.4 0.14,2.8 -0.05,4.2a0.45,0.45 0,0 1,-0.65 0.06l0,0c-4.24,-2.51 -5.85,-6.55 -4.76,-12 1.61,-7.82 9.87,-15 17.32,-15 2.86,0 4.08,1 4.61,3.8a14.49,14.49 0,0 1,0.37 3.41Z"
+      android:fillColor="#986c42"/>
+  <path
+      android:pathData="M76.93,116.17h0.6c1.72,0.38 2.23,1.74 2.54,3.2 0.62,2.85 1.27,5.69 1.91,8.54a9.24,9.24 0,0 0,3 5.31,1.43 1.43,0 0,1 0.68,1 16.15,16.15 0,0 0,-8.16 8.84c-0.68,1.63 -0.61,3.44 -1.26,5.06a33.54,33.54 0,0 1,-3.94 -15,31.37 31.37,0 0,1 4,-15.56C76.58,117.14 77,116.74 76.93,116.17Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M156.09,115.55l1,0.34c-0.78,0.61 -0.09,1.09 0.18,1.57a31.85,31.85 0,0 1,4.3 16,31.25 31.25,0 0,1 -3.33,13.31c-0.4,0 -0.48,-0.36 -0.53,-0.68 -0.8,-5.52 -4.08,-9.26 -8.66,-12.08a4.2,4.2 0,0 1,-0.5 -0.36c0,-0.1 -0.08,-0.23 0,-0.29 2.85,-3 3.1,-6.93 4,-10.64 0.27,-1.11 0.51,-2.23 0.68,-3.35a5.43,5.43 0,0 1,2.83 -3.87Z"
+      android:fillColor="#986c42"/>
+  <path
+      android:pathData="M139.18,97c0.11,1.24 -0.45,2.8 0.82,3.59s2.6,2 4.22,2.41c2.3,1.21 4.08,3.09 6,4.76 0.37,0.33 1.11,0.83 0.22,1.46 -2.64,-0.12 -5.33,0 -7.81,-1.23 -1.51,-3 -4,-5.22 -6.65,-7.21 -0.92,-0.68 -1.92,-1.25 -2.83,-1.93 -0.63,-0.47 -0.94,-1 0.06,-1.47 1.56,0.68 3.15,1.36 4.67,2.11 0.88,0.44 1.18,0.38 1.13,-0.68a3.11,3.11 0,0 1,0.16 -1.81Z"
+      android:fillColor="#986c42"/>
+  <path
+      android:pathData="M157.37,151.81a19.82,19.82 0,0 0,-11.66 -5.27,9.7 9.7,0 0,0 -1.7,-0.17c-0.81,0 -0.74,-0.47 -0.75,-1 0,-0.82 0.53,-0.55 1,-0.52a22.38,22.38 0,0 1,13.44 5.76c1.5,1.7 3.2,3.27 3.91,5.55C160.17,154.68 159,153 157.37,151.81Z"
+      android:fillColor="#694621"/>
+  <path
+      android:pathData="M76.65,150c4,-3.09 8.42,-5.11 13.6,-5.2 0.68,1.59 -0.42,1.59 -1.5,1.68a20.08,20.08 0,0 0,-12.13 5,21 21,0 0,0 -4.08,4.4c-0.29,0.05 -0.48,0 -0.32,-0.36C73.24,153.35 75,151.72 76.65,150Z"
+      android:fillColor="#684621"/>
+  <path
+      android:pathData="M78.89,156a23.16,23.16 0,0 1,10.76 -7.36c0.39,-0.11 0.84,-0.56 1.18,0.12 0.44,0.87 -0.08,1 -0.77,1.22a21.23,21.23 0,0 0,-8.92 4.88,7.62 7.62,0 0,0 -1.76,1.95l-1.19,1.3c-0.3,0 -0.45,-0.06 -0.34,-0.39Z"
+      android:fillColor="#694722"/>
+  <path
+      android:pathData="M155.19,156.81l0.25,0.05c0.34,0.82 1.13,1.41 1.23,2.54 -1,-0.45 -1.14,-1.45 -1.83,-1.93v-0.29A0.42,0.42 0,0 1,155.19 156.81Z"
+      android:fillColor="#7c5b3c"/>
+  <path
+      android:pathData="M77.82,157.72l0.35,0.39a2.36,2.36 0,0 1,-1.07 1.29C76.94,158.6 77.41,158.18 77.82,157.72Z"
+      android:fillColor="#7f5f40"/>
+  <path
+      android:pathData="M84.44,160.62l-0.39,0.87c-0.51,0.13 -0.59,-0.14 -0.53,-0.56l0.59,-0.68A0.4,0.4 0,0 1,84.44 160.62Z"
+      android:fillColor="#876646"/>
+  <path
+      android:pathData="M72.2,155.55l0.32,0.36c-0.11,0.32 -0.28,0.8 -0.63,0.55S71.88,155.79 72.2,155.55Z"
+      android:fillColor="#816143"/>
+  <path
+      android:pathData="M142.65,108l8.11,1a1.62,1.62 0,0 1,1.88 0.34s0.08,0.08 0.12,0.08c3.34,0.84 3.34,0.84 3.34,4.42v1.72a0.35,0.35 0,0 1,-0.06 0.14c-3.13,2.72 -2.72,6.73 -3.69,10.2 -0.79,2.85 -1.22,5.83 -3.77,7.81 -4.87,3 -10.2,3.31 -15.64,2.47 -6.06,-0.94 -9.57,-5 -12.12,-10.2 -0.47,-1 -0.88,-2 -1.3,-3 -0.68,-0.53 -0.73,-1.36 -1,-2a1.86,1.86 0,0 0,-2 -1.47,1.72 1.72,0 0,0 -1.73,1.5 3.67,3.67 0,0 1,-1 2c-0.9,1.86 -1.68,3.78 -2.75,5.57a15.18,15.18 0,0 1,-12.25 7.8c-4.55,0.39 -9,0.14 -13.16,-2.23a8.21,8.21 0,0 1,-3.93 -5.36c-0.62,-2.9 -1.43,-5.75 -2,-8.65a5.56,5.56 0,0 0,-2.32 -4c-0.56,-1.67 -0.27,-3.4 -0.22,-5.09 0,-0.89 0.77,-1.41 1.73,-1.48 0.55,0 1.15,0.15 1.64,-0.27 2.72,-0.34 5.44,-0.68 8.16,-1a47.14,47.14 0,0 1,19.3 1.57c3.9,1.16 7.85,2.16 12,1.28 2.94,-0.64 5.84,-1.45 8.76,-2.19C133.39,107.82 138.05,108 142.65,108Z"
+      android:fillColor="#761022"/>
+  <path
+      android:pathData="M116.46,153.79c-0.15,-1 -0.31,-2 -0.43,-3.09a4.63,4.63 0,0 0,-3.27 -4.12,7.48 7.48,0 0,1 -5,-6.18 6.48,6.48 0,0 1,0.68 -4.23,18.25 18.25,0 0,1 5.74,-6.66c2,-1.36 3.44,-1.42 5.26,0.08 2.72,2.23 5.24,4.64 6.09,8.24 0.73,3.16 -0.5,6.8 -3.4,8 -3.87,1.56 -4.64,4.5 -4.86,8C117,154.19 116.69,154.27 116.46,153.79Z"
+      android:fillColor="#010101"/>
+  <path
+      android:pathData="M116.46,153.79a0.7,0.7 0,0 0,0.76 0,15.36 15.36,0 0,0 4.08,5.61c0.57,0.5 0.57,0.76 -0.1,1.23a7.63,7.63 0,0 1,-8.33 0.27c-0.76,-0.46 -1.05,-0.77 -0.22,-1.54a14.9,14.9 0,0 0,3.81 -5.58Z"
+      android:fillColor="#9d3922"/>
+  <path
+      android:pathData="M113.86,123.06c0.24,-0.84 0.45,-1.69 0.68,-2.53a2.26,2.26 0,0 1,4.24 0c0.25,0.84 0.47,1.68 0.68,2.52A13.38,13.38 0,0 0,113.86 123.06Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M155.19,156.81l-0.35,0.37a22,22 0,0 0,-11.39 -7.24c-0.46,-0.11 -0.93,-0.21 -0.68,-0.91s0.46,-0.68 1,-0.49A21.13,21.13 0,0 1,155.19 156.81Z"
+      android:fillColor="#694722"/>
+  <path
+      android:pathData="M84.44,160.62l-0.33,-0.34a20.29,20.29 0,0 1,7.11 -7.21c0.31,-0.2 0.68,-0.79 1.13,-0.1s-0.18,0.86 -0.57,1.07A22.8,22.8 0,0 0,84.44 160.62Z"
+      android:fillColor="#6b4925"/>
+  <path
+      android:pathData="M148.57,159.68A23.77,23.77 0,0 0,141.7 154c-0.33,-0.19 -0.8,-0.29 -0.45,-0.9s0.68,-0.33 1,-0.12a19.89,19.89 0,0 1,6.65 6.41C149,159.68 148.88,159.75 148.57,159.68Z"
+      android:fillColor="#6b4925"/>
+  <path
+      android:pathData="M148.58,159.68l0.34,-0.34a1.77,1.77 0,0 1,0.63 0.93c0.15,0.34 0,0.39 -0.32,0.34Z"
+      android:fillColor="#714f2c"/>
+  <path
+      android:pathData="M149.23,160.61l0.32,-0.34c0.26,0.28 0.73,0.68 0.35,1S149.37,160.93 149.23,160.61Z"
+      android:fillColor="#7f5f3b"/>
+  <path
+      android:pathData="M152.64,109.33a4.06,4.06 0,0 1,-1.88 -0.34A33.8,33.8 0,0 0,145 103.9c-0.31,-0.25 -0.8,-0.32 -0.75,-0.87 0.56,-0.56 0.2,-1.29 0.35,-1.93 0.68,-3 3.78,-4.59 7,-3.6a7.48,7.48 0,0 1,4.81 8.94A3.57,3.57 0,0 1,152.64 109.33Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M89.52,132.36a8.27,8.27 0,0 1,-5.19 -5.44A21.94,21.94 0,0 1,83.5 116a4.28,4.28 0,0 1,3.4 -3.62,31.36 31.36,0 0,1 19.13,1c3.92,1.5 4.94,3 4.32,7.07a13.55,13.55 0,0 1,-2.18 6.12,21.36 21.36,0 0,0 -3.71,4.55 2,2 0,0 1,-1.18 0.8,9.37 9.37,0 0,1 -2.18,-0.13 21.84,21.84 0,0 0,-9.14 0.34,15.46 15.46,0 0,1 -2.44,0.28Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M124.56,125.32a14.4,14.4 0,0 1,-1.67 -7.67,4.14 4.14,0 0,1 2.67,-3.56 35.21,35.21 0,0 1,9.39 -2.64c3.48,-0.62 6.8,0.17 10.2,0.68 1.43,1.5 1.57,3.48 1.85,5.35a24.4,24.4 0,0 1,-1.22 12.41,5.51 5.51,0 0,1 -1.18,2l-0.37,0.23a2.15,2.15 0,0 1,-0.62 0,33.83 33.83,0 0,0 -13.15,0l-0.68,-0.32C128.4,129.34 126.2,127.56 124.56,125.32Z"
+      android:fillColor="#b5885e"/>
+  <path
+      android:pathData="M144.58,131.9a27.31,27.31 0,0 0,2.27 -10.07,23.35 23.35,0 0,0 -1.06,-7.61c-0.23,-0.68 -0.44,-1.36 -0.68,-2 3.3,0.38 4.76,1.9 5,5.44a23.69,23.69 0,0 1,-1.17 9.63A7.87,7.87 0,0 1,144.58 131.9Z"
+      android:fillColor="#986c42"/>
+  <path
+      android:pathData="M130.44,132.11a20,20 0,0 1,10.81 -0.77,7.54 7.54,0 0,1 3,0.79C139.62,134 135,134.25 130.44,132.11Z"
+      android:fillColor="#ffeac1"/>
+  <path
+      android:pathData="M89.52,132.36a21.61,21.61 0,0 1,13.78 -0.51c-3.28,2.1 -6.89,1.85 -10.5,1.41A10.66,10.66 0,0 1,89.52 132.36Z"
+      android:fillColor="#ffeac1"/>
+  <path
+      android:pathData="M124.56,125.32c2.12,1.85 4.29,3.66 5.23,6.47A13.52,13.52 0,0 1,124.56 125.32Z"
+      android:fillColor="#f8e0bb"/>
+  <path
+      android:pathData="M104.48,131a7,7 0,0 1,3.71 -4.54A10.82,10.82 0,0 1,104.48 131Z"
+      android:fillColor="#f5ddb8"/>
+  <path
+      android:pathData="M106.58,123.61a6.37,6.37 0,1 1,-6.47 -6.42,6.44 6.44,0 0,1 6.47,6.41Z"
+      android:fillColor="#030403"/>
+  <path
+      android:pathData="M139.8,123.56a6.49,6.49 0,1 1,-6.61 -6.37h0.27A6.42,6.42 0,0 1,139.8 123.56Z"
+      android:fillColor="#030403"/>
+  <path
+      android:pathData="M100.18,119.62a2.33,2.33 0,0 1,2.33 2.22,2.38 2.38,0 0,1 -2.27,2.3 2.27,2.27 0,0 1,-2.31 -2.22h0A2.29,2.29 0,0 1,100.18 119.62Z"
+      android:fillColor="#fbfcfd"/>
+  <path
+      android:pathData="M133.52,124.14a2.22,2.22 0,0 1,-2.26 -2.2h0a2.18,2.18 0,0 1,2.07 -2.3h0.13a2.35,2.35 0,0 1,2.32 2.21A2.3,2.3 0,0 1,133.52 124.14Z"
+      android:fillColor="#fdfefe"/>
+  <path
+      android:pathData="M162.19,197.9c7.9,-1.08 15.8,-2.17 23.7,-3.21 6.8,-0.9 13.56,-1.75 20.33,-2.68a5.43,5.43 0,0 1,2.65 0.31l38.25,13.24c0.86,0.29 2,0 2.55,1.08 -12.63,2.57 -25.07,5.93 -37.62,8.84a6.24,6.24 0,0 1,-3.7 -0.24C194,210 179.58,204.71 165.2,199.46 164.14,199.07 163,198.9 162.19,197.9Z"
+      android:fillColor="#849d6d"/>
+  <path
+      android:pathData="M245.55,224.06l9.72,2.52c0.51,0.13 1.1,0.08 1.29,0.76 -5.18,1.32 -9.9,3.81 -14.83,5.77q-8.34,3.33 -16.6,6.88a5.5,5.5 0,0 1,-3.89 0.26c-0.75,-0.22 -1.51,-0.43 -2.26,-0.68 -17.95,-6 -36,-11.77 -54,-17.77a7,7 0,0 1,-2.72 -1c2.58,-0.49 5.17,-1 7.75,-1.46 0.86,-0.17 1.81,-0.07 2.52,-0.75 1,-0.63 1.89,0 2.72,0.32q15.42,5.72 30.75,11.64a10.48,10.48 0,0 0,6.7 0.42q14.92,-3.74 29.88,-7.3a5.05,5.05 0,0 1,2 -0.26A1.59,1.59 0,0 1,245.55 224.06Z"
+      android:fillColor="#4b6082"/>
+  <path
+      android:pathData="M162,212.59c2.21,-1.05 1.82,-3.24 2.09,-5.05a33.11,33.11 0,0 0,0.05 -4.88c0.86,-0.56 1.65,0 2.4,0.26q17.06,6.41 34.12,12.76c2.83,1 5.7,2 8.52,3.11 0.91,0.36 1.82,0.73 1.94,1.9 0.25,2.64 -0.35,5.21 -0.74,7.78a1.61,1.61 0,0 1,-1.19 1.42,6.84 6.84,0 0,1 -3.32,-0.8q-20.65,-7.76 -41.31,-15.6A12.36,12.36 0,0 1,162 212.59Z"
+      android:fillColor="#f8f7f3"/>
+  <path
+      android:pathData="M162.32,220.85a7,7 0,0 1,2.83 0.51q16.23,5.37 32.48,10.72c7.34,2.42 14.7,4.76 22,7.26a8.63,8.63 0,0 0,6.6 -0.26c8.14,-3.51 16.37,-6.86 24.53,-10.26 1.11,-0.46 2.25,-0.87 3.32,-1.42a2.67,2.67 0,0 1,2.43 -0.07,12.47 12.47,0 0,1 0.12,16.56c-0.9,1 -2.21,1.18 -3.35,1.69 -0.88,0.39 -1.8,0.72 -2.72,1.08a6.93,6.93 0,0 1,-2.53 1.41c-2.62,1.17 -5.38,2 -8,3.25 -5.38,1.86 -10.65,4 -16,6.12a3.7,3.7 0,0 1,-0.55 0.14,9.14 9.14,0 0,1 -4.35,-1c-1.52,-0.58 -3.07,-1.05 -4.61,-1.57 -1.74,-0.68 -3.53,-1.18 -5.28,-1.78 -4.69,-1.82 -9.49,-3.28 -14.23,-5 -6.44,-2.28 -12.92,-4.43 -19.38,-6.71 -1.72,-0.65 -3.47,-1.18 -5.21,-1.75s-3.57,-1.41 -5.44,-1.93a21.26,21.26 0,0 1,-2.35 -0.86c-0.8,-0.42 -1.6,-0.87 -1.41,-2a1.73,1.73 0,0 1,2 -1c12.34,4.15 24.63,8.46 36.94,12.72 7,2.42 14,4.76 20.95,7.25a4.1,4.1 0,0 0,2 0.28,5.51 5.51,0 0,0 1.32,-0.31c9.22,-3.59 18.48,-7.12 27.69,-10.76a7.55,7.55 0,0 0,5 -8.27,11.94 11.94,0 0,0 -0.35,-2.14 6.45,6.45 0,0 0,-0.68 -1.65,1.43 1.43,0 0,0 -2.29,-0.81c-0.53,0.25 -1.08,0.49 -1.62,0.76q-13.17,5.4 -26.33,10.88a7.51,7.51 0,0 1,-5.61 0.17C204.68,236.86 189,232 173.46,226.85c-2.52,-0.83 -5.07,-1.59 -7.61,-2.4a11.66,11.66 0,0 1,-2.93 -1.36C162.05,222.57 160.92,222.11 162.32,220.85Z"
+      android:fillColor="#435674"/>
+  <path
+      android:pathData="M162,212.59a3.25,3.25 0,0 1,2.44 0.36l43.31,16.32c0.33,0.12 0.68,0.2 1,0.31 0.8,0.41 1.36,-0.28 2.08,-0.4q17.16,-4.29 34.35,-8.42c0.68,-0.17 1.41,-0.35 2.11,-0.54a2.67,2.67 0,0 0,2 -2.08,12 12,0 0,0 0.13,-7c-0.87,-2.14 -1.09,-2.25 -3.22,-1.75q-17.13,4.08 -34.23,8.21a6.28,6.28 0,0 1,-3.9 -0.23c-10.79,-4.11 -21.65,-8 -32.47,-12.1 -3.51,-1.31 -7,-2.55 -10.54,-3.92a3.26,3.26 0,0 1,-1.69 -1c-0.6,-0.74 -3.08,-0.56 -1.22,-2.51l24.15,8.79c7.76,2.85 15.51,5.74 23.3,8.51 1.53,0.55 3.07,-0.38 4.55,-0.73 11.14,-2.63 22.24,-5.35 33.33,-8.07a3.68,3.68 0,0 1,2.12 0.24c4.13,4.39 3,11.27 0.94,15.13 -0.4,0.74 -1.22,0.68 -1.9,0.89 -0.93,0.26 -1.87,0.5 -2.8,0.74a2,2 0,0 1,-1.29 0.36c-11.07,2.68 -22.15,5.35 -33.21,8.08a6.18,6.18 0,0 1,-3.87 -0.2q-15.74,-6 -31.5,-11.91c-1.12,-0.42 -2.3,-0.73 -3.44,-1.09 -3,-1.69 -6.3,-2.54 -9.45,-3.82C162,214.36 161.31,213.86 162,212.59Z"
+      android:fillColor="#7a986d"/>
+  <path
+      android:pathData="M256.49,231a2.3,2.3 0,0 1,0.64 1.47c-2.4,1.56 -5.16,2.35 -7.75,3.48 -8.16,3.56 -16.36,7 -24.52,10.55a1.37,1.37 0,0 1,-0.57 0c-4.5,-1.8 -9.16,-3.11 -13.75,-4.65C196,237 181.43,232 166.83,227.15c-0.85,-0.29 -1.71,-0.73 -2.6,-0.11 -0.86,0.05 -1.15,-0.68 -1.59,-1.19 1.68,-0.72 1.22,-1.73 0.38,-2.8l28.66,9.19q15,4.8 29.86,9.69a4.63,4.63 0,0 0,3.47 -0.15c8.54,-3.56 17.11,-7.06 25.67,-10.58 0.55,-0.23 1.14,-0.39 1.7,-0.59a5,5 0,0 1,4.1 0.39Z"
+      android:fillColor="#edece5"/>
+  <path
+      android:pathData="M240,251a53.89,53.89 0,0 1,8 -3.28,11.92 11.92,0 0,0 2.56,-0.74c3.67,1.2 5,6.87 4.2,10 -0.09,0.35 -0.17,0.68 -0.27,1.05 -0.95,3 -2.39,5 -6.12,5.57 -18.82,2.88 -37.59,6.12 -56.37,9.25a2.28,2.28 0,0 1,-2.26 -0.6q-15.8,-15.14 -31.64,-30.23c-1.51,-1.44 -1.42,-2 0.33,-2.6a2.1,2.1 0,0 1,1.36 0.77c2.26,2.47 4.9,4.51 7.26,6.86 6.12,6.12 12.54,11.93 18.75,18a70.91,70.91 0,0 0,5.35 4.9,3 3,0 0,0 2.28,-0.07l53.4,-8.84c4.4,-0.73 6.12,-3.13 5.37,-7.61 -0.82,-3.06 -1.21,-3.32 -4.31,-2.86l-5.57,0.8A2.53,2.53 0,0 1,240 251Z"
+      android:fillColor="#9e5d74"/>
+  <path
+      android:pathData="M191,270.3c-4.26,-4 -8.55,-8 -12.79,-12q-9.87,-9.37 -19.68,-18.79a9.71,9.71 0,0 0,0.87 -7.35c1.85,0.49 2.47,1.36 2.23,3.06 0.12,1.08 1,1.36 1.82,1.64 0.6,0.21 1.19,0.47 1.77,0.68 2,0.81 3.36,2.53 4.9,3.91 3.62,3.29 7.22,6.59 10.78,9.94 3.25,3.05 6.68,5.93 9.83,9.1a4.59,4.59 0,0 1,1.4 1.86,14.19 14.19,0 0,1 0.06,6.05C192,269.13 192.16,270.14 191,270.3Z"
+      android:fillColor="#f8f7f3"/>
+  <path
+      android:pathData="M163.41,200.41 L183,207.55q12.69,4.68 25.33,9.41a5.73,5.73 0,0 0,3.68 0.2q17.16,-4.17 34.35,-8.29c2.5,-0.6 2.6,-0.53 3.5,2.15 -12.24,2.84 -24.39,5.92 -36.59,8.84a16.82,16.82 0,0 0,-2 0.68,0.59 0.59,0 0,1 -0.56,-0.09c-0.31,-1.31 -1.59,-1.21 -2.46,-1.54q-21.76,-8.16 -43.52,-16.18a4.94,4.94 0,0 0,-0.53 -0.1Z"
+      android:fillColor="#edece5"/>
+  <path
+      android:pathData="M159,229.25 L157.69,228a1.19,1.19 0,0 1,-0.37 -1.6c0.46,-0.73 1.08,-0.62 1.68,-0.14 2,1.25 4.2,2.42 5.14,4.86a2.82,2.82 0,0 1,-0.24 1.62c-0.74,0.68 -1.36,0.07 -1.88,-0.3a10.83,10.83 0,0 1,-3.05 -3.2Z"
+      android:fillColor="#9f5f75"/>
+  <path
+      android:pathData="M163.8,231.1c-1,-2.17 -3.31,-3.1 -4.76,-4.83l3.62,-0.4c1,-0.17 1.14,0.58 1.43,1.2C165,228.82 164.87,229.93 163.8,231.1Z"
+      android:fillColor="#b27787"/>
+  <path
+      android:pathData="M159,229.25c1.06,0.94 2.11,1.89 3.2,2.78 0.42,0.33 0.74,1 1.49,0.68 0.39,0.64 -0.14,1.1 -0.32,1.62a1.56,1.56 0,0 0,-1.75 0.83c0,-1.55 -1.23,-2.22 -2.23,-3C159.55,231.11 159.07,230.21 159,229.25Z"
+      android:fillColor="#eae9e4"/>
+  <path
+      android:pathData="M250.63,247c-0.53,1.36 -1.7,0.51 -2.55,0.75a7.45,7.45 0,0 1,2.55 -1.07V247Z"
+      android:fillColor="#9b6e81"/>
+  <path
+      android:pathData="M244.61,223.76a1.55,1.55 0,0 1,1.29 -0.36l-0.35,0.68A0.94,0.94 0,0 1,244.61 223.76Z"
+      android:fillColor="#d0d4d2"/>
+  <path
+      android:pathData="M210.66,220.48H211c1,1.74 0.5,3.61 0.38,5.44a18,18 0,0 1,-0.68 3.7,1.51 1.51,0 0,1 -1.92,0c2,-0.39 1.13,-2.19 1.41,-3.26A17.9,17.9 0,0 0,210.66 220.48Z"
+      android:fillColor="#f1f1ea"/>
+  <path
+      android:pathData="M163.37,234.33c-0.49,-0.68 0.3,-1.06 0.32,-1.62s0.07,-1.07 0.11,-1.61c0.55,-1.31 0.15,-2.68 0.27,-4s0.61,-1.16 1.53,-0.84c3.24,1.13 6.52,2.19 9.78,3.28L209,240.83c4.45,1.5 8.92,2.94 13.36,4.45a16.92,16.92 0,0 1,2.1 1,11.15 11.15,0 0,1 -1.08,8.4 1.12,1.12 0,0 1,-1.15 0.17q-29,-10.11 -58.05,-20.15c-0.27,-0.12 -0.54,-0.24 -0.8,-0.38Z"
+      android:fillColor="#f9f9f6"/>
+  <path
+      android:pathData="M252.76,253.2c0.77,2.68 -0.25,5 -1.57,7.2 -0.39,0.68 -1.13,0.64 -1.76,0.75q-27.17,4.53 -54.31,9c-0.6,0.1 -1.2,0.11 -1.8,0.16 -1.15,0.32 -1.89,0.3 -1.45,-1.3 0.63,-2.33 0.29,-4.72 0.13,-7.1a2.92,2.92 0,0 1,2.27 -1c8.56,-1.27 17.14,-2.44 25.69,-3.76 1.27,-0.2 2.51,0.53 3.76,0a0.16,0.16 0,0 1,0.21 -0.07h0c6.44,-2 13.19,-2.2 19.77,-3.4 2.2,-0.39 4.42,-0.65 6.63,-1A2.87,2.87 0,0 1,252.76 253.2Z"
+      android:fillColor="#f8f7f3"/>
+  <path
+      android:pathData="M224.82,246.29c3,-1.95 6.42,-3 9.65,-4.42 7.11,-3.13 14.29,-6.12 21.45,-9.11a5.59,5.59 0,0 1,1.21 -0.28c1.36,3.59 0.32,6.74 -1.8,9.7a2.4,2.4 0,0 1,-1.2 0.77l-29.06,11.3a2,2 0,0 1,-0.53 0.08c-0.77,0 -0.74,-0.5 -0.62,-1A64.8,64.8 0,0 0,224.82 246.29Z"
+      android:fillColor="#f9f9f6"/>
+  <path
+      android:pathData="M223.72,257.21c-2.17,0.36 -4.33,0.76 -6.51,1.05 -5.65,0.75 -11.3,1.52 -16.92,2.47 -2.72,0.45 -5.48,0.68 -8.16,1.2 -0.13,0.18 -0.25,0.18 -0.37,0 -2,-1.54 -3.69,-3.44 -5.58,-5.12 -5.44,-4.88 -10.71,-10 -16.16,-15 -1.6,-1.44 -3.14,-3 -4.76,-4.36a24.09,24.09 0,0 1,5.34 1.9c3.21,2 5.76,4.76 8.53,7.26 3.22,2.9 6.59,5.67 9.61,8.8a5.47,5.47 0,0 0,5.26 1.5c6.08,-1 12.19,-1.73 18.3,-2.47a7.08,7.08 0,0 1,2.34 0l6.84,2.27A4.56,4.56 0,0 0,223.72 257.21Z"
+      android:fillColor="#edece5"/>
+  <path
+      android:pathData="M175.73,241.17l15.06,5.1q9.41,3.25 18.77,6.56c-0.05,0.9 -0.81,0.78 -1.36,0.87 -5.08,0.8 -10.2,1.44 -15.27,2.11a3.68,3.68 0,0 1,-3 -1c-4.5,-3.85 -8.77,-8 -13.24,-11.86C176.18,242.52 175.53,242.05 175.73,241.17Z"
+      android:fillColor="#b17586"/>
+  <path
+      android:pathData="M175.73,241.17c1.54,2.13 3.77,3.55 5.62,5.37 2.84,2.78 6,5.27 8.9,8a2.87,2.87 0,0 0,2.44 0.89l16.6,-2.32c0.1,0 0.18,-0.15 0.27,-0.23l5,1.72c-7.67,1.06 -15.34,2.1 -23,3.17a1.43,1.43 0,0 1,-1.36 -0.3l-19.72,-18A22.9,22.9 0,0 1,175.73 241.17Z"
+      android:fillColor="#9e5d74"/>
+  <path
+      android:pathData="M252.76,253.2c-4,0.15 -8,1 -11.93,1.53 -4.87,0.63 -9.72,1.39 -14.58,2.1l-2.3,0.31A169.56,169.56 0,0 1,240 251a60.14,60.14 0,0 0,8.25 -1C251.54,249.55 252.06,249.9 252.76,253.2Z"
+      android:fillColor="#edece5"/>
+  <path
+      android:pathData="M224.82,246.29a22.64,22.64 0,0 1,-0.64 6.76,1 1,0 0,0 0.35,1.28 1.25,1.25 0,0 1,-1.17 0.37,40.46 40.46,0 0,0 1.09,-8.41Z"
+      android:fillColor="#f1f1ec"/>
+  <path
+      android:pathData="M256.49,231c-1.4,0.24 -2.72,-0.34 -4.08,-0.38 0.47,-0.23 1,-0.45 1.41,-0.72C255.19,229.07 256.12,229.35 256.49,231Z"
+      android:fillColor="#eaebea"/>
+  <path
+      android:pathData="M210.65,229.59a0.9,0.9 0,0 1,-0.34 -1.11c0.87,-2.61 0.64,-5.32 0.68,-8 0.62,-1.27 1.93,-1 2.95,-1.26 6.3,-1.59 12.62,-3.09 18.92,-4.63 5,-1.23 10.06,-2.45 15.07,-3.72a2.22,2.22 0,0 1,1.9 0.15c1.16,2.9 0.55,5.7 -0.43,8.49a1.48,1.48 0,0 1,-1.16 1Z"
+      android:fillColor="#f8f7f3"/>
+  <path
+      android:pathData="M191.73,261.92h0.37a15.24,15.24 0,0 1,0 7c-0.3,1.11 0.1,1.57 1.22,1.43 -0.78,0.3 -1.56,0.68 -2.33,0a10,10 0,0 0,0.92 -5.86C191.82,263.59 191.79,262.75 191.73,261.92Z"
+      android:fillColor="#f1efeb"/>
+</vector>
Index: app/src/main/java/org/oppia/app/recyclerview/RecyclerViewBindingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/recyclerview/RecyclerViewBindingAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/recyclerview/RecyclerViewBindingAdapter.kt	(date 1584626399000)
@@ -17,6 +17,16 @@
   }
 }
 
+/**
+ * Binds the specified generic data to the adapter of the [RecyclerView]. This is called by
+ * Android's data binding framework and should not be used directly. For reference:
+ * https://android.jlelse.eu/1bd08b4796b4.
+ */
+@BindingAdapter("list")
+fun <T : Any> bindToRecyclerViewAdapterWithoutLiveData(recyclerView: RecyclerView, itemList: List<T>) {
+  bindToRecyclerViewAdapter(recyclerView, itemList)
+}
+
 /** A variant of [bindToRecyclerViewAdapterWithLiveData] that instead uses an observable list. */
 @BindingAdapter("data")
 fun <T : Any> bindToRecyclerViewAdapterWithObservableList(recyclerView: RecyclerView, dataList: ObservableList<T>) {
Index: app/src/main/res/drawable/ic_edit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_edit.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_edit.xml	(date 1584626399000)
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+  android:width="24dp"
+  android:height="24dp"
+  android:viewportWidth="383.947"
+  android:viewportHeight="383.947">
+  <path
+    android:fillColor="#00645C"
+    android:pathData="M0,303.947l0,80l80,0l236.053,-236.054l-80,-80z" />
+  <path
+    android:fillColor="#00645C"
+    android:pathData="M377.707,56.053L327.893,6.24c-8.32,-8.32 -21.867,-8.32 -30.187,0l-39.04,39.04l80,80l39.04,-39.04C386.027,77.92 386.027,64.373 377.707,56.053z" />
+</vector>
Index: app/src/main/res/drawable/ic_edit_18.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_edit_18.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_edit_18.xml	(date 1584626399000)
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+  android:width="18dp"
+  android:height="18dp"
+  android:viewportWidth="383.947"
+  android:viewportHeight="383.947">
+  <path
+    android:fillColor="#00645C"
+    android:pathData="M0,303.947l0,80l80,0l236.053,-236.054l-80,-80z" />
+  <path
+    android:fillColor="#00645C"
+    android:pathData="M377.707,56.053L327.893,6.24c-8.32,-8.32 -21.867,-8.32 -30.187,0l-39.04,39.04l80,80l39.04,-39.04C386.027,77.92 386.027,64.373 377.707,56.053z" />
+</vector>
Index: app/src/main/java/org/oppia/app/profile/PinPasswordActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/PinPasswordActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/PinPasswordActivityPresenter.kt	(date 1584626399000)
@@ -51,6 +51,7 @@
       pinViewModel.showPassword.set(!pinViewModel.showPassword.get()!!)
     }
 
+    binding.inputPin.requestFocus()
     binding.inputPin.addTextChangedListener(object: TextWatcher {
       var wrong = false
       override fun onTextChanged(pin: CharSequence?, start: Int, before: Int, count: Int) {
@@ -64,7 +65,7 @@
               profileManagementController.loginToProfile(ProfileId.newBuilder().setInternalId(profileId).build())
                 .observe(activity, Observer {
                 if (it.isSuccess()) {
-                  activity.startActivity(Intent(activity, HomeActivity::class.java))
+                  activity.startActivity((HomeActivity.createHomeActivity(activity, profileId)))
                 }
               })
             } else {
Index: app/src/main/java/org/oppia/app/testing/TopicTestActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/TopicTestActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/TopicTestActivity.kt	(date 1584626399000)
@@ -5,56 +5,49 @@
 import org.oppia.app.home.RouteToExplorationListener
 import org.oppia.app.player.exploration.ExplorationActivity
 import org.oppia.app.story.StoryActivity
-import org.oppia.app.topic.RouteToConceptCardListener
 import org.oppia.app.topic.RouteToQuestionPlayerListener
+import org.oppia.app.topic.RouteToReviewCardListener
 import org.oppia.app.topic.RouteToStoryListener
 import org.oppia.app.topic.TopicActivityPresenter
 import org.oppia.app.topic.TopicFragment
-import org.oppia.app.topic.conceptcard.ConceptCardFragment
-import org.oppia.app.topic.conceptcard.ConceptCardListener
 import org.oppia.app.topic.questionplayer.QuestionPlayerActivity
+import org.oppia.app.topic.reviewcard.ReviewCardActivity
 import org.oppia.domain.topic.TEST_TOPIC_ID_0
 import javax.inject.Inject
 
 /** The activity for testing [TopicFragment]. */
-class TopicTestActivity : InjectableAppCompatActivity(), RouteToQuestionPlayerListener, RouteToConceptCardListener,
-  RouteToStoryListener, RouteToExplorationListener, ConceptCardListener {
+class TopicTestActivity : InjectableAppCompatActivity(), RouteToQuestionPlayerListener,
+  RouteToStoryListener, RouteToExplorationListener, RouteToReviewCardListener {
+
   @Inject lateinit var topicActivityPresenter: TopicActivityPresenter
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
-    topicActivityPresenter.handleOnCreate(topicId = TEST_TOPIC_ID_0, storyId = "")
+    topicActivityPresenter.handleOnCreate(internalProfileId = 0, topicId = TEST_TOPIC_ID_0, storyId = "")
   }
 
   override fun routeToQuestionPlayer(skillIdList: ArrayList<String>) {
     startActivity(QuestionPlayerActivity.createQuestionPlayerActivityIntent(this, skillIdList))
   }
 
-  override fun routeToStory(storyId: String) {
-    startActivity(StoryActivity.createStoryActivityIntent(this, storyId))
-  }
-
-  override fun routeToConceptCard(skillId: String) {
-    if (getConceptCardFragment() == null) {
-      val conceptCardFragment: ConceptCardFragment = ConceptCardFragment.newInstance(skillId)
-      conceptCardFragment.showNow(supportFragmentManager, TAG_CONCEPT_CARD_DIALOG)
-    }
+  override fun routeToStory(internalProfileId: Int, topicId: String, storyId: String) {
+    startActivity(StoryActivity.createStoryActivityIntent(this, internalProfileId, topicId, storyId))
   }
 
-  override fun dismiss() {
-    getConceptCardFragment()?.dismiss()
+  override fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    startActivity(
+      ExplorationActivity.createExplorationActivityIntent(
+        this,
+        internalProfileId,
+        topicId,
+        storyId,
+        explorationId
+      )
+    )
   }
 
-  override fun routeToExploration(explorationId: String, topicId: String?) {
-    startActivity(ExplorationActivity.createExplorationActivityIntent(this, explorationId, topicId))
-  }
-
-  private fun getConceptCardFragment(): ConceptCardFragment? {
-    return supportFragmentManager.findFragmentByTag(TAG_CONCEPT_CARD_DIALOG) as ConceptCardFragment?
-  }
-
-  companion object {
-    internal const val TAG_CONCEPT_CARD_DIALOG = "CONCEPT_CARD_DIALOG"
+  override fun routeToReviewCard(topicId: String, subtopicId: String) {
+    startActivity(ReviewCardActivity.createReviewCardActivityIntent(this, topicId, subtopicId))
   }
 }
Index: app/src/main/res/drawable/ic_landscape_onboarding_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_landscape_onboarding_3.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_landscape_onboarding_3.xml	(date 1584626399000)
@@ -0,0 +1,75 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="320dp"
+    android:height="360dp"
+    android:viewportWidth="320"
+    android:viewportHeight="360">
+  <path
+      android:pathData="M59.44,161.22C25,180.14 2.47,218.75 -18.71,256c-11.7,20.59 -23,40.77 -35.66,57L-200,167.41 139.41,-172 293.68,-17.73c-0.58,19.69 -7.8,46.48 -29.14,82a173.16,173.16 0,0 1,-25.72 33.65C186.06,150.64 124.68,125.38 59.44,161.22Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="103.64574"
+          android:startX="246.14587"
+          android:endY="49.519142"
+          android:endX="-72.72053"
+          android:type="linear">
+        <item android:offset="0" android:color="#994662AD"/>
+        <item android:offset="1" android:color="#192E4B9D"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+      android:pathData="M20.74,388.16 L-200,167.41 139.41,-172 305,-6.37c11.48,37 13.78,77.28 -7.34,112.39C239.64,202.58 114.79,127.56 51,190.13 21.8,218.72 26,256.74 31.6,293.39c5.56,36.4 12.47,71.44 -10.62,94.53Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="167.82504"
+          android:startX="310.3252"
+          android:endY="65.35584"
+          android:endX="-77.24843"
+          android:type="linear">
+        <item android:offset="0" android:color="#664662AD"/>
+        <item android:offset="1" android:color="#CC2E4B9D"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path android:fillColor="#010101" android:pathData="M94.9,178.9C81,164 81.8,143.1 97,128c9.2,-9.2 20.2,-15.2 33.3,-17c0.7,-0.1 1.3,-0.3 1.4,-1h20.9c10.7,2.2 21,7.5 32.5,3.6c-0.2,3.1 -3,3.1 -3.9,5.3c5.2,0.5 10.1,0.6 15.7,-1.6c-0.3,0.8 -0.7,1.5 -1.2,2.2c-2.3,2.1 -6,3.8 -6.4,6.2c-0.3,1.9 3.6,4.3 5.2,6.8c4.8,7.1 9,14.4 10.1,23.3c0.9,5.6 -0.3,11.3 -3.3,16c-1,1.4 -1.6,3.1 -3.5,3.7c-3.1,0.4 -3.3,-2 -3.9,-4c-3.2,-10.8 -10,-18.8 -19.5,-24.6c-2.2,-1.3 -3.8,-2 -3.9,1.8c-0.2,5.6 -3.7,8.9 -8.7,10.8c-5.2,2 -10.6,1.9 -16.1,1.4c-4.7,-0.8 -9.3,-2.3 -13.9,-3.6c-6.9,-2 -12.6,-0.1 -17.8,4.6c-1.3,1.2 -2.3,3.9 -4.7,2.5c-2.4,-1.4 -1.3,-3.8 -1.1,-5.9c0.3,-1.2 0.3,-2.4 0.1,-3.7c-6.6,5.3 -8,13 -10.6,20.2C97,176.4 97.3,178.8 94.9,178.9z"/>
+  <path android:fillColor="#EFE6E6" android:pathData="M273.9,245.3c-6.7,7.3 -5.7,15.9 -4.2,24.6c0.5,2.6 -1.7,4.1 -2.6,6.2l-0.3,0.7c-1,1.2 -2.5,1.7 -4,1.5c-6.7,-0.9 -13.4,-0.3 -19.9,1.7c-1.1,0.5 -2.3,0.5 -3.4,0c-8.1,-4.3 -16.7,-1.4 -25,-1.5c-5.6,0 -11.1,2.8 -16.8,0.2c-1.4,-0.6 -3.2,0.3 -4.8,0.9c-2.8,1 -5.5,1.1 -8,-0.8c-1.4,-1.2 -2.4,-2.7 -3.1,-4.4c-1.8,-4.3 -1.3,-5.7 3.1,-8.2c14,-1 28.1,-0.4 42.1,-0.3c11.4,0 22.8,-0.3 34.2,-0.1c3.9,0.1 4.6,-2.6 4.9,-5.5c0.3,-2.9 1.6,-6.5 -2.7,-8c-2.2,-0.8 -4.5,-2 -6.7,-1.3c-5.3,1.5 -10.8,1.3 -16,-0.4c-6.9,-2 -14.1,1 -21.1,-1c-2.1,-0.6 -4,1.1 -5.8,2.3c-2.5,1.7 -5.4,2.2 -8,0.7c-6.1,-3.4 -12.7,-2.4 -19.2,-2.2c-6.7,-0.1 -8.8,-2.1 -8.6,-7.9c0.5,-0.7 1.4,-1 2.2,-0.7c6.2,3.7 13.2,2 19.8,2.9c1.1,0.2 2.6,-0.3 3.4,0.5c4.2,4 8.2,2.5 12.4,-0.1c1.3,-0.8 2.8,-1.1 4.3,-0.9c8.6,1.2 17.6,-1.2 26,2.1c1.2,0.5 2.6,0.6 3.9,0.2c4.4,-1.7 9.2,-1.6 13.6,0.3c2.3,1 3.7,-0.5 5.1,-2s2.5,-3.8 5.2,-2.4L273.9,245.3z"/>
+  <path android:fillColor="#F1E9E8" android:pathData="M273.9,242.3c-2.6,0.1 -3.3,2.3 -4.6,4c-1.7,2.2 -3.2,3.7 -6.5,1.7c-3.1,-2 -7.1,-2.3 -10.4,-0.7c-5.5,2.6 -10.4,-1.9 -15.9,-1.5c-6.6,0.6 -13.3,-0.6 -19.9,0.4c-0.3,0.1 -0.8,0 -1,0.1c-4.2,3.8 -7.7,4.1 -12.6,0.2c-2.7,-2.1 -7.9,-0.9 -11.9,-0.9c-4.7,-0.1 -8.8,-0.5 -12.4,-3.3c-2.4,-3.4 -0.9,-6.4 1.3,-8.9c2.2,-2.5 5.2,-2.4 8.2,-1.1c1.2,0.5 2.3,1.4 3.7,1.1c1.2,-0.2 2.4,-0.6 3.6,-0.1l2.4,-0.1c3.3,0.5 6.6,-1 8.5,-3.8c1.3,1 2.4,2.3 4.3,2c0.4,0.6 0.5,1.2 0.4,1.9c-0.1,2 0.2,3.8 2.4,4.2c2.1,0.4 2.9,-1.2 3.6,-2.7c0.3,-0.6 0.7,-1.1 1.2,-1.5c1.2,0.8 1.8,5.1 4.1,0.8c1.4,-1.3 3.3,-2 5.3,-1.8c1.7,0.1 2.6,-0.8 3.5,-2c2.1,1.1 0.1,4 2.2,5c0.4,0.3 0.8,0.6 1.1,1c1.2,1.6 2.3,3.7 4.7,2.6s1.4,-3.3 0.9,-5.2c-0.1,-0.5 -0.1,-1 0.2,-1.4c2.8,1.7 4.8,0.9 6.2,-1.9c2.9,1.3 6.8,0.1 8.6,3.8c3.5,-0.4 6.9,-1 10.3,-1.8c4.6,-1.2 6.2,3.3 8.8,5.8L273.9,242.3z"/>
+  <path android:fillColor="#B44A44" android:pathData="M192.5,234.5c-0.9,0.8 -1.9,1.6 -3,0.5c-2.3,-2.2 -4.7,-3.6 -7.7,-1.6c-3.4,2.1 -3.8,5.4 -3.3,8.9c0.1,4.9 2.6,7.3 7.5,7.3c-0.7,5.9 1.1,12 -1.6,17.6c-3.6,3.3 -3.5,4.6 0.9,10.8c1.1,5 2.1,10.1 0.9,15.2c-2.8,2.7 -3.4,5.5 -0.7,8.7c0.6,0.9 1,2 1.1,3.2c0.4,4.8 0.3,9.7 -0.2,14.5c-1.7,2.4 -3,5.2 -5.3,7.2l-19.6,-0.3c-0.5,-0.4 -0.8,-0.9 -1,-1.4c-0.9,-5 -0.3,-10 -0.5,-15c-0.1,-2.1 0,-4.2 0,-6.3c-2.1,-13 -0.1,-26.3 -1.9,-39.3c-0.1,-8.6 -0.2,-17.1 0,-25.7c0.1,-5.1 -1.3,-10.1 -1.1,-15.2c0.2,-6.5 0.5,-7.3 6.6,-9.2c3.8,-1.2 7.3,-4.3 11.7,-1.9c5.5,2.8 10.2,6.9 13.7,12C190.1,227.9 192.8,230.7 192.5,234.5z"/>
+  <path android:fillColor="#E5C5B0" android:pathData="M175.5,212.4c-5.8,-0.1 -10.5,3.6 -15.9,4.8c-1.8,0.4 -1.2,2.9 -1,4.4c1.1,12.5 0.9,25.1 1.1,37.6c0,1.6 0,3.3 -0.1,4.9c-3.1,-0.5 -2.5,-3.1 -2.5,-5c-0.1,-10.9 -0.1,-21.7 -1,-32.6c-0.5,-6.2 -0.2,-6.2 -6.2,-6.9c-0.8,-0.1 -1.6,-0.4 -2.3,-0.8c-2.3,-4.2 -1.8,-8.4 -0.3,-12.7c2.6,-2.4 6.4,-2.2 9.2,-3.9c2,-1.2 5.4,-1.3 4.7,-5c-1.1,-1.6 -2.2,-3.6 -4.5,-2.8c-2.2,0.7 -2.6,2.7 -2.5,4.8c0.1,1.3 0.2,2.6 -0.8,3.7c-3.4,2.1 -7.1,2 -10.8,1.8c-1.4,-0.1 -3,-0.2 -3.1,-2.3c5.5,-1.1 6,-4.7 5.8,-9.7c-0.4,-9.2 -1.6,-18.4 -1.2,-27.7c0.1,-2 -0.3,-4 1.6,-5.4c4.7,-0.6 9.5,0.4 14.2,-1c7.9,-2.5 10.8,-7.4 8.8,-15.2c11.1,1.9 24.9,17.1 26.5,28.1c0.3,2.3 1,3.2 3.2,3.2c-0.6,5 -1.2,9.9 -2.9,14.7c-0.8,2.2 -1.8,4.2 -4,5.2c-3.8,5.9 -8.7,10.9 -14.4,14.9C176.1,210.2 174.4,210.6 175.5,212.4z"/>
+  <path android:fillColor="#EDD0BF" android:pathData="M191.4,194.6c3,-4.5 4.7,-9.8 4.9,-15.2c0,-1.8 0.7,-3.5 2.1,-4.7c1,-1 2,-2 2.9,-3c-0.3,1.5 0.2,3.1 1.5,4.1c5.8,5.4 4.7,14.2 -1.9,18.6C197.6,196.5 194.5,194.7 191.4,194.6z"/>
+  <path android:fillColor="#E4473C" android:pathData="M218.2,233.4c-0.3,3.4 -1.1,6.7 -5.4,5.6c-4,-1 -3.9,-4.2 -2.3,-7.5C213.7,229.5 216.3,230.2 218.2,233.4z"/>
+  <path android:fillColor="#E4453A" android:pathData="M240.1,232.4c1.9,2.2 3.6,4.5 1,7.2c-1,1 -2.2,2.1 -3.9,1.4c-2.4,-0.8 -4,-3.1 -3.9,-5.6C234.6,232.2 237.2,232.1 240.1,232.4z"/>
+  <path android:fillColor="#E65343" android:pathData="M231.1,230.4c0.2,2.1 0.4,4.1 -2.8,3.1c-2.1,-0.6 -3.9,1.4 -6,0.7c-0.5,-2.7 0.1,-4.9 2.9,-6.1C227.9,227 229.4,228.8 231.1,230.4z"/>
+  <path android:fillColor="#E65244" android:pathData="M206.1,229.5c-1.9,5.9 -3.2,6.5 -8.5,3.8C198.7,227.5 201.1,226.4 206.1,229.5z"/>
+  <path android:fillColor="#E75E4D" android:pathData="M254.8,234.3c-2.1,-1 -4.1,-2.2 -6.5,-1.9c-1.4,0.2 -2.2,-0.4 -2,-1.9c1.5,-2.2 3.4,-3.5 6.1,-2.3C255.1,229.3 255.2,231.8 254.8,234.3z"/>
+  <path android:fillColor="#94433C" android:pathData="M192.5,234.5c-1.7,-3.2 -3.6,-6.3 -3.3,-10.1c2.8,2.4 4.3,5.8 6.1,8.9C194.4,234 193.7,234.8 192.5,234.5z"/>
+  <path android:fillColor="#B44A44" android:pathData="M102.1,227.4c3.4,-5.3 7.8,-10 12.9,-13.7c1.8,-1.7 4.5,-2.1 6.8,-1c3,1.2 6.2,2.1 9.4,2.8c3.1,0.7 5,2.3 5,5.6c0.3,17.6 -1.1,35.2 -1.6,52.9c-0.3,9.7 -1.6,19.4 -1.1,29.1c0.1,2.4 -0.4,4.7 -0.4,7.1c-0.1,5.4 1,11 -2.6,15.8c-10.6,0.3 -21.2,0 -31.8,0.2c-2.8,0 -3.9,-1.2 -4.2,-3.7c-0.3,-2.8 -0.2,-5.6 0.1,-8.4c1.1,-10.7 0.8,-21.5 1.6,-32.2c-1,-5.6 0.2,-11.1 0.6,-16.7c1.3,-6.5 0.1,-13.2 0.9,-19.8C98.3,239.3 99.8,233.2 102.1,227.4z"/>
+  <path android:fillColor="#EDD0BE" android:pathData="M134.8,220.4c-0.2,-0.6 -0.2,-1.8 -0.5,-1.9c-6.5,-1.3 -12.1,-6.3 -19.3,-4.8c-0.2,-1 2,-1.8 0.9,-2.4c-5.6,-3.2 -9.2,-8.9 -15,-11.9c-1,-1.5 -1.5,-3.3 -2.4,-4.8c-4,-5.9 -4.6,-13.5 -1.6,-20c2,-9 5.1,-17.3 13.5,-23.5c-0.2,4.9 -2.2,9 -0.5,13.9c2.5,-3.3 4.7,-6.2 8.1,-7.8c4.1,-1.9 8.2,-3 12.9,-1.5c4.8,1.6 9.8,2.6 14.8,3.9c0.1,7.5 -0.6,15 0.7,22.5c1.1,6.2 -0.6,12.5 1.1,18.7c0.3,1.2 -1,1.5 -2,1.6c-2,0.1 -3.9,0.1 -5.9,0.2c-2.7,1.3 -4.6,-0.7 -6.8,-1.6c3.7,2.2 7.5,3.7 11.9,3.5c1.4,0 3,-0.4 4,1.2c-1.9,4.1 -0.6,8.5 -1,12.8c-2.3,2.1 -5.1,1.1 -7.7,1.3C138.1,218.9 136.4,219.8 134.8,220.4z"/>
+  <path android:fillColor="#65261B" android:pathData="M264.9,346.8h-78.3c-1.3,-4.3 -0.3,-8.8 -0.6,-13.2c-0.2,-1 0.5,-1.9 1.5,-2c0.1,0 0.1,0 0.2,0c4.8,-1 9.4,-3.2 14.5,-1.2c4.6,1.8 8.8,-1.8 13.5,-1.6c1.9,0.1 3.8,0 5.8,0.1c6.8,0.3 13.6,-1.2 20.1,2c4.7,-3.1 10.2,-0.9 15.3,-2.2c5.6,-1.5 9.7,1.9 9.7,7.6C266.4,339.8 266.3,343.4 264.9,346.8z"/>
+  <path android:fillColor="#F1E8E8" android:pathData="M264.9,346.8c0.2,-2.8 0.5,-5.6 0.6,-8.4c0.4,-7.3 0.1,-7.6 -6.5,-9.4c-1.2,-0.3 -1.8,0.8 -2.6,0.9c-5.6,0.8 -11.3,1 -16.9,2.3c-1.1,0.2 -2.1,-0.7 -3.1,-1.2c-2.7,-1.5 -5.5,-3 -8.6,-0.7c-0.8,0.6 -1.8,0.8 -2.8,0.6c-4.4,-1.9 -8.9,0.2 -13.3,-0.7c-0.2,0 -0.4,-0.1 -0.5,-0.1c-5.1,4.5 -10.5,0.4 -15.8,0.5c-3,0 -5.1,3.6 -8.7,2.1c-0.4,-0.2 -0.5,1.7 -0.5,2.6c0.1,3.8 0.2,7.6 0.3,11.4c-2.4,-2.5 -1.2,-5.7 -1,-8.4c0.3,-4.3 -1.3,-8.5 -4.3,-11.6c0.8,-2.4 0.6,-5.7 4.3,-6c1.5,-1.3 3.3,-1.4 5.1,-1.4c23.7,-0.1 47.5,0 71.2,0c1.2,0 2.3,0.1 3.4,0.5c0.6,0.3 1.1,0.6 1.6,1c3,2.1 3.5,4.7 0.9,7.4c-1.3,1.4 -1,2.8 -1.1,4.4C266.4,337.4 268.8,342.6 264.9,346.8z"/>
+  <path android:fillColor="#F0E7E7" android:pathData="M267,320.9h-1.1c-2.1,-2.8 -1.2,-6.1 -1.2,-9.1c0,-2.8 -0.4,-4.4 -3.8,-5c-4.1,-0.8 -7.9,-1.3 -12.1,-0.2c-4.5,1.2 -8.9,-2.5 -13.5,-1.7c-7.4,1.2 -15.1,-2.6 -22.2,1.6c-1,0.6 -2.2,0.8 -3.4,0.4c-7.1,-2.4 -14.4,-2.6 -21.8,-1.8c-1,0.1 -2,-0.4 -2.5,-1.4c-0.9,-1.4 -1.8,-2.7 -2.6,-4.2c-1.7,-3 -1.1,-5 2.5,-5.6c1.3,-1 3,-1.5 4.7,-1.4c24.6,0.1 49.2,-0.2 73.9,0c0.8,0 1.6,0.2 2.4,0.5c0.6,0.3 1.1,0.6 1.6,1c2.2,3.3 2.3,6.3 -0.1,9.9c-2.1,3.2 -0.6,7.3 -0.8,11C266.8,317 267,319 267,320.9z"/>
+  <path android:fillColor="#E4C4AF" android:pathData="M97.8,281.4c-0.5,13.3 -1,26.7 -1.7,40c-0.2,3.6 0.8,4.9 4.6,4.8c10,-0.3 20.1,-0.2 30.1,-0.3c0.4,-0.1 0.8,0.3 0.9,0.7c0,0 0,0.1 0,0.1c-13.4,0.6 -26.8,0.3 -40.2,0.1c-2.1,0 -3.7,-0.6 -3.3,-3.1c2,-12.9 1.7,-26 3.4,-38.9c0.4,-2.7 -0.3,-3.8 -3,-3.6c-1.4,0.1 -2.8,0 -2.6,-2.1C90.2,279 94.7,277 97.8,281.4z"/>
+  <path android:fillColor="#324469" android:pathData="M131.8,326.8l-0.9,-0.8c0.4,-5.3 0.7,-10.6 1,-15.9c1.9,-1.9 4.1,-1.4 6.3,-1c1.8,0.6 3.5,1.5 5.3,2.1c4.2,1 4.7,4.2 4.4,7.6c-0.4,4.3 1.4,6 5.7,5.7c2.5,-0.2 5.3,-0.6 7.6,1.3c0.1,0.2 0.2,0.4 0.3,0.6L131.8,326.8z"/>
+  <path android:fillColor="#E5C5B1" android:pathData="M96.9,174.6c-1.9,8.1 -0.3,15.6 4.2,22.5c0.5,0.8 0.1,1.6 -0.2,2.3c-6.8,2.2 -11.7,-0.2 -14,-6.8s0.1,-10.5 8,-13.8C97.2,178.3 95.4,175.7 96.9,174.6z"/>
+  <path android:fillColor="#B85244" android:pathData="M97.8,281.4c-3.5,-2.8 -8.1,0 -11.7,-2.4c0.4,-5.2 1,-10.4 1.3,-15.6c0.2,-3.3 2,-3.5 4.5,-3.1c2.6,0.9 4.2,3 6,4.9C98.8,270.6 96,276 97.8,281.4z"/>
+  <path android:fillColor="#7F2928" android:pathData="M97.9,265.2c-2.9,-0.5 -4.4,-2.8 -6,-4.9c0.6,-11.8 3.1,-23.1 10.1,-32.9c0.5,4.6 -1.7,8.7 -2.3,13.1c-0.9,7 -0.8,14 -0.9,21C98.9,262.9 99.2,264.3 97.9,265.2z"/>
+  <path android:fillColor="#EFE6E6" android:pathData="M267.9,294.1l-1.2,-0.1c-2.1,-5.7 -2.1,-11.9 0,-17.6l0.3,-0.3C269,282 267.5,288.1 267.9,294.1z"/>
+  <path android:fillColor="#64241A" android:pathData="M184.4,267.3c0,-4.5 0,-8.9 -0.2,-13.4c-0.2,-1.6 0.5,-3.3 1.8,-4.2c2.5,-1.6 5,-3.1 7.8,-0.6c0.1,0.1 0.3,0.1 0.5,0.1c4.5,0.5 9.4,-1.7 13.3,3c1,1.3 4.1,0.3 5.8,-1.5c2.8,-3.2 6,-3.9 9.9,-1.9c1.3,0.6 3.3,1.2 4.3,0.6c4.6,-2.7 9.4,0.9 14,-0.6c0.6,-0.2 1.6,0.3 2.2,0.8c3,2.2 6.1,2.2 9.3,0.4c5,-2.7 9.4,1 14.1,1.7c1.1,0.2 0.6,2.4 0.5,3.7c-0.1,12.1 -0.1,12.1 -12.1,12.1C231.9,267.4 208.1,267.4 184.4,267.3z"/>
+  <path android:fillColor="#64241A" android:pathData="M266.7,276.4c0.5,5.9 0.5,11.7 0,17.6h-81.4c0.9,-5.3 -1.6,-10.6 0,-16c2.2,1.7 4.6,1.9 6.9,0.4c3.1,-2.1 6.3,-1.8 9.3,-0.2c2.7,1.4 4.8,0.5 7.4,-0.3c3.8,-1.2 8,-2.3 12.2,-1.1c2.4,0.7 5,1 7.2,-0.3c3,-1.7 5.6,-0.9 8,0.8c1.6,1.1 3.7,2.7 4.9,1.7c4.9,-3.9 11.2,0 16,-3.2c0.8,-0.6 1.9,-0.5 2.5,0.3c0,0 0,0 0,0C262,278 264.4,277.7 266.7,276.4z"/>
+  <path android:fillColor="#64241A" android:pathData="M185.4,303.8c2.3,0.4 4.6,0.9 6.6,-1c1.1,-1.1 1.9,-0.2 3,0.1c5.2,1.9 11,0.1 16.1,2.8c1.1,0.6 2.7,-0.6 4,-1.4c2.6,-1.5 5.4,-3 8.4,-0.8c1.3,0.9 3.3,1.2 4.3,0.5c4.1,-2.8 8.4,1.5 12.4,-0.5c1,-0.5 1.8,0.6 2.6,1.1c2.2,1.5 5.1,1.7 7.4,0.3c2.8,-1.5 6.2,-1.5 8.9,0.2c0.7,0.4 1.6,1.1 2.2,1c6.2,-1.6 4.6,2.9 4.6,6c0,3 -0.1,6 -0.1,8.9l-80.4,-0.2C185.5,315.1 185.5,309.4 185.4,303.8z"/>
+  <path android:fillColor="#F2F0EC" android:pathData="M138.7,218.5h8.9c1.1,0 2.3,0.1 3.4,0c6.4,-0.6 6.1,-0.6 6.6,6.1c0.9,12.1 0.9,24.3 1,36.5c0,1.1 -0.1,2.3 1,3.1c1.2,6.5 0.6,13.1 0.8,19.7c0.3,6.7 0.6,13.5 0.9,20.2c-1.9,1.7 -4.1,1.3 -6.4,1.1c-1.4,-0.3 -2.7,-0.7 -4,-1.2c-2.4,-1.3 -5.8,0.7 -7.5,-2.6c1.5,-2.9 1.7,-6 1.7,-9.2c0,-21 -0.1,-42 0,-63c0,-4.4 0.1,-8.3 -5.6,-9.1C138.9,220 138.7,219.2 138.7,218.5z"/>
+  <path android:fillColor="#2D3D5D" android:pathData="M161.3,325.8c-3.6,0 -7.2,-0.1 -10.8,0.1c-3,0.2 -4.2,-1 -3.9,-3.9c0.2,-1.5 -0.2,-3 0.1,-4.4c0.6,-3.3 -1,-4.7 -4,-5.2c0.7,-1.6 2.2,-1.5 3.6,-1.7c3,0.2 6,-0.3 8.7,-1.6c2.3,-0.5 4.6,-0.9 6.5,1L161.3,325.8z"/>
+  <path android:fillColor="#252018" android:pathData="M161.4,310.1h-6.6c-1.1,-1.9 -1.4,-3.8 -0.1,-5.8l6.6,-0.2L161.4,310.1z"/>
+  <path android:fillColor="#3C332E" android:pathData="M148.6,205.7c-4.8,-0.1 -9.5,-0.2 -14,-2.3c-1.3,-0.7 -2.5,-1.6 -3.6,-2.6c-0.4,-0.4 -0.9,-1.4 -0.7,-1.7c0.6,-0.9 1.5,-0.5 2.1,0.1c1.9,2.1 4.5,2.6 7,3.3c4.8,0.8 9.6,1.6 14.2,-0.9c2.6,-2.3 5.8,-3.5 8.9,-5c2.5,2.1 0,3 -1,4C158,204.2 153.1,204.5 148.6,205.7z"/>
+  <path android:fillColor="#F0B99E" android:pathData="M176.9,195.6c-2,-0.2 -5.6,0.7 -5.8,-2.3c-0.2,-2.7 3.5,-2.9 5.8,-3.6c0.9,-0.3 2,-0.3 2.9,0c1.7,0.7 4.9,0.2 4.7,2.5s-2.7,3.6 -5.3,3.3C178.6,195.5 177.9,195.6 176.9,195.6z"/>
+  <path android:fillColor="#171310" android:pathData="M174.1,186.5c-3,0 -4.7,-1.8 -4.6,-4.6c0,-2.8 1.9,-4.6 4.8,-4.4c2.6,0.1 4.2,1.7 4.3,4.4C178.6,184.9 177.2,186.5 174.1,186.5z"/>
+  <path android:fillColor="#352E29" android:pathData="M173.8,163.7c1,-0.1 2.1,0 3.1,0.3c2.3,1 6.8,1.2 6.1,3.6c-0.9,3 -4,-0.3 -6.1,-0.7c-4.6,-0.9 -8.4,0.6 -12,3c-0.9,0.6 -1.9,1.9 -3,0.7s0.5,-2 1.3,-2.7C166.1,165.3 169.9,163.8 173.8,163.7z"/>
+  <path android:fillColor="#EA9B9A" android:pathData="M162.6,196.7c-2.4,2.8 -5.1,4.9 -8.9,5c0.1,-1.6 -1.5,-3 -0.8,-4.7s1.6,-3.7 3.7,-4.2C160,191.9 160.8,195 162.6,196.7z"/>
+  <path android:fillColor="#FFFFFE" android:pathData="M138.7,218.5c0.4,0.3 0.8,0.7 1.2,0.8c6.7,1.1 6.7,1.1 6.7,7.7c0,23 0,46 0,69c0,2.6 -0.1,4.9 -3,5.9c-1.3,2.1 -3.4,2.7 -5.5,3.2c-2,0.2 -4,0.5 -5.6,-1c-1,-7.7 -0.1,-15.5 0.1,-23.2c0.7,-20.2 1.4,-40.3 2.1,-60.5C135.6,218.9 136.5,217.3 138.7,218.5z"/>
+  <path android:fillColor="#29211B" android:pathData="M132.5,304.1l6.3,0.1c1.5,1.7 1.5,4.2 -0.1,5.8H132C131.5,308.1 131.7,306 132.5,304.1z"/>
+  <path android:fillColor="#171412" android:pathData="M119.4,180.7c2.2,0.2 3.8,2 3.7,4.8c0,2.3 -1.9,4.2 -4.2,4.2c-0.1,0 -0.3,0 -0.4,0c-2.9,-0.1 -4.6,-1.6 -4.6,-4.6S115.7,180.6 119.4,180.7z"/>
+  <path android:fillColor="#35302B" android:pathData="M118.5,171.7c3.6,-0.1 7.2,1 10.1,3.2c0.8,0.6 1.7,1.3 1,2.3c-0.6,0.8 -1.5,0.6 -2.2,0.1c-5.6,-4 -11.2,-4 -17,-0.3c-0.8,0.5 -1.9,1.1 -2.5,-0.2c-0.6,-1.3 0.5,-1.7 1.4,-2.2C111.9,172.6 115.2,171.6 118.5,171.7z"/>
+  <path android:fillColor="#F1B89D" android:pathData="M115.1,198.6c-1.8,-0.5 -5.4,1.1 -5.6,-1.8c-0.1,-3.2 3.7,-2.7 6.1,-3.2c0.5,-0.1 1,-0.1 1.5,0c2.2,0 4.9,0 4.9,2.6c0,2.2 -2.6,2.5 -4.7,2.4C116.7,198.5 116,198.6 115.1,198.6z"/>
+  <path android:fillColor="#D1B353" android:pathData="M138.7,310.1l0.1,-5.9l4.9,-2.3c2.7,0.8 5.7,-0.8 8.3,1c-4.5,1.4 -3.2,6.2 -5.3,9.1l-4,0.4C141.1,312.1 139.7,311.3 138.7,310.1z"/>
+  <path android:fillColor="#D0AA52" android:pathData="M146.6,312c0.1,-1.2 0.1,-2.3 0,-3.5c-0.7,-4.2 0.9,-6.2 5.3,-5.7l2.8,1.4l0.1,5.8C152.6,312.9 149.6,312.2 146.6,312z"/></vector>
Index: app/src/main/res/drawable/ic_onboarding_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_onboarding_1.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_onboarding_1.xml	(date 1584626399000)
@@ -0,0 +1,67 @@
+<vector android:height="24dp" android:viewportHeight="387.01"
+    android:viewportWidth="360" android:width="24dp"
+    xmlns:aapt="http://schemas.android.com/aapt" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:pathData="M126.71,179c-32.35,-11 -69.4,0.4 -104.83,11.78C14.5,193.19 7.19,195.56 0,197.73V0H360V232.92c-12.12,8.35 -28.38,16.22 -50.2,22.56 -13.42,3.9 -25.29,5.61 -36,5.61C209.87,261.08 188,199.83 126.71,179Z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="130.44922" android:endY="7.463956"
+                android:startX="270.8492" android:startY="268.55396" android:type="linear">
+                <item android:color="#6688241B" android:offset="0"/>
+                <item android:color="#FFE76F51" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:pathData="M104.05,193.5c-35,-0.41 -55.5,29.45 -74.32,59.31C20,268.3 10.66,283.79 0,295.05V0H360V265.09c-14.07,20.48 -32.17,36.64 -55.42,43.39a83.21,83.21 0,0 1,-23.3 3.48C205.2,312 173.93,194.31 104.05,193.5Z">
+        <aapt:attr name="android:fillColor">
+            <gradient android:endX="119.649216" android:endY="13.990022"
+                android:startX="270.8492" android:startY="360.25455" android:type="linear">
+                <item android:color="#33A62E23" android:offset="0"/>
+                <item android:color="#FFC55F45" android:offset="1"/>
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path android:fillColor="#fee557" android:pathData="M117.87,181.87m-39.87,0a39.87,39.87 0,1 1,79.74 0a39.87,39.87 0,1 1,-79.74 0"/>
+    <path android:fillColor="#d6a229" android:pathData="M103.96,175.38m-7.42,0a7.42,7.42 0,1 1,14.84 0a7.42,7.42 0,1 1,-14.84 0"/>
+    <path android:fillColor="#d6a229" android:pathData="M131.78,175.38m-7.42,0a7.42,7.42 0,1 1,14.84 0a7.42,7.42 0,1 1,-14.84 0"/>
+    <path android:fillColor="#d6a229" android:pathData="M106.82,192.07h22.11a1,1 0,0 1,1 1v7.84a6,6 0,0 1,-6 6H111.82a6,6 0,0 1,-6 -6v-7.84A1,1 0,0 1,106.82 192.07Z"/>
+    <path android:fillColor="#76c47f" android:pathData="M242.13,181.87m-39.87,0a39.87,39.87 0,1 1,79.74 0a39.87,39.87 0,1 1,-79.74 0"/>
+    <path android:fillColor="#389b4a" android:pathData="M228.22,168a7.43,7.43 0,0 1,7.42 7.42h0c0,4.1 -14.84,4.1 -14.84,0a7.42,7.42 0,0 1,7.42 -7.42Z"/>
+    <path android:fillColor="#389b4a" android:pathData="M256,168a7.43,7.43 0,0 1,7.42 7.42h0c0,4.1 -14.84,4.1 -14.84,0A7.42,7.42 0,0 1,256 168Z"/>
+    <path android:fillColor="#389b4a" android:pathData="M231.07,192.07h22.11a1,1 0,0 1,1 1v7.84a6,6 0,0 1,-6 6H236.07a6,6 0,0 1,-6 -6v-7.84A1,1 0,0 1,231.07 192.07Z"/>
+    <path android:fillColor="#76c47f" android:pathData="M234.78,190.22h14.69a1,1 0,0 1,1 1v6a6,6 0,0 1,-6 6h-4.69a6,6 0,0 1,-6 -6v-6A1,1 0,0 1,234.78 190.22Z"/>
+    <path android:fillColor="#a5d2eb" android:pathData="M117.87,307.98m-39.87,0a39.87,39.87 0,1 1,79.74 0a39.87,39.87 0,1 1,-79.74 0"/>
+    <path android:fillColor="#618da5" android:pathData="M103.96,301.49m-7.42,0a7.42,7.42 0,1 1,14.84 0a7.42,7.42 0,1 1,-14.84 0"/>
+    <path android:fillColor="#618da5" android:pathData="M131.78,301.49m-7.42,0a7.42,7.42 0,1 1,14.84 0a7.42,7.42 0,1 1,-14.84 0"/>
+    <path android:fillColor="#618da5" android:pathData="M111.38,323.75a6.49,9.27 0,1 0,12.98 0a6.49,9.27 0,1 0,-12.98 0z"/>
+    <path android:fillColor="#00000000"
+        android:pathData="M132.71,291.29L132.71,298.71"
+        android:strokeColor="#618da5" android:strokeLineCap="round" android:strokeWidth="1"/>
+    <path android:fillColor="#00000000"
+        android:pathData="M138.27,293.64L134.56,300.07"
+        android:strokeColor="#618da5" android:strokeLineCap="round" android:strokeWidth="1"/>
+    <path android:fillColor="#00000000"
+        android:pathData="M103.04,291.29L103.04,298.71"
+        android:strokeColor="#618da5" android:strokeLineCap="round" android:strokeWidth="1"/>
+    <path android:fillColor="#00000000"
+        android:pathData="M97.47,293.64L101.18,300.07"
+        android:strokeColor="#618da5" android:strokeLineCap="round" android:strokeWidth="1"/>
+    <path android:fillAlpha="0" android:fillColor="#adaaa9"
+        android:pathData="M242.13,307.98m-39.87,0a39.87,39.87 0,1 1,79.74 0a39.87,39.87 0,1 1,-79.74 0" android:strokeAlpha="0"/>
+    <path android:fillAlpha="0" android:fillColor="#00000000"
+        android:pathData="M242.13,293.15L242.13,324.67"
+        android:strokeAlpha="0" android:strokeColor="#fff"
+        android:strokeLineCap="round" android:strokeWidth="5"/>
+    <path android:fillAlpha="0" android:fillColor="#00000000"
+        android:pathData="M257.89,308.91L226.36,308.91"
+        android:strokeAlpha="0" android:strokeColor="#fff"
+        android:strokeLineCap="round" android:strokeWidth="5"/>
+    <path android:fillColor="#c082b8" android:pathData="M241.87,307.87m-39.87,0a39.87,39.87 0,1 1,79.74 0a39.87,39.87 0,1 1,-79.74 0"/>
+    <path android:fillColor="#7e4584" android:pathData="M227.96,303.38m-7.42,0a7.42,7.42 0,1 1,14.84 0a7.42,7.42 0,1 1,-14.84 0"/>
+    <path android:fillColor="#7e4584" android:pathData="M255.78,303.38m-7.42,0a7.42,7.42 0,1 1,14.84 0a7.42,7.42 0,1 1,-14.84 0"/>
+    <path android:fillColor="#7e4584" android:pathData="M230.8,321.07H253a1,1 0,0 1,1 1h0a5.86,5.86 0,0 1,-5.86 5.86H235.68a5.86,5.86 0,0 1,-5.86 -5.86h0a1,1 0,0 1,1 -1Z"/>
+    <path android:fillColor="#00000000"
+        android:pathData="M218,288c0,-6 15,-6 15,0"
+        android:strokeColor="#7e4584" android:strokeLineCap="round" android:strokeWidth="3"/>
+    <path android:fillColor="#00000000"
+        android:pathData="M250,288c0,-6 15,-6 15,0"
+        android:strokeColor="#7e4584" android:strokeLineCap="round" android:strokeWidth="3"/>
+</vector>
Index: app/src/main/res/drawable/rounded_corners_progress_bar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/rounded_corners_progress_bar.xml	(date 1584626399000)
+++ app/src/main/res/drawable/rounded_corners_progress_bar.xml	(date 1584626399000)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+  <item android:id="@android:id/background">
+    <shape>
+      <corners android:radius="8dp"/>
+      <solid android:color="@color/grey"/>
+    </shape>
+  </item>
+
+  <item android:id="@android:id/progress"
+    android:top="1dp"
+    android:bottom="1dp"
+    android:left="1dp"
+    android:right="1dp">
+
+    <scale android:scaleWidth="100%">
+      <shape>
+        <corners android:radius="8dp"/>
+        <solid android:color="@color/colorPrimaryDark"/>
+      </shape>
+    </scale>
+  </item>
+</layer-list>
Index: app/src/main/java/org/oppia/app/profile/AdminAuthActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/AdminAuthActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/AdminAuthActivityPresenter.kt	(date 1584626399000)
@@ -1,6 +1,7 @@
 package org.oppia.app.profile
 
 import android.content.Context
+import android.os.Bundle
 import android.text.Editable
 import android.text.TextWatcher
 import androidx.appcompat.app.AppCompatActivity
@@ -11,6 +12,8 @@
 import org.oppia.app.viewmodel.ViewModelProvider
 import javax.inject.Inject
 
+const val KEY_ADMIN_AUTH_INPUT_ERROR_MESSAGE = "ADMIN_AUTH_INPUT_ERROR_MESSAGE"
+
 /** The presenter for [AdminAuthActivity]. */
 @ActivityScope
 class AdminAuthActivityPresenter @Inject constructor(
@@ -61,6 +64,17 @@
     }
   }
 
+  fun handleOnSavedInstanceState(bundle: Bundle) {
+    bundle.putString(KEY_ADMIN_AUTH_INPUT_ERROR_MESSAGE, authViewModel.errorMessage.get())
+  }
+
+  fun handleOnRestoreInstanceState(bundle: Bundle) {
+    val errorMessage = bundle.getString(KEY_ADMIN_AUTH_INPUT_ERROR_MESSAGE)
+    if (errorMessage != null && errorMessage.isNotEmpty()) {
+      authViewModel.errorMessage.set(errorMessage)
+    }
+  }
+
   private fun getAdminAuthViewModel(): AdminAuthViewModel {
     return viewModelProvider.getForActivity(activity, AdminAuthViewModel::class.java)
   }
Index: app/src/main/res/drawable/ic_landscape_onboarding_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_landscape_onboarding_2.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_landscape_onboarding_2.xml	(date 1584626399000)
@@ -0,0 +1,38 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="320dp"
+    android:height="360dp"
+    android:viewportWidth="320"
+    android:viewportHeight="360">
+  <path
+      android:pathData="M59.43,161.22C25,180.14 2.47,218.75 -18.71,256c-11.7,20.59 -23,40.77 -35.66,57L-200,167.41 139.41,-172 293.68,-17.73c-0.59,19.69 -7.8,46.48 -29.14,82a173.55,173.55 0,0 1,-25.72 33.65C186.06,150.65 124.68,125.39 59.43,161.22Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="103.714066"
+          android:startX="243.85207"
+          android:endY="51.43397"
+          android:endX="-73.16784"
+          android:type="linear">
+        <item android:offset="0" android:color="#FFFEE557"/>
+        <item android:offset="1" android:color="#FFE76F51"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+      android:pathData="M20.75,388.16 L-200,167.41 139.41,-172 305,-6.37c11.48,37 13.78,77.28 -7.33,112.39C239.64,202.58 114.79,127.56 51,190.13 21.8,218.72 26,256.75 31.61,293.39 37.16,329.8 44.07,364.83 21,387.93Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="166.20912"
+          android:startX="306.3471"
+          android:endY="63.72883"
+          android:endX="-81.23758"
+          android:type="linear">
+        <item android:offset="0" android:color="#7FFEE557"/>
+        <item android:offset="1" android:color="#CCCAAD2D"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+      android:pathData="M202.2,157.8H167V105H114.2v52.8H79l61.6,61.6ZM79,237v17.6H202.2V237Z"
+      android:fillColor="#02655c"/>
+</vector>
Index: app/src/main/res/drawable/ic_options_icon_grey_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_options_icon_grey_24dp.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_options_icon_grey_24dp.xml	(date 1584626399000)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M3,17v2h6v-2L3,17zM3,5v2h10L13,5L3,5zM13,21v-2h8v-2h-8v-2h-2v6h2zM7,9v2L3,11v2h4v2h2L9,9L7,9zM21,13v-2L11,11v2h10zM15,9h2L17,7h4L21,5h-4L17,3h-2v6z"/>
+</vector>
Index: app/src/main/res/drawable/ic_play_icon_24dp.xml
===================================================================
--- app/src/main/res/drawable/ic_play_icon_24dp.xml	(date 1584621433000)
+++ app/src/main/res/drawable/ic_lessons_icon_24dp.xml	(date 1584626399000)
@@ -1,0 +1,0 @@
Index: app/src/main/res/drawable/state_button_inactive_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/state_button_inactive_background.xml	(date 1584626399000)
+++ app/src/main/res/drawable/state_button_inactive_background.xml	(date 1584626399000)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+  android:shape="rectangle">
+  <corners android:radius="@dimen/state_previous_next_button_radius" />
+  <solid android:color="@color/submitButtonInactive" />
+</shape>
Index: app/src/main/java/org/oppia/app/profile/AddProfileActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/AddProfileActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/AddProfileActivityPresenter.kt	(date 1584626399000)
@@ -19,12 +19,18 @@
 import org.oppia.app.R
 import org.oppia.app.activity.ActivityScope
 import org.oppia.app.databinding.AddProfileActivityBinding
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.StoryTextSize
 import org.oppia.app.viewmodel.ViewModelProvider
 import org.oppia.domain.profile.ProfileManagementController
 import org.oppia.util.data.AsyncResult
 import javax.inject.Inject
 
 const val GALLERY_INTENT_RESULT_CODE = 1
+private val DEFAULT_STORY_TEXT_SIZE = StoryTextSize.SMALL_TEXT_SIZE
+private val DEFAULT_APP_LANGUAGE = AppLanguage.ENGLISH_APP_LANGUAGE
+private val DEFAULT_AUDIO_LANGUAGE = AudioLanguage.NO_AUDIO
 
 /** The presenter for [AddProfileActivity]. */
 @ActivityScope
@@ -40,6 +46,7 @@
   private var selectedImage: Uri? = null
   private var allowDownloadAccess = false
   private var inputtedPin = false
+  private var createPin = false
   private var inputtedConfirmPin = false
 
   @ExperimentalCoroutinesApi
@@ -60,6 +67,9 @@
     binding.allowDownloadSwitch.setOnCheckedChangeListener { _, isChecked ->
       allowDownloadAccess = isChecked
     }
+    binding.checkboxPin.setOnCheckedChangeListener { _, isChecked ->
+      profileViewModel.createPin.set(isChecked)
+    }
 
     binding.infoIcon.setOnClickListener {
       showInfoDialog()
@@ -86,8 +96,10 @@
 
   private fun addButtonListeners(binding: AddProfileActivityBinding) {
     binding.uploadImageButton.setOnClickListener {
-      val galleryIntent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
-      activity.startActivityForResult(galleryIntent, GALLERY_INTENT_RESULT_CODE)
+     openGalleryIntent()
+    }
+    binding.editImageFab.setOnClickListener {
+      openGalleryIntent()
     }
 
     binding.createButton.setOnClickListener {
@@ -111,7 +123,10 @@
         avatarImagePath = selectedImage,
         allowDownloadAccess = allowDownloadAccess,
         colorRgb = activity.intent.getIntExtra(KEY_ADD_PROFILE_COLOR_RGB, -10710042),
-        isAdmin = false
+        isAdmin = false,
+        storyTextSize = DEFAULT_STORY_TEXT_SIZE,
+        appLanguage = DEFAULT_APP_LANGUAGE,
+        audioLanguage = DEFAULT_AUDIO_LANGUAGE
       )
         .observe(activity, Observer {
           handleAddProfileResult(it, binding)
@@ -119,6 +134,11 @@
     }
   }
 
+  private fun openGalleryIntent() {
+    val galleryIntent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
+    activity.startActivityForResult(galleryIntent, GALLERY_INTENT_RESULT_CODE)
+  }
+
   private fun checkInputsAreValid(name: String, pin: String, confirmPin: String): Boolean {
     var failed = false
     if (name.isEmpty()) {
Index: app/src/main/res/drawable/ic_info_icon_gray_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_info_icon_gray_24dp.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_info_icon_gray_24dp.xml	(date 1584626399000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+  android:width="24dp"
+  android:height="24dp"
+  android:tint="#999999"
+  android:viewportWidth="24.0"
+  android:viewportHeight="24.0">
+  <path
+    android:fillColor="#FF000000"
+    android:pathData="M11,17h2v-6h-2v6zM12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,20c-4.41,0 -8,-3.59 -8,-8s3.59,-8 8,-8 8,3.59 8,8 -3.59,8 -8,8zM11,9h2L13,7h-2v2z" />
+</vector>
Index: app/src/main/res/drawable/selector_app_version.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/selector_app_version.xml	(date 1584626399000)
+++ app/src/main/res/drawable/selector_app_version.xml	(date 1584626399000)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+  <item android:state_pressed="true">
+    <layer-list>
+      <item android:left="1dp" android:top="3dp">
+        <shape>
+          <solid android:color="@color/white" />
+        </shape>
+      </item>
+    </layer-list>
+  </item>
+  <item>
+    <layer-list>
+      <item android:left="0dp" android:top="0dp">
+        <shape>
+          <solid android:color="@color/oppiaTextShadow" />
+        </shape>
+      </item>
+      <item android:bottom="1dp" android:right="0dp">
+        <shape>
+          <solid android:color="@color/white" />
+        </shape>
+      </item>
+    </layer-list>
+  </item>
+</selector>
Index: app/src/main/res/drawable/icon_search_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/icon_search_white_24dp.xml	(date 1584626399000)
+++ app/src/main/res/drawable/icon_search_white_24dp.xml	(date 1584626399000)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M15.5,14h-0.79l-0.28,-0.27C15.41,12.59 16,11.11 16,9.5 16,5.91 13.09,3 9.5,3S3,5.91 3,9.5 5.91,16 9.5,16c1.61,0 3.09,-0.59 4.23,-1.57l0.27,0.28v0.79l5,4.99L20.49,19l-4.99,-5zM9.5,14C7.01,14 5,11.99 5,9.5S7.01,5 9.5,5 14,7.01 14,9.5 11.99,14 9.5,14z"/>
+</vector>
Index: app/src/main/java/org/oppia/app/profile/AdminAuthActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/profile/AdminAuthActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/profile/AdminAuthActivity.kt	(date 1584626399000)
@@ -29,6 +29,16 @@
     adminAuthFragmentPresenter.handleOnCreate()
   }
 
+  override fun onSaveInstanceState(outState: Bundle) {
+    adminAuthFragmentPresenter.handleOnSavedInstanceState(outState)
+    super.onSaveInstanceState(outState)
+  }
+
+  override fun onRestoreInstanceState(savedInstanceState: Bundle?) {
+    super.onRestoreInstanceState(savedInstanceState)
+    adminAuthFragmentPresenter.handleOnRestoreInstanceState(savedInstanceState!!)
+  }
+
   override fun onSupportNavigateUp(): Boolean {
     finish()
     return false
Index: app/src/main/res/drawable/ic_folder_open_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_folder_open_24dp.xml	(date 1584626399000)
+++ app/src/main/res/drawable/ic_folder_open_24dp.xml	(date 1584626399000)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M20,6h-8l-2,-2L4,4c-1.1,0 -1.99,0.9 -1.99,2L2,18c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2L22,8c0,-1.1 -0.9,-2 -2,-2zM20,18L4,18L4,8h16v10z"/>
+</vector>
Index: app/src/main/java/org/oppia/app/topic/TopicFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/TopicFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/TopicFragment.kt	(date 1584626399000)
@@ -13,15 +13,14 @@
 class TopicFragment : InjectableFragment() {
   @Inject lateinit var topicFragmentPresenter: TopicFragmentPresenter
 
-  lateinit var topicId: String
-
   override fun onAttach(context: Context) {
     super.onAttach(context)
     fragmentComponent.inject(this)
   }
 
   override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
-    topicId = arguments?.getString(TOPIC_ID_ARGUMENT_KEY) ?: TEST_TOPIC_ID_0
-    return topicFragmentPresenter.handleCreateView(inflater, container, topicId)
+    val internalProfileId = arguments?.getInt(PROFILE_ID_ARGUMENT_KEY) ?: -1
+    val topicId = arguments?.getString(TOPIC_ID_ARGUMENT_KEY) ?: TEST_TOPIC_ID_0
+    return topicFragmentPresenter.handleCreateView(inflater, container, internalProfileId, topicId)
   }
 }
Index: app/src/main/res/drawable/ic_settings_grey_48dp.xml
===================================================================
--- app/src/main/res/drawable/ic_settings_grey_48dp.xml	(date 1584621433000)
+++ app/src/main/res/drawable/ic_admin_settings_icon_brown_24dp.xml	(date 1584626399000)
@@ -1,7 +1,7 @@
 <vector xmlns:android="http://schemas.android.com/apk/res/android"
-  android:width="48dp"
-  android:height="48dp"
-  android:tint="#707070"
+  android:width="24dp"
+  android:height="24dp"
+  android:tint="#C55F45"
   android:viewportWidth="24"
   android:viewportHeight="24">
   <path
Index: app/src/main/res/drawable/ic_train_icon_24dp.xml
===================================================================
--- app/src/main/res/drawable/ic_train_icon_24dp.xml	(date 1584621433000)
+++ app/src/main/res/drawable/ic_practice_icon_24dp.xml	(date 1584626399000)
@@ -1,0 +1,0 @@
Index: app/src/main/res/layout/text_input_interaction_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/text_input_interaction_item.xml	(date 1584621433000)
+++ app/src/main/res/layout/text_input_interaction_item.xml	(date 1584626399000)
@@ -38,8 +38,8 @@
       android:singleLine="true"
       android:text="@={viewModel.answerText}"
       android:textColor="@color/oppiaPrimaryText"
-      android:textColorHint="@color/edit_text_hint"
-      android:textSize="16sp"
+      android:textColorHint="@color/editTextHint"
+      android:textSize="14sp"
       android:textStyle="italic" />
   </FrameLayout>
 </layout>
Index: app/src/main/java/org/oppia/app/testing/ContentCardTestActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/ContentCardTestActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/ContentCardTestActivityPresenter.kt	(date 1584626399000)
@@ -10,10 +10,16 @@
 import org.oppia.domain.exploration.ExplorationDataController
 import org.oppia.domain.exploration.TEST_EXPLORATION_ID_5
 import org.oppia.domain.exploration.TEST_EXPLORATION_ID_7
+import org.oppia.domain.topic.TEST_STORY_ID_0
+import org.oppia.domain.topic.TEST_TOPIC_ID_0
+import org.oppia.domain.topic.TEST_TOPIC_ID_1
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.Logger
 import javax.inject.Inject
 
+private const val INTERNAL_PROFILE_ID = 0
+private const val TOPIC_ID = TEST_TOPIC_ID_0
+private const val STORY_ID = TEST_STORY_ID_0
 private const val EXPLORATION_ID_1 = TEST_EXPLORATION_ID_5
 private const val EXPLORATION_ID_2 = TEST_EXPLORATION_ID_7
 
@@ -45,7 +51,7 @@
             logger.d("ContentCardTest", "Successfully loaded exploration")
 
             if (getStateFragment() == null) {
-              val stateFragment = StateFragment.newInstance(EXPLORATION_ID_1)
+              val stateFragment = StateFragment.newInstance(INTERNAL_PROFILE_ID, TOPIC_ID, STORY_ID, EXPLORATION_ID_1)
               activity.supportFragmentManager.beginTransaction().add(
                 R.id.state_fragment_placeholder,
                 stateFragment
@@ -72,7 +78,7 @@
             logger.d("ContentCardTest", "Successfully loaded exploration")
 
             if (getStateFragment() == null) {
-              val stateFragment = StateFragment.newInstance(EXPLORATION_ID_2)
+              val stateFragment = StateFragment.newInstance(INTERNAL_PROFILE_ID, TOPIC_ID, STORY_ID, EXPLORATION_ID_2)
               activity.supportFragmentManager.beginTransaction().add(
                 R.id.state_fragment_placeholder,
                 stateFragment
Index: app/src/main/java/org/oppia/app/topic/TopicActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/TopicActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/TopicActivityPresenter.kt	(date 1584626399000)
@@ -7,6 +7,7 @@
 import javax.inject.Inject
 
 const val TOPIC_FRAGMENT_TAG = "TopicFragment"
+const val PROFILE_ID_ARGUMENT_KEY = "profile_id"
 const val TOPIC_ID_ARGUMENT_KEY = "topic_id"
 const val STORY_ID_ARGUMENT_KEY = "story_id"
 
@@ -14,11 +15,12 @@
 @ActivityScope
 class TopicActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
 
-  fun handleOnCreate(topicId: String, storyId: String?) {
+  fun handleOnCreate(internalProfileId: Int, topicId: String, storyId: String?) {
     activity.setContentView(R.layout.topic_activity)
     if (getTopicFragment() == null) {
       val topicFragment = TopicFragment()
       val args = Bundle()
+      args.putInt(PROFILE_ID_ARGUMENT_KEY, internalProfileId)
       args.putString(TOPIC_ID_ARGUMENT_KEY, topicId)
       if (storyId != null) {
         args.putString(STORY_ID_ARGUMENT_KEY, storyId)
Index: app/src/main/res/layout/ongoing_story_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/ongoing_story_card.xml	(date 1584621433000)
+++ app/src/main/res/layout/ongoing_story_card.xml	(date 1584626399000)
@@ -8,7 +8,7 @@
 
     <variable
       name="viewModel"
-      type="org.oppia.app.home.continueplaying.OngoingStoryViewModel" />
+      type="org.oppia.app.home.recentlyplayed.OngoingStoryViewModel" />
   </data>
 
   <com.google.android.material.card.MaterialCardView
Index: app/src/main/java/org/oppia/app/testing/ExplorationTestActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/ExplorationTestActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/ExplorationTestActivityPresenter.kt	(date 1584626399000)
@@ -8,10 +8,15 @@
 import org.oppia.app.home.RouteToExplorationListener
 import org.oppia.domain.exploration.ExplorationDataController
 import org.oppia.domain.exploration.TEST_EXPLORATION_ID_5
+import org.oppia.domain.topic.TEST_STORY_ID_0
+import org.oppia.domain.topic.TEST_TOPIC_ID_0
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.Logger
 import javax.inject.Inject
 
+private const val INTERNAL_PROFILE_ID = 0
+private const val TOPIC_ID = TEST_TOPIC_ID_0
+private const val STORY_ID = TEST_STORY_ID_0
 private const val EXPLORATION_ID = TEST_EXPLORATION_ID_5
 private const val TAG_EXPLORATION_TEST_ACTIVITY = "ExplorationTestActivity"
 
@@ -43,7 +48,7 @@
         result.isFailure() -> logger.e(TAG_EXPLORATION_TEST_ACTIVITY, "Failed to load exploration", result.getErrorOrNull()!!)
         else -> {
           logger.d(TAG_EXPLORATION_TEST_ACTIVITY, "Successfully loaded exploration")
-          routeToExplorationListener.routeToExploration(EXPLORATION_ID, null)
+          routeToExplorationListener.routeToExploration(INTERNAL_PROFILE_ID, TOPIC_ID, STORY_ID, EXPLORATION_ID)
         }
       }
     })
Index: domain/src/test/java/org/oppia/domain/topic/StoryProgressTestHelperTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/test/java/org/oppia/domain/topic/StoryProgressTestHelperTest.kt	(date 1584626399000)
+++ domain/src/test/java/org/oppia/domain/topic/StoryProgressTestHelperTest.kt	(date 1584626399000)
@@ -0,0 +1,799 @@
+package org.oppia.domain.topic
+
+import android.app.Application
+import android.content.Context
+import androidx.lifecycle.Observer
+import androidx.test.core.app.ApplicationProvider
+import androidx.test.ext.junit.runners.AndroidJUnit4
+import com.google.common.truth.Truth.assertThat
+import dagger.BindsInstance
+import dagger.Component
+import dagger.Module
+import dagger.Provides
+import kotlinx.coroutines.CoroutineDispatcher
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.ExperimentalCoroutinesApi
+import kotlinx.coroutines.ObsoleteCoroutinesApi
+import kotlinx.coroutines.newSingleThreadContext
+import kotlinx.coroutines.test.TestCoroutineDispatcher
+import kotlinx.coroutines.test.resetMain
+import kotlinx.coroutines.test.runBlockingTest
+import kotlinx.coroutines.test.setMain
+import org.junit.After
+import org.junit.Before
+import org.junit.Rule
+import org.junit.Test
+import org.junit.runner.RunWith
+import org.mockito.ArgumentCaptor
+import org.mockito.Captor
+import org.mockito.Mock
+import org.mockito.Mockito.atLeastOnce
+import org.mockito.Mockito.verify
+import org.mockito.junit.MockitoJUnit
+import org.mockito.junit.MockitoRule
+import org.oppia.app.model.ChapterPlayState
+import org.oppia.app.model.CompletedStoryList
+import org.oppia.app.model.OngoingStoryList
+import org.oppia.app.model.OngoingTopicList
+import org.oppia.app.model.ProfileId
+import org.oppia.app.model.StorySummary
+import org.oppia.app.model.Topic
+import org.oppia.util.caching.CacheAssetsLocally
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.EnableConsoleLog
+import org.oppia.util.logging.EnableFileLog
+import org.oppia.util.logging.GlobalLogLevel
+import org.oppia.util.logging.LogLevel
+import org.oppia.util.parser.DefaultGcsPrefix
+import org.oppia.util.parser.DefaultGcsResource
+import org.oppia.util.parser.ImageDownloadUrlTemplate
+import org.oppia.util.threading.BackgroundDispatcher
+import org.oppia.util.threading.BlockingDispatcher
+import org.robolectric.annotation.Config
+import javax.inject.Inject
+import javax.inject.Qualifier
+import javax.inject.Singleton
+import kotlin.coroutines.EmptyCoroutineContext
+
+/** Tests for [StoryProgressTestHelper]. */
+@RunWith(AndroidJUnit4::class)
+@Config(manifest = Config.NONE)
+class StoryProgressTestHelperTest {
+  @Rule
+  @JvmField
+  val mockitoRule: MockitoRule = MockitoJUnit.rule()
+
+  @Inject lateinit var context: Context
+
+  @Inject lateinit var storyProgressTestHelper: StoryProgressTestHelper
+
+  @Inject lateinit var topicController: TopicController
+
+  @Inject lateinit var topicListController: TopicListController
+
+  @Mock lateinit var mockCompletedStoryListObserver: Observer<AsyncResult<CompletedStoryList>>
+  @Captor lateinit var completedStoryListResultCaptor: ArgumentCaptor<AsyncResult<CompletedStoryList>>
+
+  @Mock lateinit var mockOngoingStoryListObserver: Observer<AsyncResult<OngoingStoryList>>
+  @Captor lateinit var ongoingStoryListResultCaptor: ArgumentCaptor<AsyncResult<OngoingStoryList>>
+
+  @Mock lateinit var mockOngoingTopicListObserver: Observer<AsyncResult<OngoingTopicList>>
+  @Captor lateinit var ongoingTopicListResultCaptor: ArgumentCaptor<AsyncResult<OngoingTopicList>>
+
+  @Mock lateinit var mockStorySummaryObserver: Observer<AsyncResult<StorySummary>>
+  @Captor lateinit var storySummaryResultCaptor: ArgumentCaptor<AsyncResult<StorySummary>>
+
+  @Mock lateinit var mockTopicObserver: Observer<AsyncResult<Topic>>
+  @Captor lateinit var topicResultCaptor: ArgumentCaptor<AsyncResult<Topic>>
+
+  @Inject
+  @field:TestDispatcher
+  lateinit var testDispatcher: CoroutineDispatcher
+
+  private val coroutineContext by lazy {
+    EmptyCoroutineContext + testDispatcher
+  }
+
+  // https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/
+  @ObsoleteCoroutinesApi
+  private val testThread = newSingleThreadContext("TestMain")
+
+  private lateinit var profileId: ProfileId
+
+  @Before
+  @ExperimentalCoroutinesApi
+  @ObsoleteCoroutinesApi
+  fun setUp() {
+    profileId = ProfileId.newBuilder().setInternalId(0).build()
+    Dispatchers.setMain(testThread)
+    setUpTestApplicationComponent()
+  }
+
+  @After
+  @ExperimentalCoroutinesApi
+  @ObsoleteCoroutinesApi
+  fun tearDown() {
+    Dispatchers.resetMain()
+    testThread.close()
+  }
+
+  private fun setUpTestApplicationComponent() {
+    DaggerStoryProgressTestHelperTest_TestApplicationComponent.builder()
+      .setApplication(ApplicationProvider.getApplicationContext())
+      .build()
+      .inject(this)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialStoryProgressForFractions_getTopicIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId, FRACTIONS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialStoryProgressForFractions_getStoryIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getStory(profileId, FRACTIONS_TOPIC_ID, FRACTIONS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialStoryProgressForFractions_getOngoingTopicListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicList.size).isEqualTo(1)
+      assertThat(ongoingTopicList.topicList[0].topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialStoryProgressForFractions_getCompletedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryList.size).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialTopicProgressForFractions_getTopicIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId, FRACTIONS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialTopicProgressForFractions_getStoryIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getStory(profileId, FRACTIONS_TOPIC_ID, FRACTIONS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialTopicProgressForFractions_getOngoingTopicListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicList.size).isEqualTo(1)
+      assertThat(ongoingTopicList.topicList[0].topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markPartialTopicProgressForFractions_getCompletedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markPartialTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryList.size).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryProgressForFractions_getTopicIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId, FRACTIONS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryProgressForFractions_getStoryIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getStory(profileId, FRACTIONS_TOPIC_ID, FRACTIONS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryProgressForFractions_getOngoingTopicListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicList.size).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryProgressForFractions_getCompletedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryList.size).isEqualTo(1)
+      assertThat(completedStoryList.completedStoryList[0].storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullTopicProgressForFractions_getTopicIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId, FRACTIONS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(FRACTIONS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullTopicProgressForFractions_getStoryIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getStory(profileId, FRACTIONS_TOPIC_ID, FRACTIONS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullTopicProgressForFractions_getOngoingTopicListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicList.size).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullTopicProgressForFractions_getCompletedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullTopicProgressForFractions(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryList.size).isEqualTo(1)
+      assertThat(completedStoryList.completedStoryList[0].storyId).isEqualTo(FRACTIONS_STORY_ID_0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryPartialTopicProgressForRatios_getTopicIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryPartialTopicProgressForRatios(
+        profileId, /* timestampOlderThanAWeek= */
+        false
+      )
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId, RATIOS_TOPIC_ID).observeForever(mockTopicObserver)
+
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(RATIOS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[1].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+      assertThat(topic.storyList[1].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryPartialTopicProgressForRatios_getStoryIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryPartialTopicProgressForRatios(
+        profileId, /* timestampOlderThanAWeek= */
+        false
+      )
+      advanceUntilIdle()
+
+      topicController.getStory(profileId, RATIOS_TOPIC_ID, RATIOS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.storyId).isEqualTo(RATIOS_STORY_ID_0)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryPartialTopicProgressForRatios_getOngoingTopicListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryPartialTopicProgressForRatios(
+        profileId, /* timestampOlderThanAWeek= */
+        false
+      )
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicList.size).isEqualTo(1)
+      assertThat(ongoingTopicList.topicList[0].topicId).isEqualTo(RATIOS_TOPIC_ID)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markFullStoryPartialTopicProgressForRatios_getCompletedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markFullStoryPartialTopicProgressForRatios(
+        profileId, /* timestampOlderThanAWeek= */
+        false
+      )
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryList.size).isEqualTo(1)
+      assertThat(completedStoryList.completedStoryList[0].storyId).isEqualTo(RATIOS_STORY_ID_0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markTwoPartialStoryProgressForRatios_getTopicIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markTwoPartialStoryProgressForRatios(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getTopic(profileId, RATIOS_TOPIC_ID).observeForever(mockTopicObserver)
+      advanceUntilIdle()
+
+      verifyGetTopicSucceeded()
+
+      val topic = topicResultCaptor.value.getOrThrow()
+      assertThat(topic.topicId).isEqualTo(RATIOS_TOPIC_ID)
+      assertThat(topic.storyList[0].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[0].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+      assertThat(topic.storyList[1].chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(topic.storyList[1].chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markTwoPartialStoryProgressForRatios_getStoryIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markTwoPartialStoryProgressForRatios(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getStory(profileId, RATIOS_TOPIC_ID, RATIOS_STORY_ID_0)
+        .observeForever(mockStorySummaryObserver)
+      advanceUntilIdle()
+
+      verifyGetStorySucceeded()
+
+      val storySummary = storySummaryResultCaptor.value.getOrThrow()
+      assertThat(storySummary.storyId).isEqualTo(RATIOS_STORY_ID_0)
+      assertThat(storySummary.chapterList[0].chapterPlayState).isEqualTo(ChapterPlayState.COMPLETED)
+      assertThat(storySummary.chapterList[1].chapterPlayState).isEqualTo(ChapterPlayState.NOT_STARTED)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markTwoPartialStoryProgressForRatios_getOngoingTopicListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markTwoPartialStoryProgressForRatios(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getOngoingTopicList(profileId).observeForever(mockOngoingTopicListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingTopicListSucceeded()
+
+      val ongoingTopicList = ongoingTopicListResultCaptor.value.getOrThrow()
+      assertThat(ongoingTopicList.topicList.size).isEqualTo(1)
+      assertThat(ongoingTopicList.topicList[0].topicId).isEqualTo(RATIOS_TOPIC_ID)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markTwoPartialStoryProgressForRatios_getCompletedStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markTwoPartialStoryProgressForRatios(profileId, /* timestampOlderThanAWeek= */ false)
+      advanceUntilIdle()
+
+      topicController.getCompletedStoryList(profileId).observeForever(mockCompletedStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetCompletedStoryListSucceeded()
+
+      val completedStoryList = completedStoryListResultCaptor.value.getOrThrow()
+      assertThat(completedStoryList.completedStoryList.size).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markRecentlyPlayedForFractionsStory0Exploration0_getOngoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markRecentlyPlayedForFractionsStory0Exploration0(
+        profileId, /* timestampOlderThanAWeek= */false
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingStoryList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingStoryList.recentStoryCount).isEqualTo(1)
+      assertThat(ongoingStoryList.olderStoryCount).isEqualTo(0)
+      assertThat(ongoingStoryList.recentStoryList[0].explorationId).isEqualTo(FRACTIONS_EXPLORATION_ID_0)
+      assertThat(ongoingStoryList.recentStoryList[0].completedChapterCount).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markRecentlyPlayedForRatiosStory0Exploration0_getOngoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markRecentlyPlayedForRatiosStory0Exploration0(
+        profileId, /* timestampOlderThanAWeek= */false
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingStoryList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingStoryList.recentStoryCount).isEqualTo(1)
+      assertThat(ongoingStoryList.olderStoryCount).isEqualTo(0)
+      assertThat(ongoingStoryList.recentStoryList[0].explorationId).isEqualTo(RATIOS_EXPLORATION_ID_0)
+      assertThat(ongoingStoryList.recentStoryList[0].completedChapterCount).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markRecentlyPlayedForRatiosStory0Exploration0AndStory1Exploration2_getOngoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markRecentlyPlayedForRatiosStory0Exploration0AndStory1Exploration2(
+        profileId, /* timestampOlderThanAWeek= */false
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingStoryList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingStoryList.recentStoryCount).isEqualTo(2)
+      assertThat(ongoingStoryList.olderStoryCount).isEqualTo(0)
+      assertThat(ongoingStoryList.recentStoryList[0].explorationId).isEqualTo(RATIOS_EXPLORATION_ID_0)
+      assertThat(ongoingStoryList.recentStoryList[0].completedChapterCount).isEqualTo(0)
+
+      assertThat(ongoingStoryList.recentStoryList[1].explorationId).isEqualTo(RATIOS_EXPLORATION_ID_2)
+      assertThat(ongoingStoryList.recentStoryList[1].completedChapterCount).isEqualTo(0)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testStoryProgressTestHelper_markRecentlyPlayedForFirstExplorationInAllStoriesInFractionsAndRatio_asOldStories_getOngoingStoryListIsCorrect() =
+    runBlockingTest(coroutineContext) {
+
+      storyProgressTestHelper.markRecentlyPlayedForFirstExplorationInAllStoriesInFractionsAndRatios(
+        profileId, /* timestampOlderThanAWeek= */true
+      )
+      advanceUntilIdle()
+
+      topicListController.getOngoingStoryList(profileId).observeForever(mockOngoingStoryListObserver)
+      advanceUntilIdle()
+
+      verifyGetOngoingStoryListSucceeded()
+
+      val ongoingStoryList = ongoingStoryListResultCaptor.value.getOrThrow()
+      assertThat(ongoingStoryList.recentStoryCount).isEqualTo(0)
+      assertThat(ongoingStoryList.olderStoryCount).isEqualTo(3)
+
+      assertThat(ongoingStoryList.olderStoryList[0].explorationId).isEqualTo(FRACTIONS_EXPLORATION_ID_0)
+      assertThat(ongoingStoryList.olderStoryList[0].completedChapterCount).isEqualTo(0)
+
+      assertThat(ongoingStoryList.olderStoryList[1].explorationId).isEqualTo(RATIOS_EXPLORATION_ID_0)
+      assertThat(ongoingStoryList.olderStoryList[1].completedChapterCount).isEqualTo(0)
+
+      assertThat(ongoingStoryList.olderStoryList[2].explorationId).isEqualTo(RATIOS_EXPLORATION_ID_2)
+      assertThat(ongoingStoryList.olderStoryList[2].completedChapterCount).isEqualTo(0)
+    }
+
+  private fun verifyGetTopicSucceeded() {
+    verify(mockTopicObserver, atLeastOnce()).onChanged(topicResultCaptor.capture())
+    assertThat(topicResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetStorySucceeded() {
+    verify(mockStorySummaryObserver, atLeastOnce()).onChanged(storySummaryResultCaptor.capture())
+    assertThat(storySummaryResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetOngoingTopicListSucceeded() {
+    verify(mockOngoingTopicListObserver, atLeastOnce()).onChanged(ongoingTopicListResultCaptor.capture())
+    assertThat(ongoingTopicListResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetCompletedStoryListSucceeded() {
+    verify(mockCompletedStoryListObserver, atLeastOnce()).onChanged(completedStoryListResultCaptor.capture())
+    assertThat(completedStoryListResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetOngoingStoryListSucceeded() {
+    verify(mockOngoingStoryListObserver, atLeastOnce()).onChanged(ongoingStoryListResultCaptor.capture())
+    assertThat(ongoingStoryListResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  @Qualifier annotation class TestDispatcher
+
+  // TODO(#89): Move this to a common test application component.
+  @Module
+  class TestModule {
+    @Provides
+    @Singleton
+    fun provideContext(application: Application): Context {
+      return application
+    }
+
+    @ExperimentalCoroutinesApi
+    @Singleton
+    @Provides
+    @TestDispatcher
+    fun provideTestDispatcher(): CoroutineDispatcher {
+      return TestCoroutineDispatcher()
+    }
+
+    @Singleton
+    @Provides
+    @BackgroundDispatcher
+    fun provideBackgroundDispatcher(@TestDispatcher testDispatcher: CoroutineDispatcher): CoroutineDispatcher {
+      return testDispatcher
+    }
+
+    @Singleton
+    @Provides
+    @BlockingDispatcher
+    fun provideBlockingDispatcher(@TestDispatcher testDispatcher: CoroutineDispatcher): CoroutineDispatcher {
+      return testDispatcher
+    }
+
+    // TODO(#59): Either isolate these to their own shared test module, or use the real logging
+    // module in tests to avoid needing to specify these settings for tests.
+    @EnableConsoleLog
+    @Provides
+    fun provideEnableConsoleLog(): Boolean = true
+
+    @EnableFileLog
+    @Provides
+    fun provideEnableFileLog(): Boolean = false
+
+    @GlobalLogLevel
+    @Provides
+    fun provideGlobalLogLevel(): LogLevel = LogLevel.VERBOSE
+
+    @CacheAssetsLocally
+    @Provides
+    fun provideCacheAssetsLocally(): Boolean = false
+
+    @Provides
+    @DefaultGcsPrefix
+    @Singleton
+    fun provideDefaultGcsPrefix(): String {
+      return "https://storage.googleapis.com/"
+    }
+
+    @Provides
+    @DefaultGcsResource
+    @Singleton
+    fun provideDefaultGcsResource(): String {
+      return "oppiaserver-resources/"
+    }
+
+    @Provides
+    @ImageDownloadUrlTemplate
+    @Singleton
+    fun provideImageDownloadUrlTemplate(): String {
+      return "%s/%s/assets/image/%s"
+    }
+  }
+
+  // TODO(#89): Move this to a common test application component.
+  @Singleton
+  @Component(modules = [TestModule::class])
+  interface TestApplicationComponent {
+    @Component.Builder
+    interface Builder {
+      @BindsInstance
+      fun setApplication(application: Application): Builder
+
+      fun build(): TestApplicationComponent
+    }
+
+    fun inject(storyProgressTestHelperTest: StoryProgressTestHelperTest)
+  }
+}
Index: app/src/main/java/org/oppia/app/testing/NavigationDrawerTestActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/NavigationDrawerTestActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/NavigationDrawerTestActivity.kt	(date 1584626399000)
@@ -1,25 +1,37 @@
 package org.oppia.app.testing
 
+import android.content.Context
+import android.content.Intent
 import android.os.Bundle
 import org.oppia.app.R
 import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
 import org.oppia.app.home.HomeActivityPresenter
 import org.oppia.app.home.RouteToTopicListener
 import org.oppia.app.topic.TopicActivity
 import javax.inject.Inject
 
 class NavigationDrawerTestActivity : InjectableAppCompatActivity(), RouteToTopicListener {
-  @Inject
-  lateinit var homeActivityPresenter: HomeActivityPresenter
+  @Inject lateinit var homeActivityPresenter: HomeActivityPresenter
+  private var internalProfileId: Int = -1
+
+  companion object {
+    fun createNavigationDrawerTestActivity(context: Context, profileId: Int?): Intent {
+      val intent = Intent(context, NavigationDrawerTestActivity::class.java)
+      intent.putExtra(KEY_NAVIGATION_PROFILE_ID, profileId)
+      return intent
+    }
+  }
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
+    internalProfileId = intent?.getIntExtra(KEY_NAVIGATION_PROFILE_ID, -1)!!
     homeActivityPresenter.handleOnCreate()
     title = getString(R.string.menu_home)
   }
 
-  override fun routeToTopic(topicId: String) {
-    startActivity(TopicActivity.createTopicActivityIntent(this, topicId))
+  override fun routeToTopic(internalProfileId: Int, topicId: String) {
+    startActivity(TopicActivity.createTopicActivityIntent(this, internalProfileId, topicId))
   }
 }
Index: app/src/main/res/values/array.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/array.xml	(date 1584626399000)
+++ app/src/main/res/values/array.xml	(date 1584626399000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <!-- FAQ Questions Array -->
+  <string-array name="faq_questions">
+    <item>@string/faq_question_1</item>
+    <item>@string/faq_question_2</item>
+    <item>@string/faq_question_3</item>
+    <item>@string/faq_question_4</item>
+    <item>@string/faq_question_5</item>
+    <item>@string/faq_question_6</item>
+    <item>@string/faq_question_7</item>
+    <item>@string/faq_question_8</item>
+  </string-array>
+</resources>
Index: app/src/main/java/org/oppia/app/splash/SplashActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/splash/SplashActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/splash/SplashActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,54 @@
+package org.oppia.app.splash
+
+import android.view.WindowManager
+import androidx.appcompat.app.AppCompatActivity
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Observer
+import androidx.lifecycle.Transformations
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.model.OnboardingFlow
+import org.oppia.app.onboarding.OnboardingActivity
+import org.oppia.app.profile.ProfileActivity
+import org.oppia.domain.onboarding.OnboardingFlowController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The presenter for [SplashActivity]. */
+@ActivityScope
+class SplashActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val logger: Logger,
+  private val onboardingFlowController: OnboardingFlowController
+) {
+
+  fun handleOnCreate() {
+    activity.setContentView(R.layout.splash_activity)
+    activity.window.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN)
+    subscribeToOnboardingFlow()
+  }
+
+  private fun subscribeToOnboardingFlow() {
+    getOnboardingFlow().observe(activity, Observer<OnboardingFlow> { result ->
+      if (result.alreadyOnboardedApp) {
+        activity.startActivity(ProfileActivity.createProfileActivity(activity))
+      } else {
+        activity.startActivity(OnboardingActivity.createOnboardingActivity(activity))
+      }
+      activity.finish()
+    })
+  }
+
+  private fun getOnboardingFlow(): LiveData<OnboardingFlow> {
+    // If there's an error loading the data, assume the default.
+    return Transformations.map(onboardingFlowController.getOnboardingFlow(), ::processOnboardingFlowResult)
+  }
+
+  private fun processOnboardingFlowResult(onboardingResult: AsyncResult<OnboardingFlow>): OnboardingFlow {
+    if (onboardingResult.isFailure()) {
+      logger.e("SplashActivity", "Failed to retrieve onboarding flow " + onboardingResult.getErrorOrNull())
+    }
+    return onboardingResult.getOrDefault(OnboardingFlow.getDefaultInstance())
+  }
+}
Index: app/src/main/java/org/oppia/app/home/RouteToRecentlyPlayedListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/RouteToRecentlyPlayedListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/RouteToRecentlyPlayedListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.home
+
+/** Listener for when an activity should route to [RecentlyPlayedActivity]. */
+interface RouteToRecentlyPlayedListener {
+  fun routeToRecentlyPlayed()
+}
Index: app/src/main/java/org/oppia/app/home/WelcomeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/WelcomeViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/WelcomeViewModel.kt	(date 1584626399000)
@@ -0,0 +1,9 @@
+package org.oppia.app.home
+
+import androidx.databinding.ObservableField
+import androidx.lifecycle.ViewModel
+
+/** [ViewModel] for welcome text in home screen. */
+class WelcomeViewModel : HomeItemViewModel() {
+  var profileName : String = ""
+}
Index: app/src/main/res/layout/faq_item_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/faq_item_header.xml	(date 1584626399000)
+++ app/src/main/res/layout/faq_item_header.xml	(date 1584626399000)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.help.faq.faqItemViewModel.FAQHeaderViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <LinearLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:orientation="vertical"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <TextView
+        android:id="@+id/faq_question_text_view"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:fontFamily="sans-serif"
+        android:paddingStart="@dimen/padding_24dp"
+        android:paddingTop="@dimen/padding_24dp"
+        android:paddingEnd="@dimen/padding_24dp"
+        android:text="@string/featured_questions"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="20sp"
+        android:textStyle="bold" />
+    </LinearLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/administrator_controls_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/administrator_controls_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/administrator_controls_activity.xml	(date 1584626399000)
@@ -0,0 +1,31 @@
+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/administrator_controls_activity_drawer_layout"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent">
+
+  <LinearLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <include
+      android:id="@+id/administrator_controls_activity_toolbar"
+      layout="@layout/toolbar" />
+
+    <FrameLayout
+      android:id="@+id/administrator_controls_fragment_placeholder"
+      android:layout_width="match_parent"
+      android:layout_height="match_parent" />
+  </LinearLayout>
+
+  <fragment
+    android:id="@+id/administrator_controls_activity_fragment_navigation_drawer"
+    android:name="org.oppia.app.drawer.NavigationDrawerFragment"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_gravity="start"
+    app:layout="@layout/drawer_fragment"
+    tools:layout="@layout/drawer_fragment" />
+</androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/res/layout/welcome.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/welcome.xml	(date 1584621433000)
+++ app/src/main/res/layout/welcome.xml	(date 1584626399000)
@@ -1,12 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <layout xmlns:android="http://schemas.android.com/apk/res/android"
-  xmlns:app="http://schemas.android.com/apk/res-auto">
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:profile="http://schemas.android.com/tools">
 
   <data>
 
     <variable
       name="viewModel"
-      type="org.oppia.app.home.UserAppHistoryViewModel" />
+      type="org.oppia.app.home.WelcomeViewModel" />
   </data>
 
   <androidx.constraintlayout.widget.ConstraintLayout
@@ -18,24 +19,33 @@
       android:layout_width="0dp"
       android:layout_height="wrap_content"
       android:layout_marginStart="28dp"
+      android:fontFamily="sans-serif"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="24sp"
+      android:text="@string/welcome_text"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/profile_name_textview"
+      android:layout_width="0dp"
+      android:layout_height="32dp"
+      android:layout_marginStart="8dp"
       android:layout_marginEnd="28dp"
-      android:layout_marginBottom="8dp"
       android:fontFamily="sans-serif"
-      android:text="@{viewModel.isAppAlreadyOpened().get() ? @string/welcome_back_text : @string/welcome_text}"
+      android:text="@{viewModel.profileName}"
       android:textColor="@color/oppiaPrimaryText"
       android:textSize="24sp"
       app:layout_constraintEnd_toEndOf="parent"
-      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintStart_toEndOf="@+id/welcome_text_view"
       app:layout_constraintTop_toTopOf="parent" />
 
     <View
-      android:layout_width="172dp"
+      android:layout_width="0dp"
       android:layout_height="6dp"
-      android:layout_marginStart="28dp"
-      android:layout_marginEnd="28dp"
       android:background="@color/oppiaLightBrown"
-      app:layout_constraintBottom_toBottomOf="parent"
-      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintEnd_toEndOf="@+id/welcome_text_view"
+      app:layout_constraintStart_toStartOf="@+id/welcome_text_view"
       app:layout_constraintTop_toBottomOf="@+id/welcome_text_view" />
   </androidx.constraintlayout.widget.ConstraintLayout>
 </layout>
Index: app/src/main/res/drawable/ic_hide_eye_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_hide_eye_icon.xml	(date 1584621433000)
+++ app/src/main/res/drawable/ic_hide_eye_icon.xml	(date 1584626399000)
@@ -1,7 +1,15 @@
-<vector android:height="50dp" android:viewportHeight="24"
-    android:viewportWidth="24" android:width="50dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#008577" android:pathData="M12,6.5c3.8,0 7.2,2.1 8.8,5.5c-1.6,3.4 -5,5.5 -8.8,5.5S4.8,15.4 3.2,12C4.8,8.6 8.2,6.5 12,6.5M12,4.5C7,4.5 2.7,7.6 1,12c1.7,4.4 6,7.5 11,7.5s9.3,-3.1 11,-7.5C21.3,7.6 17,4.5 12,4.5zM12,7.5c-2.5,0 -4.5,2 -4.5,4.5s2,4.5 4.5,4.5s4.5,-2 4.5,-4.5S14.5,7.5 12,7.5z"/>
-    <path android:fillColor="#00000000"
-        android:pathData="M4,3.9L20,20.1" android:strokeColor="#008577"
-        android:strokeLineCap="round" android:strokeWidth="2"/>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#00645C"
+      android:pathData="M12,6.5c3.8,0 7.2,2.1 8.8,5.5c-1.6,3.4 -5,5.5 -8.8,5.5S4.8,15.4 3.2,12C4.8,8.6 8.2,6.5 12,6.5M12,4.5C7,4.5 2.7,7.6 1,12c1.7,4.4 6,7.5 11,7.5s9.3,-3.1 11,-7.5C21.3,7.6 17,4.5 12,4.5zM12,7.5c-2.5,0 -4.5,2 -4.5,4.5s2,4.5 4.5,4.5s4.5,-2 4.5,-4.5S14.5,7.5 12,7.5z"/>
+  <path
+      android:pathData="M4,3.9L20,20.1"
+      android:strokeWidth="2"
+      android:fillColor="#00000000"
+      android:strokeColor="#00645C"
+      android:strokeLineCap="round"/>
 </vector>
Index: app/src/main/res/layout/walkthrough_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/walkthrough_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/walkthrough_activity.xml	(date 1584626399000)
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="presenter"
+      type="org.oppia.app.walkthrough.WalkthroughActivityPresenter" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.walkthrough.WalkthroughViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+      android:id="@+id/walkthrough_fragment_placeholder"
+      android:layout_width="match_parent"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/back_button" />
+
+    <ImageView
+      android:id="@+id/back_button"
+      android:layout_width="32dp"
+      android:layout_height="32dp"
+      android:layout_margin="16dp"
+      android:clickable="true"
+      android:contentDescription="@string/back_button"
+      android:focusable="true"
+      android:onClick="@{(v) -> presenter.previousPage(viewModel.currentProgress)}"
+      android:src="@drawable/ic_arrow_back_white_24dp"
+      android:tint="@color/grey"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <ProgressBar
+      android:id="@+id/walkthrough_progress_bar"
+      style="?android:attr/progressBarStyleHorizontal"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="32dp"
+      android:layout_marginEnd="32dp"
+      android:max="3"
+      android:progress="@{viewModel.currentProgress}"
+      android:progressDrawable="@drawable/rounded_corners_progress_bar"
+      app:layout_constraintBottom_toBottomOf="@+id/back_button"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toEndOf="@+id/back_button"
+      app:layout_constraintTop_toTopOf="@+id/back_button" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/recently_played_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/recently_played_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/recently_played_activity.xml	(date 1584626399000)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/recently_played_fragment_placeholder"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  tools:context=".home.recentlyplayed.RecentlyPlayedActivity" />
Index: app/src/main/java/org/oppia/app/testing/ExplorationTestActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/ExplorationTestActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/ExplorationTestActivity.kt	(date 1584626399000)
@@ -17,7 +17,15 @@
     explorationTestActivityPresenter.handleOnCreate()
   }
 
-  override fun routeToExploration(explorationId: String, topicId: String?) {
-    startActivity(ExplorationActivity.createExplorationActivityIntent(this, explorationId, topicId))
+  override fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    startActivity(
+      ExplorationActivity.createExplorationActivityIntent(
+        this,
+        internalProfileId,
+        topicId,
+        storyId,
+        explorationId
+      )
+    )
   }
 }
Index: app/src/main/res/layout/administrator_controls_general_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/administrator_controls_general_view.xml	(date 1584626399000)
+++ app/src/main/res/layout/administrator_controls_general_view.xml	(date 1584626399000)
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsGeneralViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/general_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_general_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/edit_account_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/edit_account_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_edit_account"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/general_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/story_chapter_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/story_chapter_view.xml	(date 1584621433000)
+++ app/src/main/res/layout/story_chapter_view.xml	(date 1584626399000)
@@ -20,10 +20,10 @@
     <com.google.android.material.card.MaterialCardView
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
-      android:layout_marginStart="16dp"
-      android:layout_marginTop="28dp"
-      android:layout_marginEnd="16dp"
-      android:layout_marginBottom="28dp"
+      android:layout_marginStart="28dp"
+      android:layout_marginTop="16dp"
+      android:layout_marginEnd="28dp"
+      android:layout_marginBottom="16dp"
       android:clickable="@{viewModel.chapterSummary.chapterPlayState != ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES}"
       android:onClick="@{(v) -> viewModel.onExplorationClicked()}"
       app:cardCornerRadius="4dp"
@@ -40,13 +40,10 @@
         <ImageView
           android:id="@+id/chapter_thumbnail"
           android:layout_width="match_parent"
-          android:layout_height="wrap_content"
-          android:contentDescription="@{viewModel.name}"
-          android:paddingStart="40dp"
-          android:paddingEnd="40dp"
-          android:scaleType="centerCrop"
+          android:layout_height="0dp"
+          android:scaleType="centerInside"
           android:src="@{viewModel.chapterThumbnail.thumbnailGraphic}"
-          app:layout_constraintDimensionRatio="H,4:3"
+          app:layout_constraintDimensionRatio="16:9"
           app:layout_constraintEnd_toEndOf="parent"
           app:layout_constraintStart_toStartOf="parent"
           app:layout_constraintTop_toTopOf="parent"
@@ -76,8 +73,11 @@
             android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:layout_marginStart="8dp"
+            android:layout_marginTop="4dp"
             android:layout_marginEnd="8dp"
+            android:ellipsize="end"
             android:fontFamily="sans-serif-medium"
+            android:maxLines="2"
             android:text="@{String.format(@string/chapter_name, (viewModel.index + 1), viewModel.name)}"
             android:textColor="@color/oppiaPrimaryText"
             android:textSize="18sp"
@@ -88,30 +88,36 @@
           <TextView
             android:id="@+id/chapter_summary"
             android:layout_width="0dp"
-            android:layout_height="0dp"
+            android:layout_height="wrap_content"
             android:layout_marginStart="8dp"
             android:layout_marginTop="8dp"
             android:layout_marginEnd="8dp"
+            android:layout_marginBottom="4dp"
+            android:ellipsize="end"
             android:fontFamily="sans-serif"
+            android:maxLines="4"
             android:text="@{viewModel.summary}"
             android:textColor="@color/oppiaPrimaryText"
             android:textSize="16sp"
-            app:layout_constraintBottom_toTopOf="@id/chapter_completed_tick"
+            app:layout_constraintBottom_toBottomOf="parent"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@id/chapter_title" />
+            app:layout_constraintTop_toBottomOf="@id/chapter_title"
+            app:layout_constraintVertical_bias="0.0" />
 
           <ImageView
             android:id="@+id/chapter_completed_tick"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_marginEnd="12dp"
-            android:layout_marginBottom="8dp"
+            android:layout_marginEnd="8dp"
+            android:layout_marginBottom="4dp"
             android:contentDescription="@{String.format(@string/chapter_completed, (viewModel.index + 1), viewModel.name)}"
-            android:src="@drawable/ic_check_primary"
-            android:visibility="@{viewModel.chapterSummary.chapterPlayState == ChapterPlayState.COMPLETED ? View.VISIBLE : View.INVISIBLE}"
+            android:src="@drawable/ic_check_24dp"
+            android:visibility="@{viewModel.chapterSummary.chapterPlayState == ChapterPlayState.COMPLETED ? View.VISIBLE : View.GONE}"
             app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="parent" />
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/chapter_summary"
+            app:layout_constraintVertical_bias="1.0" />
         </androidx.constraintlayout.widget.ConstraintLayout>
       </androidx.constraintlayout.widget.ConstraintLayout>
     </com.google.android.material.card.MaterialCardView>
Index: app/src/main/res/layout/profile_progress_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/profile_progress_header.xml	(date 1584626399000)
+++ app/src/main/res/layout/profile_progress_header.xml	(date 1584626399000)
@@ -0,0 +1,171 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:profile="http://schemas.android.com/tools">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.profileprogress.ProfileProgressHeaderViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <FrameLayout
+      android:id="@+id/profile_frame_layout"
+      android:layout_width="96dp"
+      android:layout_height="96dp"
+      android:layout_marginTop="32dp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <de.hdodenhof.circleimageview.CircleImageView
+        android:id="@+id/profile_edit_image"
+        android:layout_width="96dp"
+        android:clickable="true"
+        android:focusable="true"
+        android:onClick="@{() -> viewModel.clickOnProfilePicture()}"
+        android:layout_height="96dp"
+        profile:src="@{viewModel.profile.avatar}" />
+
+      <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="end|bottom"
+        android:src="@drawable/ic_edit_18"
+        app:backgroundTint="@color/white"
+        app:fabCustomSize="24dp"
+        android:onClick="@{() -> viewModel.clickOnProfilePicture()}"
+        app:tint="@color/colorPrimary" />
+    </FrameLayout>
+
+    <TextView
+      android:id="@+id/profile_name_text_view"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="12dp"
+      android:fontFamily="sans-serif-medium"
+      android:text="@{viewModel.profile.name}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="18sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/profile_frame_layout" />
+
+    <LinearLayout
+      android:id="@+id/progress_stats_linear_layout"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="16dp"
+      android:orientation="horizontal"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/profile_name_text_view">
+
+      <com.google.android.material.card.MaterialCardView
+        android:id="@+id/ongoing_topics_container"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="8dp"
+        android:clickable="@{viewModel.ongoingTopicCount > 0}"
+        android:onClick="@{() -> viewModel.clickOnOngoingTopicCount()}"
+        app:contentPadding="8dp">
+
+        <LinearLayout
+          android:layout_width="wrap_content"
+          android:layout_height="wrap_content"
+          android:gravity="center"
+          android:orientation="vertical">
+
+          <TextView
+            android:id="@+id/ongoing_topics_count"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_margin="8dp"
+            android:text="@{Integer.toString(viewModel.ongoingTopicCount)}"
+            android:textSize="24sp" />
+
+          <TextView
+            android:id="@+id/ongoing_topics_description_text_view"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_margin="8dp"
+            android:text="@{viewModel.ongoingTopicCount > 1 ? @string/topics_in_progress : @string/topic_in_progress}"
+            android:textSize="14sp" />
+        </LinearLayout>
+      </com.google.android.material.card.MaterialCardView>
+
+      <com.google.android.material.card.MaterialCardView
+        android:id="@+id/completed_stories_container"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="8dp"
+        android:clickable="@{viewModel.completedStoryCount > 0}"
+        android:onClick="@{() -> viewModel.clickOnCompletedStoryCount()}"
+        app:contentPadding="8dp">
+
+        <LinearLayout
+          android:layout_width="wrap_content"
+          android:layout_height="wrap_content"
+          android:gravity="center"
+          android:orientation="vertical">
+
+          <TextView
+            android:id="@+id/completed_stories_count"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_margin="8dp"
+            android:text="@{Integer.toString(viewModel.completedStoryCount)}"
+            android:textSize="24sp" />
+
+          <TextView
+            android:id="@+id/completed_stories_description_text_view"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_margin="8dp"
+            android:text="@{viewModel.completedStoryCount > 1 ? @string/stories_completed : @string/story_completed}"
+            android:textSize="14sp" />
+        </LinearLayout>
+      </com.google.android.material.card.MaterialCardView>
+    </LinearLayout>
+
+    <LinearLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="24dp"
+      android:orientation="horizontal"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/progress_stats_linear_layout">
+
+      <TextView
+        android:id="@+id/recently_played_stories_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="28dp"
+        android:layout_weight="1"
+        android:fontFamily="sans-serif-medium"
+        android:text="@string/recently_played_stories"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="18sp" />
+
+      <TextView
+        android:id="@+id/view_all_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="48dp"
+        android:layout_marginStart="8dp"
+        android:layout_marginEnd="28dp"
+        android:fontFamily="sans-serif-medium"
+        android:gravity="center_vertical"
+        android:onClick="@{() -> viewModel.clickOnViewAll()}"
+        android:text="@string/view_all"
+        android:textAllCaps="true"
+        android:textColor="@color/oppiaPrimaryDark"
+        android:textSize="14sp" />
+    </LinearLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/play_chapter_view.xml
===================================================================
--- app/src/main/res/layout/play_chapter_view.xml	(date 1584621433000)
+++ app/src/main/res/layout/lessons_chapter_view.xml	(date 1584626399000)
@@ -1,0 +1,0 @@
Index: app/src/main/res/layout/administrator_controls_download_permissions_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/administrator_controls_download_permissions_view.xml	(date 1584626399000)
+++ app/src/main/res/layout/administrator_controls_download_permissions_view.xml	(date 1584626399000)
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsDownloadPermissionsViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/download_permissions_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_download_permissions_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/topic_update_on_wifi_constraint_layout"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/topic_update_on_wifi_constraint_layout"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:paddingStart="16dp"
+      android:paddingTop="20dp"
+      android:paddingEnd="16dp"
+      android:paddingBottom="20dp"
+      app:layout_constraintBottom_toTopOf="@id/view_divider"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/download_permissions_text_view">
+
+      <TextView
+        android:id="@+id/topic_update_on_wifi_title_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:paddingBottom="4dp"
+        android:text="@string/administrator_controls_update_on_wifi_title"
+        android:textColor="@color/oppiaPrimaryTextDark"
+        android:textSize="16sp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <TextView
+        android:id="@+id/topic_update_on_wifi_description_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:text="@string/administrator_controls_update_on_wifi_message"
+        android:textColor="@color/divider"
+        android:textSize="14sp"
+        app:layout_constraintEnd_toStartOf="@id/topic_update_on_wifi_switch"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/topic_update_on_wifi_title_text_view" />
+
+      <androidx.appcompat.widget.SwitchCompat
+        android:id="@+id/topic_update_on_wifi_switch"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="40dp"
+        android:layout_marginEnd="4dp"
+        android:checked="@{viewModel.isTopicWifiUpdatePermission}"
+        android:onCheckedChanged="@{(switch, checked) -> viewModel.onTopicWifiUpdatePermissionChanged(checked)}"
+        android:theme="@style/SwitchCompatTheme"
+        app:layout_constraintBottom_toBottomOf="@id/topic_update_on_wifi_description_text_view"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/topic_update_on_wifi_description_text_view"
+        app:layout_constraintTop_toTopOf="@id/topic_update_on_wifi_title_text_view" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <View
+      android:id="@+id/view_divider"
+      android:layout_width="match_parent"
+      android:layout_height="2dp"
+      android:background="@color/mid_grey_30"
+      app:layout_constraintBottom_toTopOf="@id/auto_update_topic_constraint_layout"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/topic_update_on_wifi_constraint_layout" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/auto_update_topic_constraint_layout"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:paddingStart="16dp"
+      android:paddingTop="20dp"
+      android:paddingEnd="16dp"
+      android:paddingBottom="20dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/view_divider">
+
+      <TextView
+        android:id="@+id/auto_update_topic_title_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:paddingBottom="4dp"
+        android:text="@string/administrator_controls_auto_update_title"
+        android:textColor="@color/oppiaPrimaryTextDark"
+        android:textSize="16sp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <TextView
+        android:id="@+id/auto_update_topic_description_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:text="@string/administrator_controls_auto_update_message"
+        android:textColor="@color/divider"
+        android:textSize="14sp"
+        app:layout_constraintEnd_toStartOf="@id/auto_update_topic_switch"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/auto_update_topic_title_text_view" />
+
+      <androidx.appcompat.widget.SwitchCompat
+        android:id="@+id/auto_update_topic_switch"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="40dp"
+        android:layout_marginEnd="4dp"
+        android:checked="@{viewModel.isTopicAutoUpdatePermission}"
+        android:onCheckedChanged="@{(switch, checked) -> viewModel.onTopicAutoUpdatePermissionChanged(checked)}"
+        android:theme="@style/SwitchCompatTheme"
+        app:layout_constraintBottom_toBottomOf="@id/auto_update_topic_description_text_view"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/auto_update_topic_description_text_view"
+        app:layout_constraintTop_toTopOf="@id/auto_update_topic_title_text_view" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/fraction_interaction_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fraction_interaction_item.xml	(date 1584621433000)
+++ app/src/main/res/layout/fraction_interaction_item.xml	(date 1584626399000)
@@ -1,19 +1,22 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android">
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
 
   <data>
 
+    <import type="android.view.View" />
+
     <variable
       name="viewModel"
       type="org.oppia.app.player.state.itemviewmodel.FractionInteractionViewModel" />
   </data>
 
-  <FrameLayout
+  <LinearLayout
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:layout_marginStart="28dp"
-    android:layout_marginEnd="28dp"
     android:layout_marginTop="@dimen/divider_margin_top"
+    android:layout_marginEnd="28dp"
     android:layout_marginBottom="@dimen/divider_margin_bottom"
     android:descendantFocusability="beforeDescendants"
     android:focusableInTouchMode="true"
@@ -38,8 +41,21 @@
       android:singleLine="true"
       android:text="@={viewModel.answerText}"
       android:textColor="@color/oppiaPrimaryText"
-      android:textColorHint="@color/edit_text_hint"
-      android:textSize="16sp"
-      android:textStyle="italic" />
-  </FrameLayout>
+      android:textColorHint="@color/editTextHint"
+      android:textSize="14sp"
+      android:textStyle="italic"
+      app:textChangedListener="@{viewModel.answerTextWatcher}" />
+
+    <TextView
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="16dp"
+      android:layout_marginEnd="8dp"
+      android:fontFamily="sans-serif"
+      android:minHeight="32dp"
+      android:text="@{viewModel.errorMessage.get()}"
+      android:textColor="@color/editTextError"
+      android:textSize="12sp"
+      android:visibility="@{viewModel.errorMessage.get().length()>0? View.VISIBLE : View.INVISIBLE}" />
+  </LinearLayout>
 </layout>
Index: app/src/main/res/layout/topic_play_fragment.xml
===================================================================
--- app/src/main/res/layout/topic_play_fragment.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_lessons_fragment.xml	(date 1584626399000)
@@ -1,0 +1,0 @@
Index: app/src/main/res/layout/topic_review_summary_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/topic_review_summary_view.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_review_summary_view.xml	(date 1584626399000)
@@ -5,8 +5,8 @@
   <data>
 
     <variable
-      name="skill"
-      type="org.oppia.app.model.SkillSummary" />
+      name="subtopic"
+      type="org.oppia.app.model.Subtopic" />
   </data>
 
   <com.google.android.material.card.MaterialCardView
@@ -15,7 +15,7 @@
     android:layout_margin="12dp"
     android:clipToPadding="true"
     app:cardCornerRadius="8dp"
-    app:cardElevation="0dp"
+    app:cardElevation="4dp"
     app:cardMaxElevation="4dp"
     app:strokeColor="@color/oppiaBrown"
     app:strokeWidth="2dp">
@@ -25,12 +25,12 @@
       android:layout_height="wrap_content">
 
       <ImageView
-        android:id="@+id/skill_image_view"
+        android:id="@+id/subtopic_image_view"
         android:layout_width="0dp"
         android:layout_height="0dp"
         android:importantForAccessibility="no"
         android:scaleType="centerInside"
-        android:src="@{skill.skillThumbnail.thumbnailGraphic}"
+        android:src="@{subtopic.subtopicThumbnail.thumbnailGraphic}"
         app:layout_constraintDimensionRatio="H,4:3"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
@@ -43,10 +43,10 @@
         android:background="@color/oppiaBrown"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/skill_image_view" />
+        app:layout_constraintTop_toBottomOf="@id/subtopic_image_view" />
 
       <TextView
-        android:id="@+id/skill_name"
+        android:id="@+id/subtopic_title"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:ellipsize="end"
@@ -54,7 +54,7 @@
         android:maxLines="3"
         android:minLines="3"
         android:padding="12dp"
-        android:text="@{skill.description}"
+        android:text="@{subtopic.title}"
         android:textColor="@color/oppiaPrimaryText"
         android:textSize="16sp"
         app:layout_constraintTop_toBottomOf="@id/separator_view" />
Index: app/src/main/res/layout/completed_story_list_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/completed_story_list_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/completed_story_list_fragment.xml	(date 1584626399000)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.completedstorylist.CompletedStoryListViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/completed_story_list_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/completed_story_list_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/stories_completed"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/completed_story_list_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/completed_story_list"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingBottom="@dimen/bottom_white_space"
+        android:scrollbars="none"
+        app:data="@{viewModel.completedStoryListLiveData}" />
+
+      <View
+        android:id="@+id/completed_story_list_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/help_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/help_item.xml	(date 1584626399000)
+++ app/src/main/res/layout/help_item.xml	(date 1584626399000)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data class="HelpItemBinding">
+
+    <variable
+      name="viewmodel"
+      type="org.oppia.app.help.HelpViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/recycler_item_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="@dimen/dot_gap"
+      android:background="@color/white_70"
+      android:fontFamily="sans-serif"
+      android:padding="@dimen/padding_24dp"
+      android:text="@{viewmodel.title}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="20sp"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/review_card_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/review_card_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/review_card_fragment.xml	(date 1584626399000)
@@ -0,0 +1,90 @@
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.reviewcard.ReviewCardViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/review_card_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/review_card_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="@color/oppiaPrimaryDark"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:title="@{viewModel.subtopicTitle}"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/review_card_app_bar_layout">
+
+      <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:orientation="vertical">
+
+          <TextView
+            android:id="@+id/review_card_heading_text"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="28dp"
+            android:layout_marginTop="40dp"
+            android:layout_marginEnd="28dp"
+            android:fontFamily="sans-serif-medium"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="20sp" />
+
+          <TextView
+            android:id="@+id/review_card_explanation_text"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="40dp"
+            android:layout_marginTop="28dp"
+            android:layout_marginEnd="40dp"
+            android:fontFamily="sans-serif"
+            android:text="@{viewModel.explanationLiveData}"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="16sp" />
+        </LinearLayout>
+        <!--TODO(#352): Show worked examples in Review Card.-->
+      </ScrollView>
+
+      <View
+        android:id="@+id/review_card_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/ongoing_topic_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/ongoing_topic_item.xml	(date 1584626399000)
+++ app/src/main/res/layout/ongoing_topic_item.xml	(date 1584626399000)
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <import type="org.oppia.app.model.Topic" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.ongoingtopiclist.OngoingTopicItemViewModel" />
+  </data>
+
+  <com.google.android.material.card.MaterialCardView
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginStart="28dp"
+    android:layout_marginTop="28dp"
+    android:layout_marginEnd="28dp"
+    app:cardBackgroundColor="@color/white"
+    app:cardCornerRadius="4dp"
+    app:cardElevation="4dp">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content">
+
+      <ImageView
+        android:id="@+id/topic_thumbnail"
+        android:layout_width="80dp"
+        android:layout_height="0dp"
+        android:layout_marginStart="8dp"
+        android:scaleType="centerInside"
+        android:src="@{viewModel.topic.topicThumbnail.thumbnailGraphic}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintDimensionRatio="16:9"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:roundedRectDrawableWithColor="@{viewModel.topic.topicThumbnail.backgroundColorRgb}" />
+
+      <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="12dp"
+        android:layout_marginTop="12dp"
+        android:layout_marginEnd="12dp"
+        android:layout_marginBottom="12dp"
+        android:background="@color/white"
+        android:orientation="vertical"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/topic_thumbnail"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <TextView
+          android:id="@+id/topic_name_text_view"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:ellipsize="end"
+          android:fontFamily="sans-serif-medium"
+          android:maxLines="2"
+          android:text="@{viewModel.topic.name}"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="18sp" />
+
+        <TextView
+          android:id="@+id/story_count_text_view"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:layout_marginTop="4dp"
+          android:layout_marginBottom="4dp"
+          android:ellipsize="end"
+          android:fontFamily="sans-serif"
+          android:maxLines="1"
+          android:text="@{@plurals/story_count(viewModel.topic.storyCount, viewModel.topic.storyCount)}"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="16sp" />
+      </LinearLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </com.google.android.material.card.MaterialCardView>
+</layout>
Index: app/src/main/res/layout/story_text_size_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/story_text_size_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/story_text_size_activity.xml	(date 1584626399000)
@@ -0,0 +1,118 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/story_list_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/story_text_size_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/title_story_text_size"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      android:background="@color/profileEditBackground"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_list_app_bar_layout">
+
+      <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:orientation="vertical">
+
+        <TextView
+          android:id="@+id/preview_textview"
+          android:layout_width="match_parent"
+          android:layout_height="200dp"
+          android:fontFamily="sans-serif"
+          android:gravity="center"
+          android:text="@string/story_text_will_look_like_this" />
+
+        <View
+          android:layout_width="match_parent"
+          android:layout_height="1dp"
+          android:background="@drawable/toolbar_drop_shadow" />
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:background="@color/white"
+          android:orientation="horizontal">
+
+          <TextView
+            android:id="@+id/story_text_size_small_textview"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="32dp"
+            android:layout_marginTop="60dp"
+            android:layout_marginBottom="60dp"
+            android:gravity="center"
+            android:text="@string/constant_string_for_text_size"
+            android:textSize="16sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+          <SeekBar
+            android:id="@+id/story_text_size_seekBar"
+            android:layout_width="match_parent"
+            android:layout_height="27dp"
+            android:layout_marginStart="44dp"
+            android:layout_marginTop="8dp"
+            android:layout_marginEnd="44dp"
+            android:layout_marginBottom="8dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toStartOf="@+id/story_text_size_big_textview"
+            app:layout_constraintStart_toEndOf="@+id/story_text_size_small_textview"
+            app:layout_constraintTop_toTopOf="parent" />
+
+          <TextView
+            android:id="@+id/story_text_size_big_textview"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="60dp"
+            android:layout_marginEnd="32dp"
+            android:layout_marginBottom="60dp"
+            android:fontFamily="sans-serif"
+            android:gravity="center"
+            android:text="@string/constant_string_for_text_size"
+            android:textSize="28sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+      </LinearLayout>
+
+      <View
+        android:id="@+id/story_text_size_toolbar_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="8dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/administrator_controls_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/administrator_controls_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/administrator_controls_fragment.xml	(date 1584626399000)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.AdministratorControlsViewModel" />
+  </data>
+
+  <androidx.recyclerview.widget.RecyclerView
+    android:id="@+id/administrator_controls_list"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/mid_grey_30"
+    android:clipToPadding="false"
+    android:overScrollMode="never"
+    android:paddingBottom="80dp"
+    android:scrollbars="none"
+    app:data="@{viewModel.administratorControlsLiveData}"
+    app:layout_constraintBottom_toBottomOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent" />
+</layout>
Index: app/src/main/res/layout/onboarding_slide.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/onboarding_slide.xml	(date 1584626399000)
+++ app/src/main/res/layout/onboarding_slide.xml	(date 1584626399000)
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.onboarding.OnboardingSlideViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical">
+
+    <ImageView
+      android:id="@+id/slide_image_view"
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      android:src="@{viewModel.slideImage}"
+      android:contentDescription="@{viewModel.contentDescription}"
+      app:layout_constraintDimensionRatio="V,4:4"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/slide_title_text_view"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif-medium"
+      android:layout_marginStart="28dp"
+      android:layout_marginTop="16dp"
+      android:layout_marginEnd="28dp"
+      android:gravity="center_horizontal"
+      android:text="@{viewModel.title}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="24sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/slide_image_view" />
+
+    <TextView
+      android:id="@+id/slide_description_text_view"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif"
+      android:layout_marginTop="16dp"
+      android:layout_marginStart="48dp"
+      android:layout_marginEnd="48dp"
+      android:gravity="center_horizontal"
+      android:text="@{viewModel.description}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/slide_title_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/profile_progress_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/profile_progress_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/profile_progress_fragment.xml	(date 1584626399000)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.profileprogress.ProfileProgressViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/profile_progress_app_bar_layout"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/profile_progress_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/profile"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/profile_progress_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/profile_progress_list"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingBottom="@dimen/bottom_white_space"
+        android:scrollbars="none"
+        app:data="@{viewModel.ongoingStoryListViewModelLiveData}" />
+
+      <View
+        android:id="@+id/profile_progress_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/continue_playing_activity.xml
===================================================================
--- app/src/main/res/layout/continue_playing_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/profile_progress_activity.xml	(date 1584626399000)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
-  android:id="@+id/continue_playing_fragment_placeholder"
+  android:id="@+id/profile_progress_fragment_placeholder"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
-  tools:context=".home.continueplaying.ContinuePlayingActivity" />
+  tools:context=".profileprogress.ProfileProgressActivity" />
Index: app/src/main/res/layout/ongoing_topic_list_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/ongoing_topic_list_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/ongoing_topic_list_fragment.xml	(date 1584626399000)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.ongoingtopiclist.OngoingTopicListViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/topic_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/ongoing_topic_list_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/topics_in_progress"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/topic_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/ongoing_topic_list"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingBottom="@dimen/bottom_white_space"
+        android:scrollbars="none"
+        app:data="@{viewModel.ongoingTopicListViewModelLiveData}" />
+
+      <View
+        android:id="@+id/ongoing_topic_list_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/profile_picture_edit_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/profile_picture_edit_dialog.xml	(date 1584626399000)
+++ app/src/main/res/layout/profile_picture_edit_dialog.xml	(date 1584626399000)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  android:layout_width="match_parent"
+  android:layout_height="wrap_content"
+  android:orientation="vertical">
+
+  <TextView
+    android:id="@+id/profile_picture_edit_dialog_view_picture"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:fontFamily="sans-serif"
+    android:orientation="vertical"
+    android:padding="16dp"
+    android:background="?attr/selectableItemBackground"
+    android:text="@string/profile_picture_edit_alert_dialog_view_profile_picture"
+    android:textColor="@color/black"
+    android:textSize="16sp" />
+
+  <TextView
+    android:id="@+id/profile_picture_edit_dialog_change_picture"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:fontFamily="sans-serif"
+    android:orientation="vertical"
+    android:padding="16dp"
+    android:background="?attr/selectableItemBackground"
+    android:text="@string/profile_picture_edit_alert_dialog_choose_from_library"
+    android:textColor="@color/black"
+    android:textSize="16sp" />
+</LinearLayout>
Index: app/src/main/res/layout/administrator_controls_profile_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/administrator_controls_profile_view.xml	(date 1584626399000)
+++ app/src/main/res/layout/administrator_controls_profile_view.xml	(date 1584626399000)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsProfileViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/profile_management_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_profile_management_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/edit_profiles_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/edit_profiles_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:onClick="@{(v) -> viewModel.onEditProfilesClicked()}"
+      android:text="@string/administrator_controls_edit_profiles"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/profile_management_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/story_fragment_test_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/story_fragment_test_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/story_fragment_test_activity.xml	(date 1584626399000)
@@ -4,4 +4,4 @@
   android:id="@+id/story_fragment_placeholder"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
-  tools:context=".story.testing.StoryFragmentTestActivity" />
+  tools:context=".testing.StoryFragmentTestActivity" />
Index: app/src/main/res/layout/walkthrough_final_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/walkthrough_final_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/walkthrough_final_fragment.xml	(date 1584626399000)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout
+  xmlns:android="http://schemas.android.com/apk/res/android">
+
+  <data>
+
+    <variable
+      name="presenter"
+      type="org.oppia.app.walkthrough.end.WalkthroughFinalFragmentPresenter" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/state_fragment_test_activity.xml
===================================================================
--- app/src/main/res/layout/state_fragment_test_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/onboarding_activity.xml	(date 1584626399000)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
-  android:id="@+id/state_fragment_placeholder"
+  android:id="@+id/onboarding_fragment_placeholder"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
-  tools:context=".player.state.testing.StateFragmentTestActivity" />
+  tools:context=".onboarding.OnboardingActivity" />
Index: app/src/main/res/drawable/ic_show_eye_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_show_eye_icon.xml	(date 1584621433000)
+++ app/src/main/res/drawable/ic_show_eye_icon.xml	(date 1584626399000)
@@ -1,4 +1,9 @@
-<vector android:height="50dp" android:viewportHeight="24"
-    android:viewportWidth="24" android:width="50dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#008577" android:pathData="M12,6.5c3.8,0 7.2,2.1 8.8,5.5c-1.6,3.4 -5,5.5 -8.8,5.5S4.8,15.4 3.2,12C4.8,8.6 8.2,6.5 12,6.5M12,4.5C7,4.5 2.7,7.6 1,12c1.7,4.4 6,7.5 11,7.5s9.3,-3.1 11,-7.5C21.3,7.6 17,4.5 12,4.5zM12,7.5c-2.5,0 -4.5,2 -4.5,4.5s2,4.5 4.5,4.5s4.5,-2 4.5,-4.5S14.5,7.5 12,7.5z"/>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#00645C"
+      android:pathData="M12,6.5c3.8,0 7.2,2.1 8.8,5.5c-1.6,3.4 -5,5.5 -8.8,5.5S4.8,15.4 3.2,12C4.8,8.6 8.2,6.5 12,6.5M12,4.5C7,4.5 2.7,7.6 1,12c1.7,4.4 6,7.5 11,7.5s9.3,-3.1 11,-7.5C21.3,7.6 17,4.5 12,4.5zM12,7.5c-2.5,0 -4.5,2 -4.5,4.5s2,4.5 4.5,4.5s4.5,-2 4.5,-4.5S14.5,7.5 12,7.5z"/>
 </vector>
Index: app/src/main/res/layout/option_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/option_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/option_activity.xml	(date 1584626399000)
@@ -0,0 +1,31 @@
+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/options_activity_drawer_layout"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent">
+
+  <LinearLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <include
+      android:id="@+id/options_activity_toolbar"
+      layout="@layout/toolbar" />
+
+    <FrameLayout
+      android:id="@+id/options_fragment_placeholder"
+      android:layout_width="match_parent"
+      android:layout_height="match_parent" />
+  </LinearLayout>
+
+  <fragment
+    android:id="@+id/options_activity_fragment_navigation_drawer"
+    android:name="org.oppia.app.drawer.NavigationDrawerFragment"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_gravity="start"
+    app:layout="@layout/drawer_fragment"
+    tools:layout="@layout/drawer_fragment" />
+</androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/res/layout/onboarding_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/onboarding_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/onboarding_fragment.xml	(date 1584626399000)
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="presenter"
+      type="org.oppia.app.onboarding.OnboardingFragmentPresenter" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.onboarding.OnboardingViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/oppiaBackgroundYellowIvory">
+
+    <androidx.viewpager.widget.ViewPager
+      android:id="@+id/onboarding_slide_view_pager"
+      android:layout_width="match_parent"
+      android:layout_height="0dp"
+      android:layout_marginBottom="0dp"
+      android:overScrollMode="never"
+      android:scrollbars="none"
+      app:layout_constraintBottom_toTopOf="@id/bottom_container"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/get_started_container"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:paddingStart="56dp"
+      android:paddingEnd="56dp"
+      android:paddingBottom="36dp"
+      android:visibility="@{viewModel.slideNumber == (viewModel.totalNumberOfSlides - 1) ? View.VISIBLE: View.GONE, default=gone}"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent">
+
+      <Button
+        android:id="@+id/get_started_button"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/colorPrimary"
+        android:fontFamily="sans-serif-medium"
+        android:minHeight="48dp"
+        android:onClick="@{(v) -> presenter.clickOnGetStarted()}"
+        android:text="@string/get_started"
+        android:textColor="@color/white"
+        android:textSize="14sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/bottom_container"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:paddingStart="8dp"
+      android:paddingEnd="8dp"
+      android:visibility="@{viewModel.slideNumber != (viewModel.totalNumberOfSlides - 1) ? View.VISIBLE: View.GONE, default=visible}"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent">
+
+      <LinearLayout
+        android:id="@+id/slide_dots_container"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <TextView
+        android:id="@+id/skip_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:fontFamily="sans-serif-medium"
+        android:gravity="center"
+        android:minHeight="48dp"
+        android:onClick="@{(v) -> presenter.clickOnSkip()}"
+        android:paddingStart="8dp"
+        android:paddingEnd="8dp"
+        android:text="@string/skip"
+        android:textAllCaps="true"
+        android:textColor="@color/colorPrimary"
+        android:textSize="14sp"
+        app:layout_constraintBottom_toBottomOf="@+id/slide_dots_container"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="@+id/slide_dots_container" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/default_audio_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/default_audio_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/default_audio_activity.xml	(date 1584626399000)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/story_list_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/audio_language_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/title_default_audio"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_list_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/audio_language_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingTop="8dp"
+        android:paddingBottom="128dp"
+        android:scrollbars="none"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/toolbar_shadow_view" />
+
+      <View
+        android:id="@+id/toolbar_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/org/oppia/app/mydownloads/MyDownloadsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/mydownloads/MyDownloadsActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/mydownloads/MyDownloadsActivity.kt	(date 1584626399000)
@@ -1,16 +1,40 @@
 package org.oppia.app.mydownloads
 
+import android.content.Context
+import android.content.Intent
 import android.os.Bundle
 import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
+import org.oppia.app.home.HomeActivity
 import javax.inject.Inject
 
 /** The activity for displaying [MyDownloadsFragment]. */
 class MyDownloadsActivity : InjectableAppCompatActivity() {
   @Inject lateinit var myDownloadsActivityPresenter: MyDownloadsActivityPresenter
+  private var internalProfileId: Int = -1
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
     myDownloadsActivityPresenter.handleOnCreate()
+    internalProfileId = intent.getIntExtra(KEY_NAVIGATION_PROFILE_ID, -1)
+  }
+
+  companion object {
+    fun createMyDownloadsActivityIntent(context: Context, profileId: Int?): Intent {
+      val intent = Intent(context, MyDownloadsActivity::class.java)
+      intent.putExtra(KEY_NAVIGATION_PROFILE_ID, profileId)
+      return intent
+    }
+
+    fun getIntentKey(): String {
+      return KEY_NAVIGATION_PROFILE_ID
+    }
+  }
+
+  override fun onBackPressed() {
+    val intent = HomeActivity.createHomeActivity(this, internalProfileId)
+    startActivity(intent)
+    finish()
   }
 }
Index: app/src/main/res/layout/profile_progress_recently_played_story_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/profile_progress_recently_played_story_card.xml	(date 1584626399000)
+++ app/src/main/res/layout/profile_progress_recently_played_story_card.xml	(date 1584626399000)
@@ -0,0 +1,94 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.profileprogress.RecentlyPlayedStorySummaryViewModel" />
+  </data>
+
+  <com.google.android.material.card.MaterialCardView
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginStart="28dp"
+    android:layout_marginTop="28dp"
+    android:layout_marginEnd="28dp"
+    app:cardBackgroundColor="@color/white"
+    app:cardCornerRadius="4dp"
+    app:cardElevation="4dp">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content">
+
+      <ImageView
+        android:id="@+id/lesson_thumbnail"
+        android:layout_width="80dp"
+        android:layout_height="0dp"
+        android:layout_marginStart="8dp"
+        android:contentDescription="@{@string/lesson_thumbnail_content_description(viewModel.promotedStory.nextChapterName)}"
+        android:scaleType="centerInside"
+        android:src="@{viewModel.promotedStory.lessonThumbnail.thumbnailGraphic}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintDimensionRatio="16:9"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:roundedRectDrawableWithColor="@{viewModel.promotedStory.lessonThumbnail.backgroundColorRgb}" />
+
+      <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="12dp"
+        android:layout_marginTop="12dp"
+        android:layout_marginEnd="12dp"
+        android:layout_marginBottom="12dp"
+        android:background="@color/white"
+        android:orientation="vertical"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/lesson_thumbnail"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <TextView
+          android:id="@+id/chapter_name_text_view"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:ellipsize="end"
+          android:fontFamily="sans-serif-medium"
+          android:maxLines="1"
+          android:text="@{viewModel.promotedStory.nextChapterName}"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="18sp" />
+
+        <TextView
+          android:id="@+id/story_name_text_view"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:layout_marginTop="4dp"
+          android:layout_marginBottom="4dp"
+          android:ellipsize="end"
+          android:fontFamily="sans-serif"
+          android:maxLines="1"
+          android:text="@{viewModel.promotedStory.storyName}"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="16sp" />
+
+        <TextView
+          android:id="@+id/topic_name_text_view"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:ellipsize="end"
+          android:fontFamily="sans-serif-light"
+          android:maxLines="1"
+          android:text="@{viewModel.promotedStory.topicName}"
+          android:textAllCaps="true"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="14sp" />
+      </LinearLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </com.google.android.material.card.MaterialCardView>
+</layout>
Index: app/src/main/res/layout/language_items.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/language_items.xml	(date 1584626399000)
+++ app/src/main/res/layout/language_items.xml	(date 1584626399000)
@@ -0,0 +1,39 @@
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="languageString"
+      type="CharSequence" />
+  </data>
+
+  <RelativeLayout
+    android:id="@+id/radio_container"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="4dp"
+    android:gravity="center_vertical"
+    android:minHeight="48dp">
+
+    <androidx.appcompat.widget.AppCompatRadioButton
+      android:id="@+id/language_radio_button"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:clickable="false"
+      android:padding="4dp"
+      app:buttonTint="@color/defaultAudioActivityRadioButton" />
+
+    <TextView
+      android:id="@+id/language_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="4dp"
+      android:layout_toEndOf="@+id/language_radio_button"
+      android:fontFamily="sans-serif"
+      android:paddingTop="4dp"
+      android:text="@{languageString}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp" />
+  </RelativeLayout>
+</layout>
Index: app/src/main/res/layout/completed_story_list_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/completed_story_list_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/completed_story_list_activity.xml	(date 1584626399000)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/completed_story_list_fragment_placeholder"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  tools:context=".completedstorylist.CompletedStoryListActivity" />
Index: app/src/main/res/layout/numeric_input_interaction_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/numeric_input_interaction_item.xml	(date 1584621433000)
+++ app/src/main/res/layout/numeric_input_interaction_item.xml	(date 1584626399000)
@@ -1,19 +1,22 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android">
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
 
   <data>
 
+    <import type="android.view.View" />
+
     <variable
       name="viewModel"
       type="org.oppia.app.player.state.itemviewmodel.NumericInputViewModel" />
   </data>
 
-  <FrameLayout
+  <LinearLayout
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:layout_marginStart="28dp"
-    android:layout_marginEnd="28dp"
     android:layout_marginTop="@dimen/divider_margin_top"
+    android:layout_marginEnd="28dp"
     android:layout_marginBottom="@dimen/divider_margin_bottom"
     android:descendantFocusability="beforeDescendants"
     android:focusableInTouchMode="true"
@@ -24,10 +27,10 @@
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:background="@drawable/edit_text_background"
-      android:digits="0123456789."
+      android:contentDescription="@string/numeric_input_content_description"
+      android:digits="0123456789.-"
       android:fontFamily="sans-serif"
       android:imeOptions="actionDone"
-      android:contentDescription="@string/numeric_input_content_description"
       android:inputType="numberDecimal"
       android:longClickable="false"
       android:maxLength="200"
@@ -38,8 +41,21 @@
       android:singleLine="true"
       android:text="@={viewModel.answerText}"
       android:textColor="@color/oppiaPrimaryText"
-      android:textColorHint="@color/edit_text_hint"
-      android:textSize="16sp"
-      android:textStyle="italic" />
-  </FrameLayout>
+      android:textColorHint="@color/editTextHint"
+      android:textSize="14sp"
+      android:textStyle="italic"
+      app:textChangedListener="@{viewModel.answerTextWatcher}" />
+
+    <TextView
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="16dp"
+      android:layout_marginEnd="8dp"
+      android:fontFamily="sans-serif"
+      android:minHeight="32dp"
+      android:text="@{viewModel.errorMessage.get()}"
+      android:textColor="@color/editTextError"
+      android:textSize="12sp"
+      android:visibility="@{viewModel.errorMessage.get().length() > 0 ? View.VISIBLE : View.INVISIBLE}" />
+  </LinearLayout>
 </layout>
Index: domain/src/test/java/org/oppia/domain/audio/CellularAudioDialogControllerTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/test/java/org/oppia/domain/audio/CellularAudioDialogControllerTest.kt	(date 1584621433000)
+++ domain/src/test/java/org/oppia/domain/audio/CellularAudioDialogControllerTest.kt	(date 1584626399000)
@@ -27,7 +27,6 @@
 import org.mockito.junit.MockitoJUnit
 import org.mockito.junit.MockitoRule
 import org.oppia.app.model.CellularDataPreference
-import org.oppia.domain.UserAppHistoryController
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
@@ -41,7 +40,6 @@
 import javax.inject.Singleton
 import kotlin.coroutines.EmptyCoroutineContext
 
-/** Tests for [UserAppHistoryController]. */
 @RunWith(AndroidJUnit4::class)
 @Config(manifest = Config.NONE)
 class CellularAudioDialogControllerTest {
Index: app/src/main/res/layout/administrator_controls_account_actions_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/administrator_controls_account_actions_view.xml	(date 1584626399000)
+++ app/src/main/res/layout/administrator_controls_account_actions_view.xml	(date 1584626399000)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAccountActionsViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/account_actions_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_account_actions_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/log_out_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/log_out_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_log_out"
+      android:onClick="@{(v) -> viewModel.onLogOutClicked()}"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/account_actions_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/options_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/options_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/options_fragment.xml	(date 1584626399000)
@@ -0,0 +1,26 @@
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <data>
+
+      <variable
+        name="viewModel"
+        type="org.oppia.app.options.OptionControlsViewModel" />
+    </data>
+
+  <androidx.recyclerview.widget.RecyclerView
+    android:id="@+id/options_recyclerview"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/mid_grey_30"
+    android:clipToPadding="false"
+    android:overScrollMode="never"
+    android:paddingBottom="80dp"
+    android:scrollbars="none"
+    app:data="@{viewModel.optionListLiveData}"
+    app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+    app:layout_constraintBottom_toBottomOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent" />
+</layout>
Index: app/src/main/res/layout/section_title.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/section_title.xml	(date 1584621433000)
+++ app/src/main/res/layout/section_title.xml	(date 1584626399000)
@@ -7,7 +7,7 @@
 
     <variable
       name="viewModel"
-      type="org.oppia.app.home.continueplaying.SectionTitleViewModel" />
+      type="org.oppia.app.home.recentlyplayed.SectionTitleViewModel" />
   </data>
 
   <LinearLayout
Index: app/src/main/res/layout/administrator_controls_app_information_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/administrator_controls_app_information_view.xml	(date 1584626399000)
+++ app/src/main/res/layout/administrator_controls_app_information_view.xml	(date 1584626399000)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAppInformationViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/app_information_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_app_information_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/app_version_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/app_version_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="16dp"
+      android:paddingTop="20dp"
+      android:paddingRight="16dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_app_version"
+      android:onClick="@{(v) -> viewModel.onAppVersionClicked()}"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/app_information_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/continue_playing_fragment_test_activity.xml
===================================================================
--- app/src/main/res/layout/continue_playing_fragment_test_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/ongoing_topic_list_activity.xml	(date 1584626399000)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
-  android:id="@+id/continue_playing_fragment_placeholder"
+  android:id="@+id/ongoing_topic_list_fragment_placeholder"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
-  tools:context=".testing.ContinuePlayingFragmentTestActivity" />
+  tools:context=".ongoingtopiclist.OngoingTopicListActivity" />
Index: app/src/main/res/layout/story_header_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/story_header_view.xml	(date 1584621433000)
+++ app/src/main/res/layout/story_header_view.xml	(date 1584626399000)
@@ -13,9 +13,9 @@
     android:id="@+id/story_progress_chapter_completed_text"
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
-    android:layout_marginStart="24dp"
-    android:layout_marginTop="36dp"
-    android:layout_marginEnd="24dp"
+    android:layout_marginStart="32dp"
+    android:layout_marginTop="32dp"
+    android:layout_marginEnd="32dp"
     android:layout_marginBottom="8dp"
     android:fontFamily="sans-serif-medium"
     android:text="@{@plurals/story_total_chapters(viewModel.totalChapters, viewModel.completedChapters, viewModel.totalChapters)}"
Index: app/src/main/java/org/oppia/app/drawer/NavigationDrawerFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/drawer/NavigationDrawerFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/drawer/NavigationDrawerFragment.kt	(date 1584626399000)
@@ -7,14 +7,15 @@
 import android.view.ViewGroup
 import androidx.appcompat.widget.Toolbar
 import androidx.drawerlayout.widget.DrawerLayout
+import org.oppia.app.administratorcontrols.AdministratorControlsActivity
 import org.oppia.app.fragment.InjectableFragment
+import org.oppia.app.profileprogress.ProfileProgressActivity
 import javax.inject.Inject
 
 /** [NavigationDrawerFragment] to show navigation drawer. */
-class NavigationDrawerFragment : InjectableFragment() {
+class NavigationDrawerFragment : InjectableFragment(), RouteToAdministratorControlsListener, RouteToProfileProgressListener {
 
-  @Inject
-  lateinit var navigationDrawerFragmentPresenter: NavigationDrawerFragmentPresenter
+  @Inject lateinit var navigationDrawerFragmentPresenter: NavigationDrawerFragmentPresenter
 
   override fun onAttach(context: Context) {
     super.onAttach(context)
@@ -28,4 +29,12 @@
   fun setUpDrawer(drawerLayout: DrawerLayout, toolbar: Toolbar, menuItemId: Int) {
     navigationDrawerFragmentPresenter.setUpDrawer(drawerLayout, toolbar, menuItemId)
   }
+
+  override fun routeToAdministratorControls(profileId: Int) {
+    startActivity(AdministratorControlsActivity.createAdministratorControlsActivityIntent(this.activity!!, profileId))
+  }
+
+  override fun routeToProfileProgress(profileId: Int) {
+    startActivity(ProfileProgressActivity.createProfileProgressActivityIntent(this.activity!!, profileId))
+  }
 }
Index: app/src/main/res/layout/topic_practice_footer_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/topic_practice_footer_view.xml	(date 1584626399000)
+++ app/src/main/res/layout/topic_practice_footer_view.xml	(date 1584626399000)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="isSubmitButtonActive"
+      type="Boolean" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeFooterViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <Button
+      android:id="@+id/topic_practice_start_button"
+      style="@style/StateButtonInactive"
+      android:layout_width="160dp"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="36dp"
+      android:background="@{isSubmitButtonActive ? @drawable/state_button_primary_background :@drawable/start_button_transparent_background}"
+      android:clickable="@{isSubmitButtonActive}"
+      android:fontFamily="sans-serif-medium"
+      android:minHeight="36dp"
+      android:text="@string/topic_practice_start"
+      android:textColor="@{isSubmitButtonActive ? @color/white : @color/submitButtonInactive}"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/org/oppia/app/drawer/NavigationDrawerFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/drawer/NavigationDrawerFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/drawer/NavigationDrawerFragmentPresenter.kt	(date 1584626399000)
@@ -1,51 +1,194 @@
 package org.oppia.app.drawer
 
-import android.content.Intent
 import android.view.LayoutInflater
 import android.view.MenuItem
 import android.view.View
 import android.view.ViewGroup
 import androidx.appcompat.app.ActionBarDrawerToggle
+import androidx.appcompat.app.AlertDialog
+import androidx.appcompat.app.AppCompatActivity
 import androidx.appcompat.widget.Toolbar
 import androidx.drawerlayout.widget.DrawerLayout
 import androidx.fragment.app.Fragment
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Observer
+import androidx.lifecycle.Transformations
 import com.google.android.material.navigation.NavigationView
 import org.oppia.app.R
+import org.oppia.app.databinding.DrawerFragmentBinding
+import org.oppia.app.databinding.NavHeaderNavigationDrawerBinding
 import org.oppia.app.fragment.FragmentScope
 import org.oppia.app.help.HelpActivity
 import org.oppia.app.home.HomeActivity
+import org.oppia.app.model.CompletedStoryList
+import org.oppia.app.model.OngoingTopicList
+import org.oppia.app.model.Profile
+import org.oppia.app.model.ProfileId
+import org.oppia.app.mydownloads.MyDownloadsActivity
+import org.oppia.app.options.OptionsActivity
+import org.oppia.app.profile.ProfileActivity
+import org.oppia.app.viewmodel.ViewModelProvider
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.domain.topic.TopicController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
 import javax.inject.Inject
 
+const val KEY_NAVIGATION_PROFILE_ID = "KEY_NAVIGATION_PROFILE_ID"
+
 /** The presenter for [NavigationDrawerFragment]. */
 @FragmentScope
 class NavigationDrawerFragmentPresenter @Inject constructor(
-  private val fragment: Fragment
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val profileManagementController: ProfileManagementController,
+  private val topicController: TopicController,
+  private val logger: Logger,
+  private val headerViewModelProvider: ViewModelProvider<NavigationDrawerHeaderViewModel>,
+  private val footerViewModelProvider: ViewModelProvider<NavigationDrawerFooterViewModel>
 ) : NavigationView.OnNavigationItemSelectedListener {
-  private lateinit var navView: NavigationView
   private lateinit var drawerToggle: ActionBarDrawerToggle
   private lateinit var drawerLayout: DrawerLayout
+  private lateinit var binding: DrawerFragmentBinding
+  private lateinit var profileId: ProfileId
   private var previousMenuItemId: Int? = null
+  private var internalProfileId: Int = -1
+
+  private var routeToAdministratorControlsListener = fragment as RouteToAdministratorControlsListener
 
   fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
-    val view: View? = inflater.inflate(R.layout.fragment_drawer, container, false)
-    navView = view!!.findViewById(R.id.fragment_drawer_nav_view)
-    navView.setNavigationItemSelectedListener(this)
+    binding = DrawerFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    binding.fragmentDrawerNavView.setNavigationItemSelectedListener(this)
+
     fragment.setHasOptionsMenu(true)
-    return view
+
+    internalProfileId = activity.intent.getIntExtra(KEY_NAVIGATION_PROFILE_ID, -1)
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+
+    val headerBinding = NavHeaderNavigationDrawerBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    headerBinding.viewModel = getHeaderViewModel()
+    subscribeToProfileLiveData()
+    subscribeToCompletedStoryListLiveData()
+    subscribeToOngoingTopicListLiveData()
+
+    binding.fragmentDrawerNavView.addHeaderView(headerBinding.root)
+    binding.footerViewModel = getFooterViewModel()
+    binding.executePendingBindings()
+
+    return binding.root
+  }
+
+  private fun getProfileData(): LiveData<Profile> {
+    return Transformations.map(profileManagementController.getProfile(profileId), ::processGetProfileResult)
+  }
+
+  private fun subscribeToProfileLiveData() {
+    getProfileData().observe(fragment, Observer<Profile> {
+      getHeaderViewModel().profile.set(it)
+      getFooterViewModel().isAdmin.set(it.isAdmin)
+      binding.administratorControlsLinearLayout.setOnClickListener {
+        routeToAdministratorControlsListener.routeToAdministratorControls(internalProfileId)
+        drawerLayout.closeDrawers()
+      }
+    })
+  }
+
+  private fun processGetProfileResult(profileResult: AsyncResult<Profile>): Profile {
+    if (profileResult.isFailure()) {
+      logger.e("NavigationDrawerFragment", "Failed to retrieve profile", profileResult.getErrorOrNull()!!)
+    }
+    return profileResult.getOrDefault(Profile.getDefaultInstance())
+  }
+
+  private fun getCompletedStoryListCount(): LiveData<CompletedStoryList> {
+    return Transformations.map(topicController.getCompletedStoryList(profileId), ::processGetCompletedStoryListResult)
+  }
+
+  private fun subscribeToCompletedStoryListLiveData() {
+    getCompletedStoryListCount().observe(fragment, Observer<CompletedStoryList> {
+      getHeaderViewModel().completedStoryCount.set(it.completedStoryCount)
+    })
+  }
+
+  private fun processGetCompletedStoryListResult(completedStoryListResult: AsyncResult<CompletedStoryList>): CompletedStoryList {
+    if (completedStoryListResult.isFailure()) {
+      logger.e(
+        "NavigationDrawerFragment",
+        "Failed to retrieve completed story list",
+        completedStoryListResult.getErrorOrNull()!!
+      )
+    }
+    return completedStoryListResult.getOrDefault(CompletedStoryList.getDefaultInstance())
+  }
+
+  private fun getOngoingTopicListCount(): LiveData<OngoingTopicList> {
+    return Transformations.map(topicController.getOngoingTopicList(profileId), ::processGetOngoingTopicListResult)
+  }
+
+  private fun subscribeToOngoingTopicListLiveData() {
+    getOngoingTopicListCount().observe(fragment, Observer<OngoingTopicList> {
+      getHeaderViewModel().ongoingTopicCount.set(it.topicCount)
+    })
+  }
+
+  private fun processGetOngoingTopicListResult(ongoingTopicListResult: AsyncResult<OngoingTopicList>): OngoingTopicList {
+    if (ongoingTopicListResult.isFailure()) {
+      logger.e(
+        "NavigationDrawerFragment",
+        "Failed to retrieve ongoing topic list",
+        ongoingTopicListResult.getErrorOrNull()!!
+      )
+    }
+    return ongoingTopicListResult.getOrDefault(OngoingTopicList.getDefaultInstance())
   }
 
   private fun openActivityByMenuItemId(menuItemId: Int) {
     if (previousMenuItemId != menuItemId && menuItemId != 0) {
-      val intent = when (NavigationDrawerItem.valueFromNavId(menuItemId)) {
+      when (NavigationDrawerItem.valueFromNavId(menuItemId)) {
         NavigationDrawerItem.HOME -> {
-          Intent(fragment.activity, HomeActivity::class.java)
+          val intent = HomeActivity.createHomeActivity(activity, internalProfileId)
+          fragment.activity!!.startActivity(intent)
+          fragment.activity!!.finish()
+        }
+        NavigationDrawerItem.OPTIONS -> {
+          fragment.activity!!.startActivity(
+            OptionsActivity.createOptionsActivity(
+              fragment.requireContext(),
+              internalProfileId
+            )
+          )
+          drawerLayout.closeDrawers()
         }
         NavigationDrawerItem.HELP -> {
-          Intent(fragment.activity, HelpActivity::class.java)
+          val intent = HelpActivity.createHelpActivityIntent(activity, internalProfileId)
+          fragment.activity!!.startActivity(intent)
+          fragment.activity!!.finish()
         }
-      }
-      fragment.activity!!.startActivity(intent)
-      fragment.activity!!.finish()
+        NavigationDrawerItem.DOWNLOADS -> {
+          val intent = MyDownloadsActivity.createMyDownloadsActivityIntent(activity, internalProfileId)
+          fragment.activity!!.startActivity(intent)
+          fragment.activity!!.finish()
+        }
+        NavigationDrawerItem.SWITCH_PROFILE -> {
+          AlertDialog.Builder(fragment.context!!, R.style.AlertDialogTheme)
+            .setMessage(R.string.home_activity_back_dialog_message)
+            .setOnCancelListener { dialog ->
+              binding.fragmentDrawerNavView.menu.getItem(NavigationDrawerItem.HOME.ordinal).isChecked = true
+              drawerLayout.closeDrawers()
+              dialog.dismiss()
+            }
+            .setNegativeButton(R.string.home_activity_back_dialog_cancel) { dialog, _ ->
+              binding.fragmentDrawerNavView.menu.getItem(NavigationDrawerItem.HOME.ordinal).isChecked = true
+              drawerLayout.closeDrawers()
+              dialog.dismiss()
+            }
+            .setPositiveButton(R.string.home_activity_back_dialog_exit) { _, _ ->
+              // TODO(#322): Need to start intent for ProfileActivity to get update. Change to finish when live data bug is fixed.
+              val intent = ProfileActivity.createProfileActivity(fragment.context!!)
+              fragment.activity!!.startActivity(intent)
+            }.create().show()
+        }
+      }
     } else {
       drawerLayout.closeDrawers()
     }
@@ -56,40 +199,83 @@
    * expected to provide. The [menuItemId] corresponds to the menu ID of the current activity, for navigation purposes.
    */
   fun setUpDrawer(drawerLayout: DrawerLayout, toolbar: Toolbar, menuItemId: Int) {
-    when (NavigationDrawerItem.valueFromNavId(menuItemId)) {
-      NavigationDrawerItem.HOME -> {
-        navView.menu.getItem(NavigationDrawerItem.HOME.ordinal).isChecked = true
-      }
-      NavigationDrawerItem.HELP -> {
-        navView.menu.getItem(NavigationDrawerItem.HELP.ordinal).isChecked = true
-      }
-    }
-    this.drawerLayout = drawerLayout
-    previousMenuItemId = menuItemId
-    drawerToggle = object : ActionBarDrawerToggle(
-      fragment.activity,
-      drawerLayout,
-      toolbar,
-      R.string.drawer_open_content_description,
-      R.string.drawer_close_content_description
-    ) {
-      override fun onDrawerOpened(drawerView: View) {
-        super.onDrawerOpened(drawerView)
-        fragment.activity!!.invalidateOptionsMenu()
-      }
+    if (menuItemId != 0) {
+      when (NavigationDrawerItem.valueFromNavId(menuItemId)) {
+        NavigationDrawerItem.HOME -> {
+          binding.fragmentDrawerNavView.menu.getItem(NavigationDrawerItem.HOME.ordinal).isChecked = true
+        }
+        NavigationDrawerItem.OPTIONS -> {
+          binding.fragmentDrawerNavView.menu.getItem(NavigationDrawerItem.OPTIONS.ordinal).isChecked = true
+        }
+        NavigationDrawerItem.HELP -> {
+          binding.fragmentDrawerNavView.menu.getItem(NavigationDrawerItem.HELP.ordinal).isChecked = true
+        }
+        NavigationDrawerItem.DOWNLOADS -> {
+          binding.fragmentDrawerNavView.menu.getItem(NavigationDrawerItem.DOWNLOADS.ordinal).isChecked = true
+        }
+        NavigationDrawerItem.SWITCH_PROFILE -> {
+          binding.fragmentDrawerNavView.menu.getItem(NavigationDrawerItem.SWITCH_PROFILE.ordinal).isChecked = true
+        }
+      }
+      this.drawerLayout = drawerLayout
+      previousMenuItemId = menuItemId
+      drawerToggle = object : ActionBarDrawerToggle(
+        fragment.activity,
+        drawerLayout,
+        toolbar,
+        R.string.drawer_open_content_description,
+        R.string.drawer_close_content_description
+      ) {
+        override fun onDrawerOpened(drawerView: View) {
+          super.onDrawerOpened(drawerView)
+          fragment.activity!!.invalidateOptionsMenu()
+        }
 
-      override fun onDrawerClosed(drawerView: View) {
-        super.onDrawerClosed(drawerView)
-        fragment.activity!!.invalidateOptionsMenu()
-      }
-    }
-    drawerLayout.setDrawerListener(drawerToggle)
-    /* Synchronize the state of the drawer indicator/affordance with the linked [drawerLayout]. */
-    drawerLayout.post { drawerToggle.syncState() }
+        override fun onDrawerClosed(drawerView: View) {
+          super.onDrawerClosed(drawerView)
+          fragment.activity!!.invalidateOptionsMenu()
+        }
+      }
+      drawerLayout.setDrawerListener(drawerToggle)
+      /* Synchronize the state of the drawer indicator/affordance with the linked [drawerLayout]. */
+      drawerLayout.post { drawerToggle.syncState() }
+    } else {
+      // For showing navigation drawer in AdministratorControlsActivity
+
+      this.drawerLayout = drawerLayout
+      drawerToggle = object : ActionBarDrawerToggle(
+        fragment.activity,
+        drawerLayout,
+        toolbar,
+        R.string.drawer_open_content_description,
+        R.string.drawer_close_content_description
+      ) {
+        override fun onDrawerOpened(drawerView: View) {
+          super.onDrawerOpened(drawerView)
+          fragment.activity!!.invalidateOptionsMenu()
+        }
+
+        override fun onDrawerClosed(drawerView: View) {
+          super.onDrawerClosed(drawerView)
+          fragment.activity!!.invalidateOptionsMenu()
+        }
+      }
+      drawerLayout.setDrawerListener(drawerToggle)
+      /* Synchronize the state of the drawer indicator/affordance with the linked [drawerLayout]. */
+      drawerLayout.post { drawerToggle.syncState() }
+    }
   }
 
   override fun onNavigationItemSelected(menuItem: MenuItem): Boolean {
     openActivityByMenuItemId(menuItem.itemId)
     return true
   }
+
+  private fun getHeaderViewModel(): NavigationDrawerHeaderViewModel {
+    return headerViewModelProvider.getForFragment(fragment, NavigationDrawerHeaderViewModel::class.java)
+  }
+
+  private fun getFooterViewModel(): NavigationDrawerFooterViewModel {
+    return footerViewModelProvider.getForFragment(fragment, NavigationDrawerFooterViewModel::class.java)
+  }
 }
Index: app/src/main/res/layout/walkthrough_topic_list_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/walkthrough_topic_list_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/walkthrough_topic_list_fragment.xml	(date 1584626399000)
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:android="http://schemas.android.com/apk/res/android">
+
+  <data>
+
+    <variable
+      name="presenter"
+      type="org.oppia.app.walkthrough.topiclist.WalkthroughTopicListFragmentPresenter" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <Button
+      style="@style/StateButtonActive"
+      android:text="@string/next"
+      android:onClick="@{(v) -> presenter.changePage()}"
+      android:layout_marginBottom="32dp"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent" />
+
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/org/oppia/app/drawer/NavigationDrawerItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/drawer/NavigationDrawerItem.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/drawer/NavigationDrawerItem.kt	(date 1584626399000)
@@ -4,7 +4,7 @@
 
 /** Represents different destinations that can be selected by the user from the navigation drawer. */
 enum class NavigationDrawerItem(val value: Int) {
-  HOME(R.id.nav_home), HELP(R.id.nav_help);
+  HOME(R.id.nav_home), OPTIONS(R.id.nav_options), HELP(R.id.nav_help), DOWNLOADS(R.id.nav_my_downloads), SWITCH_PROFILE(R.id.nav_switch_profile);
 
   companion object {
     fun valueFromNavId(id: Int): NavigationDrawerItem {
Index: app/src/main/res/layout/review_card_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/review_card_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/review_card_activity.xml	(date 1584626399000)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/review_card_fragment_placeholder"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  tools:context="ReviewCardActivity" />
Index: app/src/main/res/layout/recently_played_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/recently_played_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/recently_played_fragment.xml	(date 1584626399000)
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.home.recentlyplayed.RecentlyPlayedViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/story_list_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/recently_played_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/recently_played_activity"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_list_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/ongoing_story_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingTop="8dp"
+        android:paddingBottom="172dp"
+        android:scrollbars="none"
+        app:data="@{viewModel.ongoingStoryLiveData}"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
+
+      <View
+        android:id="@+id/recently_played__shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/completed_story_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/completed_story_item.xml	(date 1584626399000)
+++ app/src/main/res/layout/completed_story_item.xml	(date 1584626399000)
@@ -0,0 +1,80 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.completedstorylist.CompletedStoryItemViewModel" />
+  </data>
+
+  <com.google.android.material.card.MaterialCardView
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginStart="28dp"
+    android:layout_marginTop="28dp"
+    android:layout_marginEnd="28dp"
+    app:cardBackgroundColor="@color/white"
+    app:cardCornerRadius="4dp"
+    app:cardElevation="4dp">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content">
+
+      <ImageView
+        android:id="@+id/completed_story_lesson_thumbnail"
+        android:layout_width="80dp"
+        android:layout_height="0dp"
+        android:layout_marginStart="8dp"
+        android:contentDescription="@{viewModel.completedStory.storyName}"
+        android:scaleType="centerInside"
+        android:src="@{viewModel.completedStory.lessonThumbnail.thumbnailGraphic}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintDimensionRatio="16:9"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:roundedRectDrawableWithColor="@{viewModel.completedStory.lessonThumbnail.backgroundColorRgb}" />
+
+      <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="12dp"
+        android:layout_marginTop="12dp"
+        android:layout_marginEnd="12dp"
+        android:layout_marginBottom="12dp"
+        android:background="@color/white"
+        android:orientation="vertical"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/completed_story_lesson_thumbnail"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <TextView
+          android:id="@+id/completed_story_name_text_view"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:layout_marginBottom="4dp"
+          android:ellipsize="end"
+          android:fontFamily="sans-serif"
+          android:text="@{viewModel.completedStory.storyName}"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="16sp" />
+
+        <TextView
+          android:id="@+id/completed_story_topic_name_text_view"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:ellipsize="end"
+          android:fontFamily="sans-serif-light"
+          android:text="@{viewModel.completedStory.topicName}"
+          android:textAllCaps="true"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="14sp" />
+      </LinearLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </com.google.android.material.card.MaterialCardView>
+</layout>
Index: app/src/main/res/layout/topic_train_skill_view.xml
===================================================================
--- app/src/main/res/layout/topic_train_skill_view.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_practice_subtopic.xml	(date 1584626399000)
@@ -9,8 +9,8 @@
       type="Boolean" />
 
     <variable
-      name="skill"
-      type="org.oppia.app.model.SkillSummary" />
+      name="viewModel"
+      type="org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeSubtopicViewModel" />
   </data>
 
   <androidx.constraintlayout.widget.ConstraintLayout
@@ -20,24 +20,25 @@
     app:constraint_referenced_ids="button_example,text_view_status">
 
     <androidx.constraintlayout.widget.Barrier
-      android:id="@+id/topic_train_skill_barrier"
+      android:id="@+id/topic_practice_subtopic_barrier"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       app:barrierDirection="bottom"
-      app:constraint_referenced_ids="skill_check_box" />
+      app:constraint_referenced_ids="subtopic_check_box" />
 
     <CheckBox
-      android:id="@+id/skill_check_box"
+      android:id="@+id/subtopic_check_box"
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:button="@drawable/selector_checkbox"
       android:checked="@{isChecked}"
       android:fontFamily="sans-serif"
       android:gravity="top"
-      android:minHeight="48dp"
+      android:layout_marginTop="16dp"
       android:paddingStart="20dp"
+      android:layout_marginStart="40dp"
       android:paddingEnd="20dp"
-      android:text="@{skill.description}"
+      android:text="@{viewModel.subtopic.title}"
       android:textColor="@color/oppiaPrimaryText"
       android:textSize="16sp"
       app:layout_constraintBottom_toBottomOf="parent"
Index: app/src/main/res/layout/drawer_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/drawer_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/drawer_fragment.xml	(date 1584626399000)
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+  <data>
+    <import type="android.view.View" />
+    <variable
+      name="footerViewModel"
+      type="org.oppia.app.drawer.NavigationDrawerFooterViewModel" />
+  </data>
+  <com.google.android.material.navigation.NavigationView
+    android:id="@+id/fragment_drawer_nav_view"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_gravity="start"
+    android:fitsSystemWindows="true"
+    app:itemBackground="@android:color/transparent"
+    app:itemIconTint="@color/drawer_item"
+    app:itemTextColor="@color/drawer_item"
+    app:menu="@menu/navigation_drawer_menu">
+
+    <LinearLayout
+      android:id="@+id/administrator_controls_linear_layout"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_gravity="bottom"
+      android:orientation="horizontal"
+      android:padding="16dp"
+      android:visibility="@{footerViewModel.isAdmin ? View.VISIBLE : View.GONE}">
+
+      <ImageView
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:layout_gravity="center_vertical"
+        android:layout_margin="4dp"
+        android:src="@drawable/ic_admin_settings_icon_brown_24dp" />
+
+      <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:layout_marginStart="32dp"
+        android:layout_marginEnd="32dp"
+        android:fontFamily="sans-serif-medium"
+        android:text="@string/administrator_controls"
+        android:textColor="@color/highlightedNavMenuItem"
+        android:textSize="14sp" />
+    </LinearLayout>
+  </com.google.android.material.navigation.NavigationView>
+</layout>
Index: app/src/main/java/org/oppia/app/help/HelpActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/HelpActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/help/HelpActivityPresenter.kt	(date 1584626399000)
@@ -12,15 +12,17 @@
 /** The presenter for [HelpActivity]. */
 @ActivityScope
 class HelpActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
-  private var navigationDrawerFragment: NavigationDrawerFragment? = null
+  private lateinit var navigationDrawerFragment: NavigationDrawerFragment
 
   fun handleOnCreate() {
     activity.setContentView(R.layout.help_activity)
     setUpNavigationDrawer()
-    activity.supportFragmentManager.beginTransaction().add(
-      R.id.help_fragment_placeholder,
-      HelpFragment()
-    ).commitNow()
+    if (getHelpFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.help_fragment_placeholder,
+        HelpFragment()
+      ).commitNow()
+    }
   }
 
   private fun setUpNavigationDrawer() {
@@ -29,9 +31,13 @@
     activity.supportActionBar!!.setDisplayShowHomeEnabled(true)
     navigationDrawerFragment =
       activity.supportFragmentManager.findFragmentById(R.id.help_activity_fragment_navigation_drawer) as NavigationDrawerFragment
-    navigationDrawerFragment!!.setUpDrawer(
+    navigationDrawerFragment.setUpDrawer(
       activity.findViewById<View>(R.id.help_activity_drawer_layout) as DrawerLayout,
       toolbar, R.id.nav_help
     )
   }
+
+  private fun getHelpFragment(): HelpFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.help_fragment_placeholder) as HelpFragment?
+  }
 }
Index: app/src/main/res/layout/faq_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/faq_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/faq_fragment.xml	(date 1584626399000)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.help.faq.FAQViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout
+      android:layout_width="match_parent"
+      android:layout_height="match_parent"
+      android:orientation="vertical"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/faq_fragment_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:list="@{viewModel.faqItemList}" />
+    </LinearLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/faq_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/faq_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/faq_activity.xml	(date 1584626399000)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout>
+
+  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/faq_app_bar_layout"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/faq_activity_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="end"
+        android:background="@color/colorPrimary"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/Widget.AppCompat.ActionBar"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:id="@+id/faq_fragment_placeholder"
+      android:layout_width="match_parent"
+      android:layout_height="match_parent" />
+  </LinearLayout>
+</layout>
+
Index: app/src/main/res/layout/recently_played_fragment_test_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/recently_played_fragment_test_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/recently_played_fragment_test_activity.xml	(date 1584626399000)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/recently_played_fragment_placeholder"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  tools:context=".testing.RecentlyPlayedFragmentTestActivity" />
Index: app/src/main/java/org/oppia/app/topic/review/TopicReviewViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/review/TopicReviewViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/review/TopicReviewViewModel.kt	(date 1584626399000)
@@ -1,9 +1,7 @@
 package org.oppia.app.topic.review
 
 import androidx.lifecycle.ViewModel
-import org.oppia.app.fragment.FragmentScope
-import javax.inject.Inject
+import org.oppia.app.viewmodel.ObservableViewModel
 
-/** [ViewModel] for showing a list of topic review-skills. */
-@FragmentScope
-class TopicReviewViewModel @Inject constructor() : ViewModel()
+/** [ViewModel] for showing a list of subtopics. */
+abstract class TopicReviewViewModel : ObservableViewModel()
Index: app/src/main/res/layout/topic_practice_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/topic_practice_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/topic_practice_fragment.xml	(date 1584626399000)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto">
+  <data>
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.practice.TopicPracticeViewModel"/>
+  </data>
+  <androidx.recyclerview.widget.RecyclerView
+    android:id="@+id/topic_practice_skill_list"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:clipToPadding="false"
+    android:overScrollMode="never"
+    android:paddingBottom="172dp"
+    android:scrollbars="none"
+    app:data="@{viewModel.topicPracticeSkillLiveData}"
+    app:layout_constraintBottom_toBottomOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent"/>
+</layout>
Index: app/src/main/java/org/oppia/app/help/HelpFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/HelpFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/help/HelpFragmentPresenter.kt	(date 1584626399000)
@@ -3,7 +3,10 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
 import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import org.oppia.app.R
 import org.oppia.app.databinding.HelpFragmentBinding
 import org.oppia.app.fragment.FragmentScope
 import javax.inject.Inject
@@ -11,15 +14,34 @@
 /** The presenter for [HelpFragment]. */
 @FragmentScope
 class HelpFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
   private val fragment: Fragment
 ) {
+  private val arrayList = ArrayList<HelpViewModel>()
+
   fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
-    val binding = HelpFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
-    // NB: Both the view model and lifecycle owner must be set in order to correctly bind LiveData elements to
-    // data-bound view models.
-    binding.let {
-      it.lifecycleOwner = fragment
+    val binding: HelpFragmentBinding =
+      HelpFragmentBinding.inflate(
+        inflater,
+        container,
+        /* attachToRoot= */ false
+      )
+    binding.lifecycleOwner = fragment
+    binding.helpFragmentRecyclerView.apply {
+      adapter = HelpCategoryAdapter(activity, getRecyclerViewItemList())
+      layoutManager = LinearLayoutManager(activity)
     }
     return binding.root
   }
+
+  private fun getRecyclerViewItemList(): ArrayList<HelpViewModel> {
+    for (item in HelpItems.values()) {
+      if (item == HelpItems.FAQ) {
+        val category1 = fragment.getString(R.string.frequently_asked_questions_FAQ)
+        val helpViewModel = HelpViewModel(category1)
+        arrayList.add(helpViewModel)
+      }
+    }
+    return arrayList
+  }
 }
Index: app/src/main/res/layout/faq_content.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/faq_content.xml	(date 1584626399000)
+++ app/src/main/res/layout/faq_content.xml	(date 1584626399000)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+    <import type="android.view.View" />
+    <variable
+      name="viewModel"
+      type="org.oppia.app.help.faq.faqItemViewModel.FAQContentViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <LinearLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:orientation="vertical"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <TextView
+        android:id="@+id/faq_question_text_view"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:fontFamily="sans-serif"
+        android:padding="@dimen/padding_24dp"
+        android:text="@{viewModel.title}"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="16sp"
+        android:textStyle="bold" />
+
+      <View
+        android:id="@+id/faq_question_divider_view"
+        android:layout_width="wrap_content"
+        android:layout_height="2dp"
+        android:layout_marginStart="24dp"
+        android:layout_marginEnd="24dp"
+        android:background="@color/black"
+        android:visibility="@{viewModel.showDivider ? View.VISIBLE : View.GONE}" />
+    </LinearLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/activity_numeric_input_interaction_view_test.xml
===================================================================
--- app/src/main/res/layout/activity_numeric_input_interaction_view_test.xml	(date 1584621433000)
+++ app/src/main/res/layout/activity_input_interaction_view_test.xml	(date 1584626399000)
@@ -1,44 +1,97 @@
 <?xml version="1.0" encoding="utf-8"?>
 <layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
   xmlns:tools="http://schemas.android.com/tools">
 
   <data>
 
+    <import type="android.view.View" />
+
+    <variable
+      name="fractionInteractionViewModel"
+      type="org.oppia.app.player.state.itemviewmodel.FractionInteractionViewModel" />
+
     <variable
       name="numericInputViewModel"
       type="org.oppia.app.player.state.itemviewmodel.NumericInputViewModel" />
+
     <variable
       name="textInputViewModel"
       type="org.oppia.app.player.state.itemviewmodel.TextInputViewModel" />
-    <variable
-      name="fractionInteractionViewModel"
-      type="org.oppia.app.player.state.itemviewmodel.FractionInteractionViewModel" />
   </data>
 
   <LinearLayout
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:gravity="center"
     android:descendantFocusability="beforeDescendants"
     android:focusableInTouchMode="true"
+    android:gravity="center"
     android:orientation="vertical"
     tools:context=".testing.InputInteractionViewTestActivity">
 
+    <org.oppia.app.customview.interaction.FractionInputInteractionView
+      android:id="@+id/test_fraction_input_interaction_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_margin="8dp"
+      android:background="@drawable/edit_text_background"
+      android:fontFamily="sans-serif"
+      android:hint="@{fractionInteractionViewModel.hintText}"
+      android:imeOptions="actionDone"
+      android:longClickable="false"
+      android:maxLength="200"
+      android:minHeight="48dp"
+      android:paddingStart="16dp"
+      android:paddingEnd="16dp"
+      android:paddingBottom="8dp"
+      android:singleLine="true"
+      android:text="@={fractionInteractionViewModel.answerText}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textColorHint="@color/editTextHint"
+      android:textSize="14sp"
+      android:textStyle="italic"
+      app:textChangedListener="@{fractionInteractionViewModel.answerTextWatcher}" />
+
+    <TextView
+      android:id="@+id/fraction_input_error"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="16dp"
+      android:layout_marginEnd="8dp"
+      android:fontFamily="sans-serif"
+      android:minHeight="32dp"
+      android:text="@{fractionInteractionViewModel.errorMessage.get()}"
+      android:textColor="@color/editTextError"
+      android:textSize="12sp"
+      android:visibility="@{fractionInteractionViewModel.errorMessage.get().length() > 0 ? View.VISIBLE : View.INVISIBLE}" />
+
     <org.oppia.app.customview.interaction.NumericInputInteractionView
       android:id="@+id/test_number_input_interaction_view"
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:layout_margin="8dp"
       android:background="@drawable/edit_text_background"
-      android:digits="0123456789."
       android:focusable="true"
       android:hint="Write the digit here."
-      android:inputType="numberDecimal"
       android:longClickable="false"
       android:maxLength="200"
       android:padding="8dp"
       android:singleLine="true"
-      android:text="@={numericInputViewModel.answerText}" />
+      android:text="@={numericInputViewModel.answerText}"
+      app:textChangedListener="@{numericInputViewModel.answerTextWatcher}" />
+
+    <TextView
+      android:id="@+id/number_input_error"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="16dp"
+      android:layout_marginEnd="8dp"
+      android:fontFamily="sans-serif"
+      android:minHeight="32dp"
+      android:text="@{numericInputViewModel.errorMessage.get()}"
+      android:textColor="@color/editTextError"
+      android:textSize="12sp"
+      android:visibility="@{numericInputViewModel.errorMessage.get().length() > 0 ? View.VISIBLE : View.INVISIBLE}" />
 
     <org.oppia.app.customview.interaction.TextInputInteractionView
       android:id="@+id/test_text_input_interaction_view"
@@ -49,26 +102,20 @@
       android:focusable="true"
       android:hint="Write here."
       android:inputType="text"
-      android:text="@={textInputViewModel.answerText}"
       android:longClickable="false"
       android:maxLength="200"
       android:padding="8dp"
-      android:singleLine="true" />
+      android:singleLine="true"
+      android:text="@={textInputViewModel.answerText}" />
 
-    <org.oppia.app.customview.interaction.FractionInputInteractionView
-      android:id="@+id/test_fraction_input_interaction_view"
+    <Button
+      android:id="@+id/submit_button"
+      style="@style/StateButtonActive"
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:layout_margin="8dp"
-      android:background="@drawable/edit_text_background"
-      android:digits="0123456789/- "
-      android:text="@={fractionInteractionViewModel.answerText}"
-      android:focusable="true"
-      android:hint="Write fraction here."
-      android:inputType="date"
-      android:longClickable="false"
-      android:maxLength="200"
-      android:padding="8dp"
-      android:singleLine="true" />
+      android:onClick="getPendingAnswerErrorOnSubmitClick"
+      android:text="Submit"
+      android:textColor="@color/white" />
   </LinearLayout>
 </layout>
Index: app/src/main/java/org/oppia/app/help/HelpViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/HelpViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/help/HelpViewModel.kt	(date 1584626399000)
@@ -1,9 +1,6 @@
 package org.oppia.app.help
 
 import androidx.lifecycle.ViewModel
-import org.oppia.app.fragment.FragmentScope
-import javax.inject.Inject
 
-/** [ViewModel] for [HelpFragment]. */
-@FragmentScope
-class HelpViewModel @Inject constructor() : ViewModel()
+/** [ViewModel] for the recycler view of HelpActivity. */
+class HelpViewModel(val title: String) : ViewModel()
Index: app/src/main/res/layout/option_audio_language.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/option_audio_language.xml	(date 1584626399000)
+++ app/src/main/res/layout/option_audio_language.xml	(date 1584626399000)
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.options.OptionsAudioLanguageViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:id="@+id/audio_laguage_item_layout"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:onClick="@{(v) -> viewModel.onAudioLanguageClicked()}"
+    android:background="@color/white">
+
+    <TextView
+      android:id="@+id/audio_language_label_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif"
+      android:padding="8dp"
+      android:text="@string/audio_language"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toTopOf="@id/audio_language_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/audio_language_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif"
+      android:padding="8dp"
+      android:text="@{viewModel.audioLanguage}"
+      android:textSize="14sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/audio_language_label_text_view" />
+
+    <View
+      android:layout_width="match_parent"
+      android:layout_height="1dp"
+      android:background="@color/grey_shade_29"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/audio_language_text_view" />
+
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/org/oppia/app/help/HelpActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/HelpActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/help/HelpActivity.kt	(date 1584626399000)
@@ -1,14 +1,17 @@
 package org.oppia.app.help
 
+import android.content.Context
+import android.content.Intent
 import android.os.Bundle
 import org.oppia.app.R
 import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
+import org.oppia.app.help.faq.FAQActivity
 import javax.inject.Inject
 
-/** The help page activity for users FAQ and feedbacks. */
-class HelpActivity : InjectableAppCompatActivity() {
-  @Inject
-  lateinit var helpActivityPresenter: HelpActivityPresenter
+/** The help page activity for FAQs and feedback. */
+class HelpActivity : InjectableAppCompatActivity(), RoutetoFAQListener {
+  @Inject lateinit var helpActivityPresenter: HelpActivityPresenter
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
@@ -16,4 +19,21 @@
     helpActivityPresenter.handleOnCreate()
     title = getString(R.string.menu_help)
   }
+
+  companion object {
+    fun createHelpActivityIntent(context: Context, profileId: Int?): Intent {
+      val intent = Intent(context, HelpActivity::class.java)
+      intent.putExtra(KEY_NAVIGATION_PROFILE_ID, profileId)
+      return intent
+    }
+
+    fun getIntentKey(): String {
+      return KEY_NAVIGATION_PROFILE_ID
+    }
+  }
+
+  override fun onRouteToFAQ() {
+    val intent = FAQActivity.createFAQActivityIntent(this)
+    startActivity(intent)
+  }
 }
Index: app/src/main/res/layout/profile_picture_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/profile_picture_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/profile_picture_activity.xml	(date 1584626399000)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:profile="http://schemas.android.com/tools">
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.profileprogress.ProfilePictureActivityViewModel" />
+    <variable
+      name="presenter"
+      type="org.oppia.app.profileprogress.ProfilePictureActivityPresenter" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+      android:id="@+id/profile_picture_image_view"
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      profile:src="@{viewModel.profileAvatar}"
+      tools:src="@drawable/ic_default_avatar"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent"/>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/app_version_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/app_version_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/app_version_fragment.xml	(date 1584626399000)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.appversion.AppVersionViewModel" />
+  </data>
+
+  <FrameLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="match_parent"
+      android:background="@color/appVersionBackground">
+
+      <TextView
+        android:id="@+id/app_version_text_view"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/selector_app_version"
+        android:fontFamily="sans-serif"
+        android:paddingStart="16dp"
+        android:paddingTop="20dp"
+        android:paddingEnd="16dp"
+        android:paddingBottom="20dp"
+        android:text="@{@string/app_version_name(viewModel.versionName)}"
+        android:textColor="@color/oppiaPrimaryTextDark"
+        android:textSize="16sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <ImageView
+        android:id="@+id/app_info_image_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="24dp"
+        android:src="@drawable/ic_info_icon_gray_24dp"
+        app:layout_constraintEnd_toStartOf="@id/app_last_update_date_text_view"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="@id/app_last_update_date_text_view" />
+
+      <TextView
+        android:id="@+id/app_last_update_date_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="12dp"
+        android:layout_marginTop="28dp"
+        android:layout_marginEnd="28dp"
+        android:fontFamily="sans-serif"
+        android:text="@{@string/app_last_update_date(viewModel.lastUpdateDate)}"
+        android:textColor="@color/oppiaSecondaryText"
+        android:textSize="12sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toEndOf="@id/app_info_image_view"
+        app:layout_constraintTop_toBottomOf="@id/app_version_text_view" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <View
+      android:id="@+id/app_version_shadow_view"
+      android:layout_width="match_parent"
+      android:layout_height="4dp"
+      android:layout_gravity="top"
+      android:background="@drawable/toolbar_drop_shadow" />
+  </FrameLayout>
+</layout>
Index: app/src/main/res/layout/topic_play_story_summary.xml
===================================================================
--- app/src/main/res/layout/topic_play_story_summary.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_lessons_story_summary.xml	(date 1584626399000)
@@ -16,7 +16,7 @@
 
     <variable
       name="viewModel"
-      type="org.oppia.app.topic.play.StorySummaryViewModel" />
+      type="org.oppia.app.topic.lessons.StorySummaryViewModel" />
   </data>
 
   <com.google.android.material.card.MaterialCardView
@@ -146,6 +146,7 @@
         android:visibility="@{isListExpanded? View.VISIBLE : View.GONE}">
 
         <View
+          android:id="@+id/topic_play_story_dashed_line_view"
           android:layout_width="match_parent"
           android:layout_height="2dp"
           android:layout_gravity="center_horizontal"
@@ -155,7 +156,6 @@
           android:id="@+id/chapter_recycler_view"
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
-          android:layout_marginStart="56dp"
           android:layout_marginTop="8dp"
           android:layout_marginBottom="8dp"
           app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
Index: app/src/main/res/layout/app_version_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/app_version_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/app_version_activity.xml	(date 1584626399000)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  tools:context=".administratorcontrols.appversion.AppVersionActivity">
+
+  <com.google.android.material.appbar.AppBarLayout
+    android:id="@+id/app_version_app_bar_layout"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent">
+
+    <androidx.appcompat.widget.Toolbar
+      android:id="@+id/app_version_toolbar"
+      android:layout_width="match_parent"
+      android:layout_height="?attr/actionBarSize"
+      android:background="@color/oppiaPrimaryDark"
+      android:textSize="20sp"
+      app:navigationContentDescription="@string/go_to_previous_page"
+      app:navigationIcon="?attr/homeAsUpIndicator"
+      app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+      app:title="@string/administrator_controls_app_version"
+      app:titleTextColor="@color/white" />
+  </com.google.android.material.appbar.AppBarLayout>
+
+  <FrameLayout
+    android:id="@+id/app_version_fragment_placeholder"
+    android:layout_width="match_parent"
+    android:layout_height="0dp"
+    app:layout_constraintBottom_toBottomOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toBottomOf="@id/app_version_app_bar_layout"
+    app:layout_constraintVertical_weight="1" />
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout/option_story_text_size.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/option_story_text_size.xml	(date 1584626399000)
+++ app/src/main/res/layout/option_story_text_size.xml	(date 1584626399000)
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.options.OptionsStoryTextViewViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:id="@+id/story_text_size_item_layout"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:onClick="@{(v) -> viewModel.onStoryTextSizeClicked()}"
+    android:background="@color/white">
+
+    <TextView
+      android:id="@+id/story_text_size_label_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif"
+      android:padding="8dp"
+      android:text="@string/story_text_size"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toTopOf="@id/story_text_size_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/story_text_size_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:minHeight="48dp"
+      android:fontFamily="sans-serif"
+      android:padding="8dp"
+      android:text="@{viewModel.storyTextSize}"
+      android:textSize="14sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_text_size_label_text_view" />
+
+    <View
+      android:layout_width="match_parent"
+      android:layout_height="1dp"
+      android:background="@color/grey_shade_29"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_text_size_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/Test/java/org/oppia/app/testing/ProfileChooserSpanTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/Test/java/org/oppia/app/testing/ProfileChooserSpanTest.kt	(date 1584621433000)
+++ app/src/Test/java/org/oppia/app/testing/ProfileChooserSpanTest.kt	(date 1584626590000)
@@ -15,6 +15,7 @@
 
 /**
  * It tests profilechooser_span retrived on the basis of different display metric which is used to controll the span count in [ProfileChooserFragment] on landscape mode.
+ *
  */
 @RunWith(AndroidJUnit4::class)
 class ProfileChooserSpanTest {
Index: domain/src/main/java/org/oppia/domain/profile/ProfileManagementController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/java/org/oppia/domain/profile/ProfileManagementController.kt	(date 1584621433000)
+++ domain/src/main/java/org/oppia/domain/profile/ProfileManagementController.kt	(date 1584626399000)
@@ -10,10 +10,14 @@
 import androidx.lifecycle.LiveData
 import androidx.lifecycle.MutableLiveData
 import kotlinx.coroutines.Deferred
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.DeviceSettings
 import org.oppia.app.model.Profile
 import org.oppia.app.model.ProfileAvatar
 import org.oppia.app.model.ProfileDatabase
 import org.oppia.app.model.ProfileId
+import org.oppia.app.model.StoryTextSize
 import org.oppia.data.persistence.PersistentCacheStore
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.data.DataProvider
@@ -22,21 +26,26 @@
 import org.oppia.util.profile.DirectoryManagementUtil
 import java.io.File
 import java.io.FileOutputStream
-import java.lang.Exception
-import java.util.Date
-import java.util.Locale
+import java.util.*
 import javax.inject.Inject
 import javax.inject.Singleton
 
 private const val TRANSFORMED_GET_PROFILES_PROVIDER_ID = "transformed_get_profiles_provider_id"
 private const val TRANSFORMED_GET_PROFILE_PROVIDER_ID = "transformed_get_profile_provider_id"
+private const val TRANSFORMED_GET_WAS_PROFILE_EVER_ADDED_PROVIDER_ID = "transformed_was_profile_ever_added_provider_id"
+private const val TRANSFORMED_GET_DEVICE_SETTINGS_PROVIDER_ID = "transformed_device_settings_provider_id"
 private const val ADD_PROFILE_TRANSFORMED_PROVIDER_ID = "add_profile_transformed_id"
 private const val UPDATE_NAME_TRANSFORMED_PROVIDER_ID = "update_name_transformed_id"
 private const val UPDATE_PIN_TRANSFORMED_PROVIDER_ID = "update_pin_transformed_id"
+private const val UPDATE_PROFILE_AVATER_TRANSFORMED_PROVIDER_ID = "update_profile_avater_transformed_id"
+private const val UPDATE_DEVICE_SETTINGS_TRANSFORMED_PROVIDER_ID = "update_device_settings_transformed_id"
 private const val UPDATE_DOWNLOAD_ACCESS_TRANSFORMED_PROVIDER_ID = "update_download_access_transformed_id"
 private const val LOGIN_PROFILE_TRANSFORMED_PROVIDER_ID = "login_profile_transformed_id"
 private const val DELETE_PROFILE_TRANSFORMED_PROVIDER_ID = "delete_profile_transformed_id"
 private const val SET_PROFILE_TRANSFORMED_PROVIDER_ID = "set_profile_transformed_id"
+private const val UPDATE_STORY_TEXT_SIZE_TRANSFORMED_ID = "update_story_text_size_transformed_id"
+private const val UPDATE_APP_LANGUAGE_TRANSFORMED_PROVIDER_ID = "update_app_language_transformed_id"
+private const val UPDATE_AUDIO_LANGUAGE_TRANSFORMED_PROVIDER_ID = "update_audio_language_transformed_id"
 
 const val PROFILE_AVATAR_FILE_NAME = "profile_avatar.png"
 
@@ -70,6 +79,12 @@
   /** Indicates that the given profileId is not associated with an existing profile. */
   class ProfileNotFoundException(msg: String) : Exception(msg)
 
+  /** Indicates that the given profileId is not associated with an admin. */
+  class ProfileNotAdminException(msg: String) : Exception(msg)
+
+  /** Indicates that the there is not device settings currently. */
+  class DeviceSettingsNotFoundException(msg: String) : Exception(msg)
+
   /**
    * These Statuses correspond to the exceptions above such that if the deferred contains
    * PROFILE_NOT_FOUND, the [ProfileNotFoundException] will be passed to a failed AsyncResult.
@@ -82,7 +97,8 @@
     FAILED_TO_STORE_IMAGE,
     FAILED_TO_GENERATE_GRAVATAR,
     FAILED_TO_DELETE_DIR,
-    PROFILE_NOT_FOUND
+    PROFILE_NOT_FOUND,
+    PROFILE_NOT_ADMIN
   }
 
   // TODO(#272): Remove init block when storeDataAsync is fixed
@@ -116,6 +132,36 @@
     return dataProviders.convertToLiveData(transformedDataProvider)
   }
 
+  /** Returns a boolean determining whether the profile was ever added or not. */
+  fun getWasProfileEverAdded(): LiveData<AsyncResult<Boolean>> {
+    val transformedDataProvider =
+      dataProviders.transformAsync<ProfileDatabase, Boolean>(
+        TRANSFORMED_GET_WAS_PROFILE_EVER_ADDED_PROVIDER_ID,
+        profileDataStore
+      ) {
+        val wasProfileEverAdded = it.wasProfileEverAdded
+        AsyncResult.success(wasProfileEverAdded)
+      }
+    return dataProviders.convertToLiveData(transformedDataProvider)
+  }
+
+  /** Returns device settings for the app. */
+  fun getDeviceSettings(): LiveData<AsyncResult<DeviceSettings>> {
+    val transformedDataProvider =
+      dataProviders.transformAsync<ProfileDatabase, DeviceSettings>(
+        TRANSFORMED_GET_DEVICE_SETTINGS_PROVIDER_ID,
+        profileDataStore
+      ) {
+        val deviceSettings = it.deviceSettings
+        if (deviceSettings != null) {
+          AsyncResult.success(deviceSettings)
+        } else {
+          AsyncResult.failed(DeviceSettingsNotFoundException("Device Settings not found."))
+        }
+      }
+    return dataProviders.convertToLiveData(transformedDataProvider)
+  }
+
   /**
    * Adds a new profile with the specified parameters.
    *
@@ -132,8 +178,12 @@
     avatarImagePath: Uri?,
     allowDownloadAccess: Boolean,
     colorRgb: Int,
-    isAdmin: Boolean
+    isAdmin: Boolean,
+    storyTextSize: StoryTextSize,
+    appLanguage: AppLanguage,
+    audioLanguage: AudioLanguage
   ): LiveData<AsyncResult<Any?>> {
+
     if (!onlyLetters(name)) {
       return MutableLiveData(AsyncResult.failed(ProfileNameOnlyLettersException("$name does not contain only letters")))
     }
@@ -151,6 +201,9 @@
         .setAllowDownloadAccess(allowDownloadAccess)
         .setId(ProfileId.newBuilder().setInternalId(nextProfileId))
         .setDateCreatedTimestampMs(Date().time).setIsAdmin(isAdmin)
+        .setStoryTextSize(storyTextSize)
+        .setAppLanguage(appLanguage)
+        .setAudioLanguage(audioLanguage)
 
       if (avatarImagePath != null) {
         val imageUri =
@@ -163,8 +216,13 @@
         newProfileBuilder.avatar = ProfileAvatar.newBuilder().setAvatarColorRgb(colorRgb).build()
       }
 
+      val wasProfileEverAdded = !it.wasProfileEverAdded && !isAdmin
+
       val profileDatabaseBuilder =
-        it.toBuilder().putProfiles(nextProfileId, newProfileBuilder.build()).setNextProfileId(nextProfileId + 1)
+        it.toBuilder()
+          .putProfiles(nextProfileId, newProfileBuilder.build())
+          .setWasProfileEverAdded(wasProfileEverAdded)
+          .setNextProfileId(nextProfileId + 1)
       Pair(profileDatabaseBuilder.build(), ProfileActionStatus.SUCCESS)
     }
     return dataProviders.convertToLiveData(
@@ -173,6 +231,42 @@
       })
   }
 
+  /**
+   * Updates the profile avatar of an existing profile.
+   *
+   * @param profileId the ID corresponding to the profile being updated.
+   * @param avatarImagePath New profile avatar for the profile being updated.
+   * @return a [LiveData] that indicates the success/failure of this update operation.
+   */
+  fun updateProfileAvatar(profileId: ProfileId, avatarImagePath: Uri?, colorRgb: Int): LiveData<AsyncResult<Any?>> {
+    val deferred = profileDataStore.storeDataWithCustomChannelAsync(updateInMemoryCache = true) {
+      val profile = it.profilesMap[profileId.internalId] ?: return@storeDataWithCustomChannelAsync Pair(
+        it,
+        ProfileActionStatus.PROFILE_NOT_FOUND
+      )
+      val profileDir = directoryManagementUtil.getOrCreateDir(profileId.toString())
+
+      val updatedProfileBuilder = profile.toBuilder()
+      if (avatarImagePath != null) {
+        val imageUri =
+          saveImageToInternalStorage(avatarImagePath, profileDir) ?: return@storeDataWithCustomChannelAsync Pair(
+            it,
+            ProfileActionStatus.FAILED_TO_STORE_IMAGE
+          )
+        updatedProfileBuilder.avatar = ProfileAvatar.newBuilder().setAvatarImageUri(imageUri).build()
+      } else {
+        updatedProfileBuilder.avatar = ProfileAvatar.newBuilder().setAvatarColorRgb(colorRgb).build()
+      }
+
+      val profileDatabaseBuilder = it.toBuilder().putProfiles(profileId.internalId, updatedProfileBuilder.build())
+      Pair(profileDatabaseBuilder.build(), ProfileActionStatus.SUCCESS)
+    }
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(UPDATE_PROFILE_AVATER_TRANSFORMED_PROVIDER_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(profileId, null, deferred)
+      })
+  }
+
   /**
    * Updates the name of an existing profile.
    *
@@ -224,6 +318,70 @@
         return@createInMemoryDataProviderAsync getDeferredResult(profileId, null, deferred)
       })
   }
+
+  /**
+   * Updates the download/update on wifi only permission.
+   *
+   * @param profileId the ID corresponding to the profile being updated.
+   * @param downloadAndUpdateOnWifiOnly download and update permission on wifi only.
+   * @return a [LiveData] that indicates the success/failure of this update operation.
+   */
+  fun updateWifiPermissionDeviceSettings(
+    profileId: ProfileId,
+    downloadAndUpdateOnWifiOnly: Boolean
+  ): LiveData<AsyncResult<Any?>> {
+    val deferred = profileDataStore.storeDataWithCustomChannelAsync(updateInMemoryCache = true) {
+      val profile = it.profilesMap[profileId.internalId] ?: return@storeDataWithCustomChannelAsync Pair(
+        it,
+        ProfileActionStatus.PROFILE_NOT_FOUND
+      )
+      val profileDatabaseBuilder = it.toBuilder()
+      if (profile.isAdmin) {
+        val deviceSettingsBuilder = it.deviceSettings.toBuilder()
+        deviceSettingsBuilder.allowDownloadAndUpdateOnlyOnWifi = downloadAndUpdateOnWifiOnly
+        profileDatabaseBuilder.deviceSettings = deviceSettingsBuilder.build()
+        Pair(profileDatabaseBuilder.build(), ProfileActionStatus.SUCCESS)
+      } else {
+        Pair(profileDatabaseBuilder.build(), ProfileActionStatus.PROFILE_NOT_ADMIN)
+      }
+    }
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(UPDATE_DEVICE_SETTINGS_TRANSFORMED_PROVIDER_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(profileId, null, deferred)
+      })
+  }
+
+  /**
+   * Updates the automatically update topics permission.
+   *
+   * @param profileId the ID corresponding to the profile being updated.
+   * @param automaticallyUpdateTopics automatically update topic permission.
+   * @return a [LiveData] that indicates the success/failure of this update operation.
+   */
+  fun updateTopicAutomaticallyPermissionDeviceSettings(
+    profileId: ProfileId,
+    automaticallyUpdateTopics: Boolean
+  ): LiveData<AsyncResult<Any?>> {
+    val deferred = profileDataStore.storeDataWithCustomChannelAsync(updateInMemoryCache = true) {
+      val profile = it.profilesMap[profileId.internalId] ?: return@storeDataWithCustomChannelAsync Pair(
+        it,
+        ProfileActionStatus.PROFILE_NOT_FOUND
+      )
+      val profileDatabaseBuilder = it.toBuilder()
+      if (profile.isAdmin) {
+        val deviceSettingsBuilder = it.deviceSettings.toBuilder()
+        deviceSettingsBuilder.automaticallyUpdateTopics = automaticallyUpdateTopics
+        profileDatabaseBuilder.deviceSettings = deviceSettingsBuilder.build()
+        Pair(profileDatabaseBuilder.build(), ProfileActionStatus.SUCCESS)
+      } else {
+        Pair(profileDatabaseBuilder.build(), ProfileActionStatus.PROFILE_NOT_ADMIN)
+      }
+    }
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(UPDATE_DEVICE_SETTINGS_TRANSFORMED_PROVIDER_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(profileId, null, deferred)
+      })
+  }
 
   /**
    * Updates the download access of an existing profile.
@@ -250,6 +408,81 @@
       })
   }
 
+  /**
+   * Updates the story text size of the profile.
+   *
+   * @param profileId the ID corresponding to the profile being updated.
+   * @param storyTextSize New text size for the profile being updated.
+   * @return a [LiveData] that indicates the success/failure of this update operation.
+   */
+  fun updateStoryTextSize(
+    profileId: ProfileId, storyTextSize: StoryTextSize
+  ): LiveData<AsyncResult<Any?>> {
+    val deferred = profileDataStore.storeDataWithCustomChannelAsync(updateInMemoryCache = true) {
+      val profile = it.profilesMap[profileId.internalId] ?: return@storeDataWithCustomChannelAsync Pair(
+        it,
+        ProfileActionStatus.PROFILE_NOT_FOUND
+      )
+      val updatedProfile = profile.toBuilder().setStoryTextSize(storyTextSize).build()
+      val profileDatabaseBuilder = it.toBuilder().putProfiles(profileId.internalId, updatedProfile)
+      Pair(profileDatabaseBuilder.build(), ProfileActionStatus.SUCCESS)
+    }
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(UPDATE_STORY_TEXT_SIZE_TRANSFORMED_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(profileId, null, deferred)
+      })
+  }
+
+  /**
+   * Updates the app language of the profile.
+   *
+   * @param profileId the ID corresponding to the profile being updated.
+   * @param appLanguage New app language for the profile being updated.
+   * @return a [LiveData] that indicates the success/failure of this update operation.
+   */
+  fun updateAppLanguage(
+    profileId: ProfileId, appLanguage: AppLanguage
+  ): LiveData<AsyncResult<Any?>> {
+    val deferred = profileDataStore.storeDataWithCustomChannelAsync(updateInMemoryCache = true) {
+      val profile = it.profilesMap[profileId.internalId] ?: return@storeDataWithCustomChannelAsync Pair(
+        it,
+        ProfileActionStatus.PROFILE_NOT_FOUND
+      )
+      val updatedProfile = profile.toBuilder().setAppLanguage(appLanguage).build()
+      val profileDatabaseBuilder = it.toBuilder().putProfiles(profileId.internalId, updatedProfile)
+      Pair(profileDatabaseBuilder.build(), ProfileActionStatus.SUCCESS)
+    }
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(UPDATE_APP_LANGUAGE_TRANSFORMED_PROVIDER_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(profileId, null, deferred)
+      })
+  }
+
+  /**
+   * Updates the audio language of the profile.
+   *
+   * @param profileId the ID corresponding to the profile being updated.
+   * @param audioLanguage New audio language for the profile being updated.
+   * @return a [LiveData] that indicates the success/failure of this update operation.
+   */
+  fun updateAudioLanguage(
+    profileId: ProfileId, audioLanguage: AudioLanguage
+  ): LiveData<AsyncResult<Any?>> {
+    val deferred = profileDataStore.storeDataWithCustomChannelAsync(updateInMemoryCache = true) {
+      val profile = it.profilesMap[profileId.internalId] ?: return@storeDataWithCustomChannelAsync Pair(
+        it,
+        ProfileActionStatus.PROFILE_NOT_FOUND
+      )
+      val updatedProfile = profile.toBuilder().setAudioLanguage(audioLanguage).build()
+      val profileDatabaseBuilder = it.toBuilder().putProfiles(profileId.internalId, updatedProfile)
+      Pair(profileDatabaseBuilder.build(), ProfileActionStatus.SUCCESS)
+    }
+    return dataProviders.convertToLiveData(
+      dataProviders.createInMemoryDataProviderAsync(UPDATE_AUDIO_LANGUAGE_TRANSFORMED_PROVIDER_ID) {
+        return@createInMemoryDataProviderAsync getDeferredResult(profileId, null, deferred)
+      })
+  }
+
   /**
    * Log in to the user's Profile by setting the current profile Id and updating profile's last logged in time.
    *
@@ -327,6 +560,7 @@
       ProfileActionStatus.FAILED_TO_GENERATE_GRAVATAR -> AsyncResult.failed(FailedToGenerateGravatarException("Failed to generate a gravatar url"))
       ProfileActionStatus.FAILED_TO_DELETE_DIR -> AsyncResult.failed(FailedToDeleteDirException("Failed to delete directory with ${profileId?.internalId}"))
       ProfileActionStatus.PROFILE_NOT_FOUND -> AsyncResult.failed(ProfileNotFoundException("ProfileId ${profileId?.internalId} does not match an existing Profile"))
+      ProfileActionStatus.PROFILE_NOT_ADMIN -> AsyncResult.failed(ProfileNotAdminException("ProfileId ${profileId?.internalId} does not match an existing admin"))
     }
   }
 
Index: app/src/main/java/org/oppia/app/topic/info/TopicInfoFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/info/TopicInfoFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/info/TopicInfoFragmentPresenter.kt	(date 1584626399000)
@@ -10,7 +10,9 @@
 import org.oppia.app.R
 import org.oppia.app.databinding.TopicInfoFragmentBinding
 import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.Topic
+import org.oppia.app.topic.PROFILE_ID_ARGUMENT_KEY
 import org.oppia.app.topic.TOPIC_ID_ARGUMENT_KEY
 import org.oppia.app.viewmodel.ViewModelProvider
 import org.oppia.domain.topic.TopicController
@@ -29,12 +31,14 @@
   private val htmlParserFactory: HtmlParser.Factory
 ) {
   private val topicInfoViewModel = getTopicInfoViewModel()
+  private var internalProfileId: Int = -1
   private lateinit var topicId: String
   private val htmlParser: HtmlParser by lazy {
     htmlParserFactory.create(/* entityType= */"topic", topicId, /* imageCenterAlign= */ true)
   }
 
   fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    internalProfileId = fragment.arguments?.getInt(PROFILE_ID_ARGUMENT_KEY, -1)!!
     topicId = checkNotNull(fragment.arguments?.getString(TOPIC_ID_ARGUMENT_KEY)) {
       "Expected topic ID to be included in arguments for TopicInfoFragment."
     }
@@ -66,7 +70,7 @@
   }
 
   private val topicResultLiveData: LiveData<AsyncResult<Topic>> by lazy {
-    topicController.getTopic(topicId)
+    topicController.getTopic(ProfileId.newBuilder().setInternalId(internalProfileId).build(), topicId)
   }
 
   private fun getTopicList(): LiveData<Topic> {
Index: app/src/main/res/layout/walkthrough_welcome_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/walkthrough_welcome_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout/walkthrough_welcome_fragment.xml	(date 1584626399000)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:android="http://schemas.android.com/apk/res/android">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.walkthrough.welcome.WalkthroughWelcomeViewModel" />
+    <variable
+      name="presenter"
+      type="org.oppia.app.walkthrough.welcome.WalkthroughWelcomeFragmentPresenter" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+      android:id="@+id/walkthrough_welcome_title_text_view"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="32dp"
+      android:fontFamily="sans-serif"
+      android:text="@{viewModel.profileName}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="24sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent"
+      tools:text="Welcome Rajat" />
+
+    <TextView
+      android:id="@+id/walkthrough_welcome_description_text_view"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="32dp"
+      android:layout_marginTop="16dp"
+      android:layout_marginEnd="32dp"
+      android:fontFamily="sans-serif"
+      android:text="@string/walkthrough_welcome_description"
+      android:textAlignment="center"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="20sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/walkthrough_welcome_title_text_view" />
+
+    <ImageView
+      android:id="@+id/walkthrough_welcome_image_view"
+      android:layout_width="180dp"
+      android:layout_height="180dp"
+      android:layout_marginTop="32dp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/walkthrough_welcome_description_text_view"
+      android:src="@drawable/ic_onboarding_0" />
+
+    <Button
+      android:id="@+id/walkthrough_welcome_next_button"
+      style="@style/StateButtonActive"
+      android:layout_width="wrap_content"
+      android:layout_height="0dp"
+      android:layout_marginTop="32dp"
+      android:onClick="@{(v) -> presenter.changePage()}"
+      android:text="@string/next"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/walkthrough_welcome_image_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/topic_play_title.xml
===================================================================
--- app/src/main/res/layout/topic_play_title.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_lessons_title.xml	(date 1584626399000)
@@ -7,7 +7,7 @@
 
     <variable
       name="viewModel"
-      type="org.oppia.app.home.continueplaying.SectionTitleViewModel" />
+      type="org.oppia.app.home.recentlyplayed.SectionTitleViewModel" />
   </data>
 
   <FrameLayout
Index: app/src/main/res/layout/app_language_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/app_language_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout/app_language_activity.xml	(date 1584626399000)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/story_list_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/app_language_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/title_app_language"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_list_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/language_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingTop="8dp"
+        android:paddingBottom="128dp"
+        android:scrollbars="none"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/toolbar_shadow_view" />
+
+      <View
+        android:id="@+id/app_language_toolbar_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout/topic_practice_header_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/topic_practice_header_view.xml	(date 1584626399000)
+++ app/src/main/res/layout/topic_practice_header_view.xml	(date 1584626399000)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto">
+  <data>
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeHeaderViewModel"/>
+  </data>
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginStart="32dp"
+    android:layout_marginTop="32dp"
+    android:layout_marginEnd="24dp"
+    android:layout_marginBottom="8dp">
+    <TextView
+      android:id="@+id/master_skills_text_view"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif-medium"
+      android:text="@string/topic_practice_master_these_skills"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="20sp"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent"/>
+    <TextView
+      android:id="@+id/skills_description_text_view"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="8dp"
+      android:fontFamily="sans-serif"
+      android:text="@string/topic_practice_skills_description"
+      android:textColor="@color/oppiaSecondaryText"
+      android:textSize="16sp"
+      app:layout_constraintStart_toStartOf="@+id/master_skills_text_view"
+      app:layout_constraintTop_toBottomOf="@+id/master_skills_text_view"/>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/org/oppia/app/topic/RouteToReviewCardListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/RouteToReviewCardListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/RouteToReviewCardListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.topic
+
+/** Listener for when an [TopicActivity] should route to a [ReviewCardFragment]. */
+interface RouteToReviewCardListener {
+  fun routeToReviewCard(topicId: String, subtopicId: String)
+}
Index: app/src/main/res/layout/option_app_language.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/option_app_language.xml	(date 1584626399000)
+++ app/src/main/res/layout/option_app_language.xml	(date 1584626399000)
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.options.OptionsAppLanguageViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:id="@+id/app_language_item_layout"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:onClick="@{(v) -> viewModel.onAppLanguageClicked()}"
+    android:background="@color/white">
+
+    <TextView
+      android:id="@+id/app_language_label_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif"
+      android:padding="8dp"
+      android:text="@string/app_language"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toTopOf="@id/app_language_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/app_language_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif"
+      android:padding="8dp"
+      android:text="@{viewModel.appLanguage}"
+      android:textSize="14sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/app_language_label_text_view" />
+
+    <View
+      android:layout_width="match_parent"
+      android:layout_height="1dp"
+      android:background="@color/grey_shade_29"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/app_language_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+
+</layout>
Index: app/src/main/res/values/ids.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/ids.xml	(date 1584621433000)
+++ app/src/main/res/values/ids.xml	(date 1584626399000)
@@ -1,4 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
   <item name="selection_interaction_recyclerview" type="id" />
+  <item name="onboarding_dot_0" type="id" />
+  <item name="onboarding_dot_1" type="id" />
+  <item name="onboarding_dot_2" type="id" />
+  <item name="onboarding_dot_3" type="id" />
 </resources>
Index: app/src/main/java/org/oppia/app/customview/interaction/FractionInputInteractionView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/customview/interaction/FractionInputInteractionView.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/customview/interaction/FractionInputInteractionView.kt	(date 1584626399000)
@@ -26,12 +26,12 @@
   attrs: AttributeSet? = null,
   defStyle: Int = android.R.attr.editTextStyle
 ) : EditText(context, attrs, defStyle), View.OnFocusChangeListener {
-  private val hintText: String
+  private val hintText: CharSequence
   private val stateKeyboardButtonListener: StateKeyboardButtonListener
 
   init {
     onFocusChangeListener = this
-    hintText = (hint ?: "").toString()
+    hintText = (hint ?: "")
     stateKeyboardButtonListener = context as StateKeyboardButtonListener
   }
 
Index: app/src/main/java/org/oppia/app/topic/review/ReviewSubtopicAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/review/ReviewSubtopicAdapter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/review/ReviewSubtopicAdapter.kt	(date 1584626399000)
@@ -0,0 +1,49 @@
+package org.oppia.app.topic.review
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.databinding.DataBindingUtil
+import androidx.databinding.library.baseAdapters.BR
+import androidx.recyclerview.widget.RecyclerView
+import org.oppia.app.R
+import org.oppia.app.databinding.TopicReviewSummaryViewBinding
+import org.oppia.app.model.Subtopic
+
+// TODO(#216): Make use of generic data-binding-enabled RecyclerView adapter.
+/** Adapter to bind skills to [RecyclerView] inside [TopicReviewFragment]. */
+class ReviewSubtopicAdapter(private val reviewSelector: ReviewSubtopicSelector) :
+  RecyclerView.Adapter<ReviewSubtopicAdapter.SubtopicViewHolder>() {
+
+  private var subtopicList: List<Subtopic> = ArrayList()
+
+  override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SubtopicViewHolder {
+    val reviewListItemBinding = DataBindingUtil.inflate<TopicReviewSummaryViewBinding>(
+      LayoutInflater.from(parent.context),
+      R.layout.topic_review_summary_view, parent,
+      /* attachToRoot= */ false
+    )
+    return SubtopicViewHolder(reviewListItemBinding)
+  }
+
+  override fun onBindViewHolder(subtopicViewHolder: SubtopicViewHolder, i: Int) {
+    subtopicViewHolder.bind(subtopicList[i])
+  }
+
+  override fun getItemCount(): Int {
+    return subtopicList.size
+  }
+
+  fun setReviewList(subtopicList: List<Subtopic>) {
+    this.subtopicList = subtopicList
+    notifyDataSetChanged()
+  }
+
+  inner class SubtopicViewHolder(val binding: TopicReviewSummaryViewBinding) : RecyclerView.ViewHolder(binding.root) {
+    internal fun bind(subtopic: Subtopic) {
+      binding.setVariable(BR.subtopic, subtopic)
+      binding.root.setOnClickListener {
+        reviewSelector.onTopicReviewSummaryClicked(subtopic)
+      }
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/topic/review/ReviewSubtopicSelector.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/review/ReviewSubtopicSelector.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/review/ReviewSubtopicSelector.kt	(date 1584626399000)
@@ -0,0 +1,8 @@
+package org.oppia.app.topic.review
+
+import org.oppia.app.model.Subtopic
+
+/** Listener for when a subtopic is selected for review. */
+interface ReviewSubtopicSelector {
+  fun onTopicReviewSummaryClicked(subtopic: Subtopic)
+}
Index: model/src/main/proto/profile.proto
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/src/main/proto/profile.proto	(date 1584621433000)
+++ model/src/main/proto/profile.proto	(date 1584626399000)
@@ -10,8 +10,23 @@
   // Represents the next unique ID for adding a profile.
   int32 next_profile_id = 1;
 
+  // Determines whether profile was ever added or not.
+  bool was_profile_ever_added = 2;
+
+  // Represents device settings for the app.
+  DeviceSettings device_settings = 3;
+
   // Mapping from unique ID to profile.
-  map<int32, Profile> profiles = 2;
+  map<int32, Profile> profiles = 4;
+}
+
+// Structure for device settings.
+message DeviceSettings{
+  // Determines whether to download and update content only on wifi.
+  bool allow_download_and_update_only_on_wifi = 1;
+
+  // Determines whether app can automatically update topics.
+  bool automatically_update_topics = 2;
 }
 
 // Structure for a single profile.
@@ -41,6 +56,15 @@
 
   // Represents the time the user's profile was created.
   int64 date_created_timestamp_ms = 9;
+
+  // Represents user selected story-text-size.
+  StoryTextSize storyTextSize = 10;
+
+  // Represents user selected audio-language.
+  AudioLanguage audio_language = 11;
+
+  // Represents user selected app-language.
+  AppLanguage app_language = 12;
 }
 
 // Represents a profile avatar image.
@@ -72,3 +96,30 @@
     bool add_profile = 2;
   }
 }
+
+// Supported Story text sizes for user preference.
+enum StoryTextSize {
+  SMALL_TEXT_SIZE = 0;
+  MEDIUM_TEXT_SIZE = 1;
+  LARGE_TEXT_SIZE = 2;
+  EXTRA_LARGE_TEXT_SIZE =  3;
+}
+
+// TODO(#669): Add translation for language selection and track updating of this list to match the supported translation list.
+// Supported App language for user preference.
+enum AppLanguage {
+  ENGLISH_APP_LANGUAGE = 0;
+  HINDI_APP_LANGUAGE = 1;
+  FRENCH_APP_LANGUAGE = 2;
+  CHINESE_APP_LANGUAGE =  3;
+}
+
+// TODO(#669): Add translation for language selection and track updating of this list to match the supported translation list.
+// Supported Audio language for user preference.
+enum AudioLanguage {
+  NO_AUDIO = 0;
+  ENGLISH_AUDIO_LANGUAGE = 1;
+  HINDI_AUDIO_LANGUAGE = 2;
+  FRENCH_AUDIO_LANGUAGE = 3;
+  CHINESE_AUDIO_LANGUAGE =  4;
+}
Index: app/src/main/res/layout/help_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/help_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/help_activity.xml	(date 1584626399000)
@@ -26,6 +26,6 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:layout_gravity="start"
-    app:layout="@layout/fragment_drawer"
-    tools:layout="@layout/fragment_drawer" />
+    app:layout="@layout/drawer_fragment"
+    tools:layout="@layout/drawer_fragment" />
 </androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/res/values-xhdpi/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-xhdpi/dimens.xml	(date 1584621433000)
+++ app/src/main/res/values-xhdpi/dimens.xml	(date 1584626519000)
@@ -1,4 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
+  <dimen name="enter_text_view_padding_start">120dp</dimen>
+  <dimen name="enter_text_view_padding_end">120dp</dimen>
   <integer name="profilechooser_span">5</integer>
 </resources>
Index: app/src/main/java/org/oppia/app/customview/interaction/TextInputInteractionView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/customview/interaction/TextInputInteractionView.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/customview/interaction/TextInputInteractionView.kt	(date 1584626399000)
@@ -23,12 +23,12 @@
   attrs: AttributeSet? = null,
   defStyle: Int = android.R.attr.editTextStyle
 ) : EditText(context, attrs, defStyle), View.OnFocusChangeListener {
-  private val hintText: String
+  private val hintText: CharSequence
   private val stateKeyboardButtonListener: StateKeyboardButtonListener
 
   init {
     onFocusChangeListener = this
-    hintText = (hint ?: "").toString()
+    hintText = (hint ?: "")
     stateKeyboardButtonListener = context as StateKeyboardButtonListener
   }
 
Index: domain/src/main/java/org/oppia/domain/topic/StoryProgressTestHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/java/org/oppia/domain/topic/StoryProgressTestHelper.kt	(date 1584626399000)
+++ domain/src/main/java/org/oppia/domain/topic/StoryProgressTestHelper.kt	(date 1584626399000)
@@ -0,0 +1,244 @@
+package org.oppia.domain.topic
+
+import org.oppia.app.model.ProfileId
+import java.util.Date
+import javax.inject.Inject
+
+private const val EIGHT_DAYS_IN_MS = 8 * 24 * 60 * 60 * 1000
+
+/** This helper allows tests to easily create dummy progress per profile-basis. */
+class StoryProgressTestHelper @Inject constructor(private val storyProgressController: StoryProgressController) {
+
+  private fun getCurrentTimestamp(): Long {
+    return Date().time
+  }
+
+  // Returns a timestamp which is atleast a week old than current.
+  private fun getOldTimestamp(): Long {
+    return Date().time - EIGHT_DAYS_IN_MS
+  }
+
+  /** Creates a partial story progress for a particular profile. */
+  fun markPartialStoryProgressForFractions(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_0,
+      timestamp
+    )
+  }
+
+  /** Creates a partial topic progress for a particular profile. */
+  fun markPartialTopicProgressForFractions(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_0,
+      timestamp
+    )
+  }
+
+  /** Marks full story progress for a particular profile. */
+  fun markFullStoryProgressForFractions(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_0,
+      timestamp
+    )
+
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_1,
+      timestamp
+    )
+  }
+
+  /** Marks full topic progress for a particular profile. */
+  fun markFullTopicProgressForFractions(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_0,
+      timestamp
+    )
+
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_1,
+      timestamp
+    )
+  }
+
+  /** Marks one story progress full in ratios exploration for a particular profile. */
+  fun markFullStoryPartialTopicProgressForRatios(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_0,
+      timestamp
+    )
+
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_1,
+      timestamp
+    )
+  }
+
+  /** Marks two partial story progress in ratios exploration for a particular profile. */
+  fun markTwoPartialStoryProgressForRatios(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_0,
+      timestamp
+    )
+
+    storyProgressController.recordCompletedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_1,
+      RATIOS_EXPLORATION_ID_2,
+      timestamp
+    )
+  }
+
+  /** Marks exploration [FRACTIONS_EXPLORATION_ID_0] as recently played for a particular profile. */
+  fun markRecentlyPlayedForFractionsStory0Exploration0(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordRecentlyPlayedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_0,
+      timestamp
+    )
+  }
+
+  /** Marks exploration [RATIOS_EXPLORATION_ID_0] as recently played for a particular profile. */
+  fun markRecentlyPlayedForRatiosStory0Exploration0(profileId: ProfileId, timestampOlderThanAWeek: Boolean) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+    storyProgressController.recordRecentlyPlayedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_0,
+      timestamp
+    )
+  }
+
+  /** Marks first exploration in both stories of Ratios as recently played for a particular profile. */
+  fun markRecentlyPlayedForRatiosStory0Exploration0AndStory1Exploration2(
+    profileId: ProfileId,
+    timestampOlderThanAWeek: Boolean
+  ) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+
+    storyProgressController.recordRecentlyPlayedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_0,
+      timestamp
+    )
+
+    storyProgressController.recordRecentlyPlayedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_1,
+      RATIOS_EXPLORATION_ID_2,
+      timestamp
+    )
+  }
+
+  /** Marks first exploration in all stories of Ratios & Fractions as recently played for a particular profile. */
+  fun markRecentlyPlayedForFirstExplorationInAllStoriesInFractionsAndRatios(
+    profileId: ProfileId,
+    timestampOlderThanAWeek: Boolean
+  ) {
+    val timestamp = if (!timestampOlderThanAWeek) {
+      getCurrentTimestamp()
+    } else {
+      getOldTimestamp()
+    }
+
+    storyProgressController.recordRecentlyPlayedChapter(
+      profileId,
+      FRACTIONS_TOPIC_ID,
+      FRACTIONS_STORY_ID_0,
+      FRACTIONS_EXPLORATION_ID_0,
+      timestamp
+    )
+
+    storyProgressController.recordRecentlyPlayedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_0,
+      RATIOS_EXPLORATION_ID_0,
+      timestamp
+    )
+
+    storyProgressController.recordRecentlyPlayedChapter(
+      profileId,
+      RATIOS_TOPIC_ID,
+      RATIOS_STORY_ID_1,
+      RATIOS_EXPLORATION_ID_2,
+      timestamp
+    )
+  }
+}
Index: app/src/main/java/org/oppia/app/customview/interaction/NumericInputInteractionView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/customview/interaction/NumericInputInteractionView.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/customview/interaction/NumericInputInteractionView.kt	(date 1584626399000)
@@ -27,16 +27,20 @@
   defStyle: Int = android.R.attr.editTextStyle
 ) : EditText(context, attrs, defStyle), View.OnFocusChangeListener {
   private val stateKeyboardButtonListener: StateKeyboardButtonListener
+  private val hintText: CharSequence
 
   init {
     onFocusChangeListener = this
+    hintText = (hint ?: "")
     stateKeyboardButtonListener = context as StateKeyboardButtonListener
   }
 
   override fun onFocusChange(v: View, hasFocus: Boolean) = if (hasFocus) {
+    hint = ""
     typeface = Typeface.DEFAULT
     showSoftKeyboard(v, context)
   } else {
+    hint = hintText
     if (text.isEmpty()) setTypeface(typeface, Typeface.ITALIC)
     hideSoftKeyboard(v, context)
   }
Index: app/src/main/res/layout/topic_info_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/topic_info_fragment.xml	(date 1584621433000)
+++ app/src/main/res/layout/topic_info_fragment.xml	(date 1584626399000)
@@ -26,7 +26,7 @@
         android:layout_width="match_parent"
         android:layout_height="0dp"
         android:src="@{viewModel.topic.topicThumbnail.thumbnailGraphic}"
-        app:layout_constraintDimensionRatio="8:5"
+        app:layout_constraintDimensionRatio="16:9"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
@@ -36,7 +36,7 @@
         android:layout_width="match_parent"
         android:layout_height="0dp"
         android:background="@drawable/thumbnail_gradient"
-        app:layout_constraintDimensionRatio="8:5"
+        app:layout_constraintDimensionRatio="16:9"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
@@ -47,12 +47,12 @@
         android:layout_height="wrap_content"
         android:layout_marginStart="32dp"
         android:layout_marginEnd="32dp"
+        android:layout_marginBottom="8dp"
         android:fontFamily="sans-serif"
         android:text="@{viewModel.topic.name}"
         android:textColor="@color/oppiaPrimaryText"
         android:textSize="24sp"
         app:layout_constraintBottom_toBottomOf="@+id/topic_thumbnail_image_view"
-        android:layout_marginBottom="8dp"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent" />
 
Index: app/src/main/java/org/oppia/app/topic/review/TopicReviewFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/review/TopicReviewFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/review/TopicReviewFragmentPresenter.kt	(date 1584626399000)
@@ -1,5 +1,6 @@
 package org.oppia.app.topic.review
 
+import android.content.res.Configuration
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
@@ -11,9 +12,11 @@
 import androidx.recyclerview.widget.GridLayoutManager
 import org.oppia.app.databinding.TopicReviewFragmentBinding
 import org.oppia.app.fragment.FragmentScope
-import org.oppia.app.model.SkillSummary
+import org.oppia.app.model.ProfileId
+import org.oppia.app.model.Subtopic
 import org.oppia.app.model.Topic
-import org.oppia.app.topic.RouteToConceptCardListener
+import org.oppia.app.topic.PROFILE_ID_ARGUMENT_KEY
+import org.oppia.app.topic.RouteToReviewCardListener
 import org.oppia.app.topic.TOPIC_ID_ARGUMENT_KEY
 import org.oppia.domain.topic.TopicController
 import org.oppia.util.data.AsyncResult
@@ -27,22 +30,26 @@
   private val fragment: Fragment,
   private val logger: Logger,
   private val topicController: TopicController
-) : ReviewSkillSelector {
+) : ReviewSubtopicSelector {
+  private var internalProfileId: Int = -1
   private lateinit var topicId: String
-  private val routeToReviewListener = activity as RouteToConceptCardListener
+  private val routeToReviewListener = activity as RouteToReviewCardListener
 
-  private lateinit var reviewSkillSelectionAdapter: ReviewSkillSelectionAdapter
+  private lateinit var reviewAdapter: ReviewSubtopicAdapter
 
   fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    internalProfileId = fragment.arguments?.getInt(PROFILE_ID_ARGUMENT_KEY, -1)!!
     topicId = checkNotNull(fragment.arguments?.getString(TOPIC_ID_ARGUMENT_KEY)) {
       "Expected topic ID to be included in arguments for TopicReviewFragment."
     }
     val binding = TopicReviewFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
-    reviewSkillSelectionAdapter = ReviewSkillSelectionAdapter(this)
-    binding.reviewSkillRecyclerView.apply {
-      adapter = reviewSkillSelectionAdapter
+    reviewAdapter = ReviewSubtopicAdapter(this)
+
+    binding.reviewRecyclerView.apply {
+      adapter = reviewAdapter
       // https://stackoverflow.com/a/50075019/3689782
-      layoutManager = GridLayoutManager(context, /* spanCount= */ 2)
+      val spanCount = if( fragment.resources.configuration.orientation == Configuration.ORIENTATION_LANDSCAPE )  3 else  2
+      layoutManager = GridLayoutManager(context,spanCount)
     }
     binding.let {
       it.lifecycleOwner = fragment
@@ -51,19 +58,19 @@
     return binding.root
   }
 
-  override fun onTopicReviewSummaryClicked(skillSummary: SkillSummary) {
-    routeToReviewListener.routeToConceptCard(skillSummary.skillId)
+  override fun onTopicReviewSummaryClicked(subtopic: Subtopic) {
+    routeToReviewListener.routeToReviewCard(topicId, subtopic.subtopicId)
   }
 
   private val topicLiveData: LiveData<Topic> by lazy { getTopicList() }
 
   private val topicResultLiveData: LiveData<AsyncResult<Topic>> by lazy {
-    topicController.getTopic(topicId)
+    topicController.getTopic(ProfileId.newBuilder().setInternalId(internalProfileId).build(), topicId)
   }
 
   private fun subscribeToTopicLiveData() {
     topicLiveData.observe(fragment, Observer<Topic> { result ->
-      reviewSkillSelectionAdapter.setSkillList(result.skillList)
+      reviewAdapter.setReviewList(result.subtopicList)
     })
   }
 
Index: app/src/main/res/layout/profile_edit_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/profile_edit_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/profile_edit_activity.xml	(date 1584626399000)
@@ -4,7 +4,9 @@
   xmlns:profile="http://schemas.android.com/tools">
 
   <data>
+
     <import type="android.view.View" />
+
     <variable
       name="viewModel"
       type="org.oppia.app.settings.profile.ProfileEditViewModel" />
@@ -13,98 +15,60 @@
   <androidx.constraintlayout.widget.ConstraintLayout
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/profileEditBackground">
+    android:background="@color/profileEditBackground"
+    android:clipToPadding="false">
 
-    <androidx.constraintlayout.widget.ConstraintLayout
-      android:id="@+id/profile_edit_main"
+    <LinearLayout
+      android:id="@+id/linearLayout"
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
-      android:background="@color/white"
-      android:paddingBottom="52dp"
-      app:layout_constraintTop_toTopOf="parent">
-
-      <de.hdodenhof.circleimageview.CircleImageView
-        android:id="@+id/profile_edit_image"
-        android:layout_width="128dp"
-        android:layout_height="128dp"
-        android:layout_marginStart="32dp"
-        android:layout_marginTop="40dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        profile:src="@{viewModel.profile.avatar}" />
-
-      <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="20dp"
-        android:orientation="vertical"
-        app:layout_constraintBottom_toBottomOf="@id/profile_edit_image"
-        app:layout_constraintStart_toEndOf="@id/profile_edit_image"
-        app:layout_constraintTop_toTopOf="@id/profile_edit_image">
-
-        <TextView
-          android:id="@+id/profile_edit_name"
-          android:layout_width="wrap_content"
-          android:layout_height="wrap_content"
-          android:text="@{viewModel.profile.name}"
-          android:textColor="@color/black"
-          android:textSize="24sp"
-          android:textStyle="bold"
-          app:layout_constraintStart_toStartOf="parent"
-          app:layout_constraintTop_toTopOf="parent" />
-
-        <TextView
-          android:id="@+id/profile_edit_created"
-          android:layout_width="wrap_content"
-          android:layout_height="wrap_content"
-          android:layout_marginTop="4dp"
-          android:textColor="@color/oppiaPrimaryText"
-          android:textSize="18sp"
-          profile:created="@{viewModel.profile.dateCreatedTimestampMs}" />
-      </LinearLayout>
-    </androidx.constraintlayout.widget.ConstraintLayout>
-
-    <LinearLayout
-      android:layout_width="match_parent"
-      android:layout_height="wrap_content"
-      android:orientation="vertical"
+      android:clipToPadding="false"
+      android:orientation="vertical"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toBottomOf="@id/profile_edit_main">
 
       <View
         android:layout_width="match_parent"
-        android:layout_height="2dp"
+        android:layout_height="1dp"
         android:background="@color/grey" />
 
       <Button
         android:id="@+id/profile_rename_button"
+        style="?android:attr/borderlessButtonStyle"
         android:layout_width="match_parent"
-        android:layout_height="72dp"
+        android:layout_height="48dp"
         android:background="@color/white"
+        android:fontFamily="sans-serif"
         android:gravity="start|center_vertical"
-        android:paddingStart="28dp"
+        android:paddingStart="16dp"
         android:text="@string/profile_edit_rename"
         android:textAllCaps="false"
+        android:textColor="@color/oppiaPrimaryText"
         android:textSize="16sp" />
 
       <View
         android:layout_width="match_parent"
-        android:layout_height="2dp"
+        android:layout_height="1dp"
         android:background="@color/grey" />
 
       <Button
         android:id="@+id/profile_reset_button"
+        style="?android:attr/borderlessButtonStyle"
         android:layout_width="match_parent"
-        android:layout_height="72dp"
+        android:layout_height="48dp"
         android:background="@color/white"
+        android:fontFamily="sans-serif"
         android:gravity="start|center_vertical"
-        android:paddingStart="28dp"
+        android:paddingStart="16dp"
         android:text="@string/profile_edit_reset"
         android:textAllCaps="false"
-        android:textSize="16sp" />
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="16dp" />
 
       <View
         android:layout_width="match_parent"
-        android:layout_height="2dp"
+        android:layout_height="1dp"
         android:background="@color/grey" />
 
       <LinearLayout
@@ -118,16 +82,18 @@
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
           android:background="@color/white"
-          android:paddingStart="28dp"
-          android:paddingTop="16dp"
-          android:paddingEnd="28dp"
-          android:paddingBottom="16dp">
+          android:paddingStart="16dp"
+          android:paddingTop="12dp"
+          android:paddingEnd="16dp"
+          android:paddingBottom="12dp">
 
           <LinearLayout
+            android:id="@+id/linearLayout2"
             android:layout_width="0dp"
             android:layout_height="wrap_content"
-            android:layout_marginEnd="28dp"
+            android:layout_marginEnd="24dp"
             android:orientation="vertical"
+            app:layout_constraintBottom_toBottomOf="parent"
             app:layout_constraintEnd_toStartOf="@id/profile_edit_allow_download_switch"
             app:layout_constraintStart_toStartOf="parent"
             app:layout_constraintTop_toTopOf="parent">
@@ -136,28 +102,33 @@
               android:id="@+id/profile_edit_allow_download_heading"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
+              android:fontFamily="sans-serif"
               android:text="@string/profile_edit_allow_download_heading"
-              android:textColor="@color/black"
-              android:textSize="16sp" />
+              android:textColor="@color/oppiaPrimaryText"
+              android:textSize="16dp" />
 
             <TextView
               android:id="@+id/profile_edit_allow_download_sub"
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
-              android:text="@string/profile_edit_allow_download_sub" />
+              android:fontFamily="sans-serif"
+              android:text="@string/profile_edit_allow_download_sub"
+              android:textSize="14sp" />
           </LinearLayout>
 
           <Switch
             android:id="@+id/profile_edit_allow_download_switch"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
+            android:layout_marginTop="4dp"
+            android:layout_marginEnd="12dp"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintTop_toTopOf="parent" />
         </androidx.constraintlayout.widget.ConstraintLayout>
 
         <View
           android:layout_width="match_parent"
-          android:layout_height="2dp"
+          android:layout_height="1dp"
           android:background="@color/grey" />
       </LinearLayout>
     </LinearLayout>
@@ -165,23 +136,30 @@
     <LinearLayout
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
-      android:layout_marginBottom="20dp"
+      android:layout_marginBottom="12dp"
+      android:clipToPadding="false"
       android:orientation="vertical"
       android:visibility="@{viewModel.profile.isAdmin ? View.GONE : View.VISIBLE}"
-      app:layout_constraintBottom_toBottomOf="parent">
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/linearLayout"
+      app:layout_constraintVertical_bias="1.0">
 
       <View
         android:layout_width="match_parent"
-        android:layout_height="2dp"
+        android:layout_height="1dp"
         android:background="@color/grey" />
 
       <Button
         android:id="@+id/profile_delete_button"
+        style="?android:attr/borderlessButtonStyle"
         android:layout_width="match_parent"
-        android:layout_height="72dp"
+        android:layout_height="48dp"
         android:background="@color/white"
+        android:fontFamily="sans-serif"
         android:gravity="start|center_vertical"
-        android:paddingStart="28dp"
+        android:paddingStart="16dp"
         android:text="@string/profile_edit_delete"
         android:textAllCaps="false"
         android:textColor="@color/red"
@@ -189,8 +167,66 @@
 
       <View
         android:layout_width="match_parent"
-        android:layout_height="2dp"
+        android:layout_height="1dp"
         android:background="@color/grey" />
     </LinearLayout>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/profile_edit_main"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:clipToPadding="false"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="24dp"
+        android:layout_marginEnd="8dp"
+        android:orientation="vertical"
+        app:layout_constraintBottom_toBottomOf="@id/profile_edit_image"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@id/profile_edit_image"
+        app:layout_constraintTop_toTopOf="@id/profile_edit_image">
+
+        <TextView
+          android:id="@+id/profile_edit_name"
+          android:layout_width="wrap_content"
+          android:layout_height="wrap_content"
+          android:fontFamily="sans-serif-medium"
+          android:maxLines="1"
+          android:text="@{viewModel.profile.name}"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="20sp"
+          app:layout_constraintStart_toStartOf="parent"
+          app:layout_constraintTop_toTopOf="parent" />
+
+        <TextView
+          android:id="@+id/profile_edit_created"
+          android:layout_width="wrap_content"
+          android:layout_height="wrap_content"
+          android:fontFamily="sans-serif"
+          android:maxLines="1"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="16sp"
+          profile:created="@{viewModel.profile.dateCreatedTimestampMs}" />
+      </LinearLayout>
+
+      <de.hdodenhof.circleimageview.CircleImageView
+        android:id="@+id/profile_edit_image"
+        android:layout_width="90dp"
+        android:layout_height="90dp"
+        android:layout_marginStart="28dp"
+        android:layout_marginTop="28dp"
+        android:layout_marginBottom="36dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        profile:src="@{viewModel.profile.avatar}" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
   </androidx.constraintlayout.widget.ConstraintLayout>
 </layout>
Index: app/src/main/java/org/oppia/app/topic/review/TopicReviewFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/review/TopicReviewFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/review/TopicReviewFragment.kt	(date 1584626399000)
@@ -6,11 +6,11 @@
 import android.view.View
 import android.view.ViewGroup
 import org.oppia.app.fragment.InjectableFragment
-import org.oppia.app.model.SkillSummary
+import org.oppia.app.model.Subtopic
 import javax.inject.Inject
 
 /** Fragment that card for topic review. */
-class TopicReviewFragment : InjectableFragment(), ReviewSkillSelector {
+class TopicReviewFragment : InjectableFragment(), ReviewSubtopicSelector {
   @Inject lateinit var topicReviewFragmentPresenter: TopicReviewFragmentPresenter
 
   override fun onAttach(context: Context) {
@@ -22,7 +22,7 @@
     return topicReviewFragmentPresenter.handleCreateView(inflater, container)
   }
 
-  override fun onTopicReviewSummaryClicked(skillSummary: SkillSummary) {
-    topicReviewFragmentPresenter.onTopicReviewSummaryClicked(skillSummary)
+  override fun onTopicReviewSummaryClicked(subtopic: Subtopic) {
+    topicReviewFragmentPresenter.onTopicReviewSummaryClicked(subtopic)
   }
 }
Index: app/src/main/res/layout/pin_password_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/pin_password_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/pin_password_activity.xml	(date 1584626399000)
@@ -1,52 +1,66 @@
 <?xml version="1.0" encoding="utf-8"?>
 <layout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto">
+
   <data>
-    <import type="android.text.InputType"/>
+
+    <import type="android.text.InputType" />
+
     <variable
       name="viewModel"
       type="org.oppia.app.profile.PinPasswordViewModel" />
   </data>
+
   <androidx.constraintlayout.widget.ConstraintLayout
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/pinPasswordBackground">
+    android:background="@color/oppiaLightGreen">
+
     <TextView
-      android:id="@+id/hello_text"
+      android:id="@+id/hello_text_view"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
-      android:lines="1"
+      android:layout_marginStart="28dp"
+      android:layout_marginTop="96dp"
+      android:layout_marginEnd="28dp"
+      android:fontFamily="sans-serif"
       android:gravity="center_horizontal"
+      android:lines="1"
       android:text="@{String.format(@string/pin_password_hello, viewModel.profile.name)}"
-      android:textColor="@color/black"
-      android:textSize="28sp"
-      android:layout_marginTop="40dp"
-      app:layout_constraintTop_toTopOf="parent"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="24sp"
+      app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintStart_toStartOf="parent"
-      app:layout_constraintEnd_toEndOf="parent"/>
+      app:layout_constraintTop_toTopOf="parent" />
+
     <TextView
-      android:id="@+id/enter_text"
+      android:id="@+id/enter_text_view"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
+      android:paddingStart="@dimen/enter_text_view_padding_start"
+      android:layout_marginTop="8dp"
+      android:paddingEnd="@dimen/enter_text_view_padding_end"
+      android:fontFamily="sans-serif"
       android:gravity="center_horizontal"
       android:text="@{viewModel.profile.isAdmin ? @string/pin_password_admin_enter : @string/pin_password_user_enter}"
-      android:textColor="@color/black"
-      android:textSize="24sp"
-      android:layout_marginTop="12dp"
-      android:paddingBottom="12dp"
-      app:layout_constraintTop_toBottomOf="@+id/hello_text"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="18sp"
+      app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintStart_toStartOf="parent"
-      app:layout_constraintEnd_toEndOf="parent"/>
+      app:layout_constraintTop_toBottomOf="@+id/hello_text_view" />
+
     <TextView
-      android:id="@+id/error_text"
+      android:id="@+id/pin_password_error_text_view"
       android:layout_width="wrap_content"
-      android:layout_height="24dp"
+      android:layout_height="wrap_content"
       android:text="@{viewModel.showError ? @string/pin_password_incorrect_pin : null}"
-      android:textColor="@color/red"
-      android:textSize="20sp"
-      app:layout_constraintTop_toBottomOf="@+id/enter_text"
+      android:textColor="@color/oppiaBrown"
+      android:textSize="16sp"
+      android:layout_marginTop="24dp"
+      app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintStart_toStartOf="parent"
-      app:layout_constraintEnd_toEndOf="parent"/>
+      app:layout_constraintTop_toBottomOf="@+id/enter_text_view" />
+
     <com.chaos.view.PinView
       android:id="@+id/input_pin"
       style="@style/PinWidget.PinView"
@@ -54,60 +68,68 @@
       android:layout_height="wrap_content"
       android:cursorVisible="true"
       android:inputType="@{viewModel.showPassword ? InputType.TYPE_CLASS_NUMBER : (InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_VARIATION_PASSWORD)}"
-      android:padding="10dp"
       android:itemBackground="@color/white"
-      android:textColor="@color/black"
-      android:textSize="22sp"
-      android:textStyle="bold"
-      android:layout_marginTop="10dp"
-      app:cursorColor="@color/black"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="20sp"
+      android:fontFamily="sans-serif"
+      android:layout_marginTop="8dp"
+      app:cursorColor="@color/oppiaPrimaryText"
       app:cursorWidth="2dp"
       app:hideLineWhenFilled="false"
       app:itemCount="@{viewModel.profile.pin.length()}"
       app:itemHeight="48dp"
-      app:itemRadius="4dp"
+      app:itemRadius="2dp"
       app:itemSpacing="8dp"
       app:itemWidth="28dp"
-      app:lineColor="@color/grey"
+      app:lineColor="@color/avatarBorder"
       app:lineWidth="1dp"
       app:viewType="rectangle"
-      app:layout_constraintTop_toBottomOf="@+id/error_text"
+      app:layout_constraintTop_toBottomOf="@+id/pin_password_error_text_view"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintEnd_toEndOf="parent"/>
+
     <TextView
       android:id="@+id/forgot_pin"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
-      android:layout_marginTop="10dp"
+      android:minHeight="48dp"
+      android:paddingTop="12dp"
+      android:fontFamily="sans-serif"
       android:text="@string/pin_password_forgot_pin"
       android:textAllCaps="true"
       android:textColor="@color/colorPrimary"
-      android:textSize="16sp"
-      app:layout_constraintTop_toBottomOf="@+id/input_pin"
+      android:textSize="14sp"
+      app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintStart_toStartOf="parent"
-      app:layout_constraintEnd_toEndOf="parent"/>
+      app:layout_constraintTop_toBottomOf="@+id/input_pin" />
+
     <LinearLayout
-      android:layout_width="wrap_content"
-      android:layout_height="wrap_content"
+      android:id="@+id/show_pin"
+      android:layout_width="48dp"
+      android:layout_height="48dp"
       android:orientation="vertical"
-      android:layout_marginStart="10dp"
-      android:gravity="center"
-      android:id="@+id/show_pin"
-      app:layout_constraintTop_toTopOf="@+id/input_pin"
+      android:layout_marginStart="8dp"
+      android:layout_marginEnd="8dp"
       app:layout_constraintBottom_toBottomOf="@+id/input_pin"
-      app:layout_constraintStart_toEndOf="@+id/input_pin">
+      app:layout_constraintStart_toEndOf="@+id/input_pin"
+      app:layout_constraintTop_toTopOf="@+id/input_pin">
+
       <ImageView
-        android:layout_width="36dp"
-        android:layout_height="36dp"
-        android:src="@{viewModel.showPassword ? @drawable/ic_hide_eye_icon : @drawable/ic_show_eye_icon}"/>
+        android:layout_width="32dp"
+        android:layout_height="32dp"
+        android:layout_gravity="center_horizontal"
+        android:src="@{viewModel.showPassword ? @drawable/ic_hide_eye_icon : @drawable/ic_show_eye_icon}"
+        android:contentDescription="@string/show_hide_password_icon" />
+
       <TextView
         android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="-2dp"
+        android:layout_height="match_parent"
+        android:fontFamily="sans-serif"
         android:text="@{viewModel.showPassword ? @string/pin_password_hide : @string/pin_password_show}"
         android:textAllCaps="true"
-        android:textSize="12sp"
-        android:textColor="@color/colorPrimary"/>
+        android:layout_gravity="center_horizontal"
+        android:textColor="@color/colorPrimary"
+        android:textSize="12sp" />
     </LinearLayout>
   </androidx.constraintlayout.widget.ConstraintLayout>
 </layout>
Index: app/src/main/java/org/oppia/app/help/RoutetoFAQListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/RoutetoFAQListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/RoutetoFAQListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.help
+
+/** Listener for when a selection should result to FAQActivity. */
+interface RoutetoFAQListener {
+  fun onRouteToFAQ()
+}
Index: app/src/main/res/layout/state_button_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/state_button_item.xml	(date 1584621433000)
+++ app/src/main/res/layout/state_button_item.xml	(date 1584626399000)
@@ -60,6 +60,7 @@
       android:drawableEnd="@{buttonViewModel.interactionButtonName.get().equals(@string/state_learn_again_button)? @drawable/ic_refresh_white_24dp : null}"
       android:onClick="@{(v) -> buttonViewModel.triggerContinuationNavigationButtonCallback()}"
       android:text="@{buttonViewModel.interactionButtonName}"
+      android:background="@{buttonViewModel.isInteractionButtonActive()? @drawable/state_button_primary_background : @drawable/state_button_inactive_background}"
       android:textColor="@{buttonViewModel.isInteractionButtonActive()? @color/white : @color/oppiaSecondaryText}"
       android:visibility="@{buttonViewModel.isInteractionButtonVisible()? View.VISIBLE: View.GONE, default=gone}" />
   </RelativeLayout>
Index: domain/src/main/assets/fractions_subtopics.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/assets/fractions_subtopics.json	(date 1584626399000)
+++ domain/src/main/assets/fractions_subtopics.json	(date 1584626399000)
@@ -0,0 +1,30 @@
+{
+  "subtopic_title":"What is Fraction?",
+  "is_super_admin":true,
+  "is_moderator":true,
+  "iframed":false,
+  "is_admin":true,
+  "username":"veena",
+  "page_contents":{
+    "subtitled_html":{
+      "content_id":"content",
+      "html":"\u003cp\u003eDescription of subtopic is here.\u003c/p\u003e"
+    },
+    "written_translations":{
+      "translations_mapping":{
+        "content":{
+
+        }
+      }
+    },
+    "recorded_voiceovers":{
+      "voiceovers_mapping":{
+        "content":{
+
+        }
+      }
+    }
+  },
+  "user_email":"test@example.com",
+  "is_topic_manager":false
+}
Index: app/src/main/java/org/oppia/app/drawer/NavigationDrawerHeaderViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/drawer/NavigationDrawerHeaderViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/drawer/NavigationDrawerHeaderViewModel.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.drawer
+
+import androidx.databinding.ObservableField
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModel
+import org.oppia.app.model.Profile
+import org.oppia.app.viewmodel.ObservableViewModel
+import javax.inject.Inject
+
+/** [ViewModel] for displaying User profile details in navigation header. */
+class NavigationDrawerHeaderViewModel @Inject constructor(
+  fragment: Fragment
+) : ObservableViewModel() {
+  private var routeToProfileProgressListener = fragment as RouteToProfileProgressListener
+
+  val profile = ObservableField<Profile>(Profile.getDefaultInstance())
+  val ongoingTopicCount = ObservableField<Int>(0)
+  val completedStoryCount = ObservableField<Int>(0)
+
+  fun onHeaderClicked() {
+    routeToProfileProgressListener.routeToProfileProgress(profile.get()!!.id.internalId)
+  }
+}
Index: app/src/main/java/org/oppia/app/drawer/NavigationDrawerFooterViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/drawer/NavigationDrawerFooterViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/drawer/NavigationDrawerFooterViewModel.kt	(date 1584626399000)
@@ -0,0 +1,10 @@
+package org.oppia.app.drawer
+
+import androidx.databinding.ObservableField
+import org.oppia.app.viewmodel.ObservableViewModel
+import javax.inject.Inject
+
+/** [ViewModel] for displaying Administrator Controls option. */
+class NavigationDrawerFooterViewModel @Inject constructor() : ObservableViewModel() {
+  val isAdmin = ObservableField<Boolean>(false)
+}
Index: model/src/main/proto/onboarding.proto
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/src/main/proto/onboarding.proto	(date 1584626399000)
+++ model/src/main/proto/onboarding.proto	(date 1584626399000)
@@ -0,0 +1,12 @@
+syntax = "proto3";
+
+package model;
+
+option java_package = "org.oppia.app.model";
+option java_multiple_files = true;
+
+// Structure for user onboarding flow.
+message OnboardingFlow {
+  // Determines whether user already onboarded.
+  bool already_onboarded_app = 1;
+}
Index: app/src/main/java/org/oppia/app/story/testing/StoryFragmentTestActivity.kt
===================================================================
--- app/src/main/java/org/oppia/app/story/testing/StoryFragmentTestActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/StoryFragmentTestActivity.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.story.testing
+package org.oppia.app.testing
 
 import android.content.Context
 import android.content.Intent
@@ -7,6 +7,8 @@
 import org.oppia.app.home.RouteToExplorationListener
 import javax.inject.Inject
 
+const val INTERNAL_PROFILE_ID_TEST_INTENT_EXTRA = "StoryFragmentTestActivity.internalProfileId"
+const val TOPIC_ID_TEST_INTENT_EXTRA = "StoryFragmentTestActivity.topic_id"
 const val STORY_ID_TEST_INTENT_EXTRA = "StoryFragmentTestActivity.story_id"
 
 /** Test activity used for story fragment. */
@@ -19,14 +21,16 @@
     storyFragmentTestActivityPresenter.handleOnCreate()
   }
 
-  override fun routeToExploration(explorationId: String, topicId: String?) {
+  override fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
     // Do nothing since routing should be tested at the StoryActivity level.
   }
 
   companion object {
     /** Returns an [Intent] to create new [StoryFragmentTestActivity]s. */
-    fun createTestActivityIntent(context: Context, storyId: String): Intent {
+    fun createTestActivityIntent(context: Context, internalProfileId: Int, topicId: String, storyId: String): Intent {
       val intent = Intent(context, StoryFragmentTestActivity::class.java)
+      intent.putExtra(INTERNAL_PROFILE_ID_TEST_INTENT_EXTRA, internalProfileId)
+      intent.putExtra(TOPIC_ID_TEST_INTENT_EXTRA, topicId)
       intent.putExtra(STORY_ID_TEST_INTENT_EXTRA, storyId)
       return intent
     }
Index: app/src/main/java/org/oppia/app/help/HelpCategoryAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/HelpCategoryAdapter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/HelpCategoryAdapter.kt	(date 1584626399000)
@@ -0,0 +1,52 @@
+package org.oppia.app.help
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.RecyclerView
+import org.oppia.app.databinding.HelpItemBinding
+
+/** The Recycler View adapter in the [HelpFragment]. */
+class HelpCategoryAdapter(
+  private val activity: AppCompatActivity,
+  private val arrayList: ArrayList<HelpViewModel>
+) :
+  RecyclerView.Adapter<HelpCategoryAdapter.HelpItemView>() {
+
+  override fun onCreateViewHolder(
+    parent: ViewGroup,
+    viewType: Int
+  ): HelpItemView {
+    val layoutInflater = LayoutInflater.from(parent.context)
+    val helpItemBinding = HelpItemBinding.inflate(
+      layoutInflater,
+      parent,
+      /* attachToParent= */ false
+    )
+    return HelpItemView(helpItemBinding)
+  }
+
+  override fun getItemCount(): Int {
+    return arrayList.size
+  }
+
+  override fun onBindViewHolder(holder: HelpItemView, position: Int) {
+    holder.bind(arrayList[position], position, activity)
+  }
+
+  class HelpItemView(private val helpItemBinding: HelpItemBinding) :
+    RecyclerView.ViewHolder(helpItemBinding.root) {
+    fun bind(helpViewModel: HelpViewModel, position: Int, activity: AppCompatActivity) {
+      this.helpItemBinding.viewmodel = helpViewModel
+      helpItemBinding.root.setOnClickListener {
+        when (HelpItems.getHelpItemForPosition(position)) {
+          HelpItems.FAQ -> {
+            val routeToFAQListener = activity as RoutetoFAQListener
+            routeToFAQListener.onRouteToFAQ()
+          }
+        }
+      }
+      helpItemBinding.executePendingBindings()
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/help/HelpItems.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/help/HelpItems.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/help/HelpItems.kt	(date 1584626399000)
@@ -0,0 +1,15 @@
+package org.oppia.app.help
+
+/** Enum class containing the items for the Recycler view of [HelpActivity]. */
+enum class HelpItems(private var position: Int) {
+  FAQ(position = 0);
+
+  companion object {
+    fun getHelpItemForPosition(position: Int): HelpItems {
+      val ordinal = checkNotNull(values().map(HelpItems::position)[position]) {
+        "No tab corresponding to position: $position"
+      }
+      return values()[ordinal]
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/drawer/RouteToAdministratorControlsListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/drawer/RouteToAdministratorControlsListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/drawer/RouteToAdministratorControlsListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.drawer
+
+/** Listener for when an activity should route to Administrator Controls. */
+interface RouteToAdministratorControlsListener {
+  fun routeToAdministratorControls(profileId: Int)
+}
Index: app/src/main/res/layout/add_profile_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/add_profile_activity.xml	(date 1584621433000)
+++ app/src/main/res/layout/add_profile_activity.xml	(date 1584626399000)
@@ -2,118 +2,176 @@
 <layout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto"
   xmlns:profile="http://schemas.android.com/tools">
+
   <data>
+
+    <import type="android.view.View" />
+
     <variable
       name="viewModel"
       type="org.oppia.app.profile.AddProfileViewModel" />
   </data>
+
   <ScrollView
     android:id="@+id/scroll"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    android:background="@color/addProfileBackground">
+
     <androidx.constraintlayout.widget.ConstraintLayout
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
-      android:background="@color/addProfileBackground"
       android:paddingTop="40dp"
       android:paddingBottom="40dp">
-      <de.hdodenhof.circleimageview.CircleImageView
-        android:id="@+id/upload_image_button"
-        android:layout_width="136dp"
-        android:layout_height="136dp"
-        android:src="@drawable/ic_upload_photo"
-        android:paddingBottom="8dp"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent" />
-      <org.oppia.app.profile.ProfileInputView
-        android:id="@+id/input_name"
-        android:layout_width="match_parent"
+
+      <Button
+        android:id="@+id/create_button"
+        style="@style/StateButtonActive"
+        android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        app:layout_constraintTop_toBottomOf="@+id/upload_image_button"
-        app:layout_constraintStart_toStartOf="parent"
+        android:layout_marginTop="60dp"
+        android:layout_marginEnd="32dp"
+        android:text="@string/add_profile_create_btn"
+        android:textAllCaps="true"
         app:layout_constraintEnd_toEndOf="parent"
-        app:label="@string/add_profile_input_name"
-        profile:error="@{viewModel.nameErrorMsg}"/>
-      <org.oppia.app.profile.ProfileInputView
-        android:id="@+id/input_pin"
-        android:layout_width="match_parent"
+        app:layout_constraintTop_toBottomOf="@+id/pin_container" />
+
+      <CheckBox
+        android:id="@+id/checkbox_pin"
+        android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        app:layout_constraintTop_toBottomOf="@+id/input_name"
+        android:layout_marginStart="24dp"
+        android:text="@string/add_profile_create_a_3_digit_pin"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:label="@string/add_profile_input_pin"
-        app:isPasswordInput="true"
-        app:inputLength="3"
-        profile:error="@{viewModel.pinErrorMsg}"/>
+        app:layout_constraintTop_toBottomOf="@+id/input_name" />
+
       <ImageView
         android:id="@+id/info_icon"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:src="@drawable/ic_info_icon"
+        android:layout_marginTop="4dp"
         android:layout_marginEnd="40dp"
-        android:layout_marginTop="24dp"
-        app:layout_constraintTop_toTopOf="@+id/input_pin"
-        app:layout_constraintEnd_toEndOf="parent"/>
-      <org.oppia.app.profile.ProfileInputView
-        android:id="@+id/input_confirm_pin"
+        android:src="@drawable/ic_info_icon"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="@+id/checkbox_pin" />
+
+      <TextView
+        android:id="@+id/required_heading"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        app:layout_constraintTop_toBottomOf="@+id/input_pin"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:label="@string/add_profile_input_confirm_pin"
-        app:isPasswordInput="true"
-        app:inputLength="3"
-        profile:error="@{viewModel.confirmPinErrorMsg}"/>
+        android:layout_marginStart="32dp"
+        android:layout_marginEnd="32dp"
+        android:text="@string/add_profile_required"
+        android:textSize="12sp"
+        app:layout_constraintTop_toBottomOf="@+id/upload_image_button" />
+
       <androidx.constraintlayout.widget.ConstraintLayout
-        android:id="@+id/allow_download_container"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        app:layout_constraintTop_toBottomOf="@+id/input_confirm_pin"
-        android:layout_marginTop="32dp"
-        android:layout_marginStart="32dp"
-        android:layout_marginEnd="32dp">
-        <LinearLayout
-          android:layout_width="0dp"
-          android:layout_height="wrap_content"
-          android:orientation="vertical"
-          app:layout_constraintTop_toTopOf="parent"
-          app:layout_constraintStart_toStartOf="parent"
-          app:layout_constraintEnd_toStartOf="@+id/allow_download_switch"
-          android:layout_marginEnd="32dp">
-          <TextView
-            android:id="@+id/allow_download_heading"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/add_profile_allow_download_heading"
-            android:textColor="@{viewModel.validPin ? @color/black : @color/grey}"
-            android:textStyle="bold"/>
-          <TextView
-            android:id="@+id/allow_download_sub"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/add_profile_allow_download_sub"/>
-        </LinearLayout>
-        <Switch
-          android:id="@+id/allow_download_switch"
-          android:layout_width="wrap_content"
-          android:layout_height="wrap_content"
-          android:clickable="@{viewModel.validPin ? true : false}"
-          app:layout_constraintEnd_toEndOf="parent"
-          app:layout_constraintTop_toTopOf="parent"/>
-      </androidx.constraintlayout.widget.ConstraintLayout>
-      <Button
-        android:id="@+id/create_button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/add_profile_create_btn"
-        android:textAllCaps="true"
-        style="@style/StateButtonActive"
-        app:layout_constraintTop_toBottomOf="@+id/allow_download_container"
+        android:id="@+id/pin_container"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:visibility="@{viewModel.createPin ? View.VISIBLE : View.GONE}"
+        app:layout_constraintTop_toBottomOf="@+id/checkbox_pin">
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+          android:id="@+id/allow_download_container"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:layout_marginStart="64dp"
+          android:layout_marginTop="32dp"
+          android:layout_marginEnd="32dp"
+          app:layout_constraintTop_toBottomOf="@+id/input_confirm_pin">
+
+          <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginEnd="32dp"
+            android:orientation="vertical"
+            app:layout_constraintEnd_toStartOf="@+id/allow_download_switch"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
+
+            <TextView
+              android:id="@+id/allow_download_heading"
+              android:layout_width="wrap_content"
+              android:layout_height="wrap_content"
+              android:text="@string/add_profile_allow_download_heading"
+              android:textColor="@{viewModel.validPin ? @color/black : @color/grey}"
+              android:textStyle="bold" />
+
+            <TextView
+              android:id="@+id/allow_download_sub"
+              android:layout_width="match_parent"
+              android:layout_height="wrap_content"
+              android:text="@string/add_profile_allow_download_sub" />
+          </LinearLayout>
+
+          <Switch
+            android:id="@+id/allow_download_switch"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:clickable="@{viewModel.validPin ? true : false}"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+
+        <org.oppia.app.profile.ProfileInputView
+          android:id="@+id/input_confirm_pin"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:layout_marginStart="@dimen/margin_32"
+          app:inputLength="3"
+          app:isPasswordInput="true"
+          app:label="@string/add_profile_input_confirm_pin"
+          app:layout_constraintEnd_toEndOf="parent"
+          app:layout_constraintStart_toStartOf="parent"
+          app:layout_constraintTop_toBottomOf="@+id/input_pin"
+          profile:error="@{viewModel.confirmPinErrorMsg}" />
+
+        <org.oppia.app.profile.ProfileInputView
+          android:id="@+id/input_pin"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:layout_marginStart="@dimen/margin_32"
+          android:visibility="visible"
+          app:inputLength="3"
+          app:isPasswordInput="true"
+          app:label="@string/add_profile_input_pin"
+          app:layout_constraintEnd_toEndOf="parent"
+          app:layout_constraintStart_toStartOf="parent"
+          app:layout_constraintTop_toTopOf="parent"
+          profile:error="@{viewModel.pinErrorMsg}" />
+      </androidx.constraintlayout.widget.ConstraintLayout>
+
+      <de.hdodenhof.circleimageview.CircleImageView
+        android:id="@+id/upload_image_button"
+        android:layout_width="136dp"
+        android:layout_height="136dp"
+        app:civ_circle_background_color="@color/grey"
+        android:paddingBottom="8dp"
+        android:src="@drawable/ic_default_avatar"
         app:layout_constraintEnd_toEndOf="parent"
-        android:layout_marginTop="60dp"
-        android:layout_marginEnd="32dp"/>
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <org.oppia.app.profile.ProfileInputView
+        android:id="@+id/input_name"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:label="@string/add_profile_input_name"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/required_heading"
+        profile:error="@{viewModel.nameErrorMsg}" />
+
+      <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/edit_image_fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:src="@drawable/ic_edit"
+        app:backgroundTint="@color/white"
+        app:fabSize="mini"
+        app:layout_constraintBottom_toBottomOf="@+id/upload_image_button"
+        app:layout_constraintEnd_toEndOf="@+id/upload_image_button" />
     </androidx.constraintlayout.widget.ConstraintLayout>
   </ScrollView>
 </layout>
Index: app/src/main/java/org/oppia/app/drawer/RouteToProfileProgressListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/drawer/RouteToProfileProgressListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/drawer/RouteToProfileProgressListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.drawer
+
+/** Listener for when an activity should route to [ProfileProgressActivity]. */
+interface RouteToProfileProgressListener {
+  fun routeToProfileProgress(profileId: Int)
+}
Index: app/src/main/java/org/oppia/app/databinding/EditTextBindingAdapters.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/databinding/EditTextBindingAdapters.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/databinding/EditTextBindingAdapters.kt	(date 1584626399000)
@@ -0,0 +1,11 @@
+package org.oppia.app.databinding
+
+import android.text.TextWatcher
+import android.widget.EditText
+import androidx.databinding.BindingAdapter
+
+/** Binding adapter for setting a [TextWatcher] as a change listener for an [EditText]. */
+@BindingAdapter("app:textChangedListener")
+fun bindTextWatcher(editText: EditText, textWatcher: TextWatcher) {
+  editText.addTextChangedListener(textWatcher)
+}
Index: app/src/main/java/org/oppia/app/player/state/answerhandling/InteractionAnswerErrorReceiver.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/answerhandling/InteractionAnswerErrorReceiver.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/player/state/answerhandling/InteractionAnswerErrorReceiver.kt	(date 1584626399000)
@@ -0,0 +1,15 @@
+package org.oppia.app.player.state.answerhandling
+
+/**
+ * A handler for interaction answer's error receiving to update submit button.
+ * Handlers can either require an additional user action before the submit button UI can be updated.
+ */
+interface InteractionAnswerErrorReceiver {
+
+  /**
+   * Called when an error was detected upon answer submission. Implementations are recommended to prevent further answer
+   * submission until the pending answer itself changes. The interaction is responsible for displaying the error provided
+   * here, not the implementation.
+   */
+  fun onPendingAnswerError(pendingAnswerError: String?) {}
+}
Index: app/src/main/res/menu/menu_faq_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_faq_activity.xml	(date 1584626399000)
+++ app/src/main/res/menu/menu_faq_activity.xml	(date 1584626399000)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+  <item
+    android:id="@+id/action_search"
+    android:icon="@drawable/icon_search_white_24dp"
+    android:title="@string/search"
+    app:showAsAction="always" />
+</menu>
Index: app/src/main/res/menu/menu_administrator_controls_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_administrator_controls_activity.xml	(date 1584626399000)
+++ app/src/main/res/menu/menu_administrator_controls_activity.xml	(date 1584626399000)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+      xmlns:app="http://schemas.android.com/apk/res-auto">
+  <item
+    android:id="@+id/action_search"
+    android:title="@string/search"
+    android:icon="@drawable/icon_search_white_24dp"
+    app:showAsAction="always" />
+</menu>
Index: app/src/main/java/org/oppia/app/testing/RecentlyPlayedFragmentTestActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/RecentlyPlayedFragmentTestActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/testing/RecentlyPlayedFragmentTestActivity.kt	(date 1584626399000)
@@ -0,0 +1,31 @@
+package org.oppia.app.testing
+
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.home.RouteToExplorationListener
+import org.oppia.app.player.exploration.ExplorationActivity
+import javax.inject.Inject
+
+/** Test activity for recent stories. */
+class RecentlyPlayedFragmentTestActivity : InjectableAppCompatActivity(),
+  RouteToExplorationListener {
+  @Inject lateinit var recentlyPlayedFragmentTestActivityPresenter: RecentlyPlayedFragmentTestActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    recentlyPlayedFragmentTestActivityPresenter.handleOnCreate()
+  }
+
+  override fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    startActivity(
+      ExplorationActivity.createExplorationActivityIntent(
+        this,
+        internalProfileId,
+        topicId,
+        storyId,
+        explorationId
+      )
+    )
+  }
+}
Index: app/src/main/java/org/oppia/app/story/testing/StoryFragmentTestActivityPresenter.kt
===================================================================
--- app/src/main/java/org/oppia/app/story/testing/StoryFragmentTestActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/testing/StoryFragmentTestActivityPresenter.kt	(date 1584626399000)
@@ -1,9 +1,8 @@
-package org.oppia.app.story.testing
+package org.oppia.app.testing
 
 import androidx.appcompat.app.AppCompatActivity
 import org.oppia.app.R
 import org.oppia.app.activity.ActivityScope
-import org.oppia.app.player.audio.AudioFragment
 import org.oppia.app.story.StoryFragment
 import javax.inject.Inject
 
@@ -14,18 +13,22 @@
 ) {
   fun handleOnCreate() {
     activity.setContentView(R.layout.story_fragment_test_activity)
-    if (getAudioFragment() == null) {
+    if (getStoryFragment() == null) {
+      val internalProfileId = activity.intent.getIntExtra(INTERNAL_PROFILE_ID_TEST_INTENT_EXTRA, -1)
+      val topicId = checkNotNull(activity.intent.getStringExtra(TOPIC_ID_TEST_INTENT_EXTRA)) {
+        "Expected non-null topic ID to be passed in using extra key: $TOPIC_ID_TEST_INTENT_EXTRA"
+      }
       val storyId = checkNotNull(activity.intent.getStringExtra(STORY_ID_TEST_INTENT_EXTRA)) {
         "Expected non-null story ID to be passed in using extra key: $STORY_ID_TEST_INTENT_EXTRA"
       }
       activity.supportFragmentManager.beginTransaction().add(
         R.id.story_fragment_placeholder,
-        StoryFragment.newInstance(storyId)
+        StoryFragment.newInstance(internalProfileId, topicId, storyId)
       ).commitNow()
     }
   }
 
-  private fun getAudioFragment(): AudioFragment? {
-    return activity.supportFragmentManager.findFragmentById(R.id.audio_fragment_placeholder) as AudioFragment?
+  private fun getStoryFragment(): StoryFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.story_fragment_placeholder) as StoryFragment?
   }
 }
Index: app/src/main/java/org/oppia/app/testing/RecentlyPlayedFragmentTestActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/testing/RecentlyPlayedFragmentTestActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/testing/RecentlyPlayedFragmentTestActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,25 @@
+package org.oppia.app.testing
+
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.home.recentlyplayed.RecentlyPlayedFragment
+import javax.inject.Inject
+
+/** The presenter for [RecentlyPlayedFragmentTestActivity]. */
+@ActivityScope
+class RecentlyPlayedFragmentTestActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  fun handleOnCreate() {
+    activity.setContentView(R.layout.recently_played_activity)
+    if (getRecentlyPlayedFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.recently_played_fragment_placeholder,
+        RecentlyPlayedFragment()
+      ).commitNow()
+    }
+  }
+
+  private fun getRecentlyPlayedFragment(): RecentlyPlayedFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.recently_played_fragment_placeholder) as RecentlyPlayedFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/parser/StringToNumberParser.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/parser/StringToNumberParser.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/parser/StringToNumberParser.kt	(date 1584626399000)
@@ -0,0 +1,63 @@
+package org.oppia.app.parser
+
+import android.content.Context
+import androidx.annotation.StringRes
+import org.oppia.app.R
+import org.oppia.domain.util.normalizeWhitespace
+
+/** This class contains methods that help to parse string to number, check realtime and submit time errors. */
+class StringToNumberParser {
+  private val validCharsRegex = """^[\d\s.-]+$""".toRegex()
+
+  /**
+   * Returns a [NumericInputParsingError] for obvious incorrect number formatting issues for the specified raw text, or
+   * [NumericInputParsingError.VALID] if not such issues are found.
+   *
+   * Note that this method returning a valid result does not guarantee the text is a valid number
+   * [getSubmitTimeError] should be used for that, instead. This method is meant to be used as a quick sanity check for
+   * general validity, not for definite correctness.
+   */
+  fun getRealTimeAnswerError(text: String): NumericInputParsingError {
+    val normalized = text.normalizeWhitespace()
+    return when {
+      !normalized.matches(validCharsRegex) -> NumericInputParsingError.INVALID_FORMAT
+      normalized.startsWith(".") -> NumericInputParsingError.STARTING_WITH_FLOATING_POINT
+      normalized.count { it == '.' } > 1 -> NumericInputParsingError.INVALID_FORMAT
+      normalized.lastIndexOf('-') > 0 -> NumericInputParsingError.INVALID_FORMAT
+      else -> NumericInputParsingError.VALID
+    }
+  }
+
+  /**
+   * Returns a [NumericInputParsingError] for the specified text input if it's an invalid number, or
+   * [NumericInputParsingError.VALID] if no issues are found. Note that a valid number returned by this method is guaranteed
+   * to be parsed correctly.
+   *
+   * This method should only be used when a user tries submitting an answer. Real-time error detection should be done
+   * using [getRealTimeAnswerError], instead.
+   */
+  fun getSubmitTimeError(text: String): NumericInputParsingError {
+    if (text.length > 15) {
+      return NumericInputParsingError.NUMBER_TOO_LONG
+    }
+    return try {
+      text.toDouble()
+      NumericInputParsingError.VALID
+    } catch (e: Exception) {
+      NumericInputParsingError.INVALID_FORMAT
+    }
+  }
+
+  /** Enum to store the errors of [NumericInputInteractionView]. */
+  enum class NumericInputParsingError(@StringRes private var error: Int?) {
+    VALID(error = null),
+    INVALID_FORMAT(error = R.string.number_error_invalid_format),
+    STARTING_WITH_FLOATING_POINT(error = R.string.number_error_starting_with_floating_point),
+    NUMBER_TOO_LONG(error = R.string.number_error_larger_than_fifteen_characters);
+
+    /** Returns the string corresponding to this error's string resources, or null if there is none. */
+    fun getErrorMessageFromStringRes(context: Context): String? {
+      return error?.let(context::getString)
+    }
+  }
+}
Index: app/src/main/res/layout-land/onboarding_slide.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/onboarding_slide.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/onboarding_slide.xml	(date 1584626399000)
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.onboarding.OnboardingSlideViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="horizontal">
+
+    <ImageView
+      android:id="@+id/slide_image_view"
+      android:layout_width="0dp"
+      android:adjustViewBounds="true"
+      android:scaleType="fitXY"
+      android:layout_height="0dp"
+      android:contentDescription="@{viewModel.contentDescription}"
+      android:src="@{viewModel.slideImage}"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintDimensionRatio="H,4:4.5"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/slide_title_text_view"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="140dp"
+      android:layout_marginEnd="28dp"
+      android:fontFamily="sans-serif-medium"
+      android:gravity="center_horizontal"
+      android:text="@{viewModel.title}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="24sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintHorizontal_bias="1.0"
+      app:layout_constraintStart_toEndOf="@+id/slide_image_view"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/slide_description_text_view"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="8dp"
+      android:layout_marginEnd="40dp"
+      android:layout_marginStart="10dp"
+      android:fontFamily="sans-serif"
+      android:gravity="center_horizontal"
+      android:text="@{viewModel.description}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintHorizontal_bias="0.0"
+      app:layout_constraintStart_toEndOf="@+id/slide_image_view"
+      app:layout_constraintTop_toBottomOf="@+id/slide_title_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/topic_practice_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/topic_practice_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/topic_practice_fragment.xml	(date 1584626399000)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.practice.TopicPracticeViewModel" />
+  </data>
+
+  <androidx.recyclerview.widget.RecyclerView
+    android:id="@+id/topic_practice_skill_list"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:clipToPadding="false"
+    android:overScrollMode="never"
+    android:paddingStart="48dp"
+    android:paddingEnd="48dp"
+    android:paddingBottom="172dp"
+    android:scrollbars="none"
+    app:data="@{viewModel.topicPracticeSkillLiveData}"
+    app:layout_constraintBottom_toBottomOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent" />
+</layout>
Index: app/src/main/res/layout-land/admin_auth_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/admin_auth_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/admin_auth_activity.xml	(date 1584626399000)
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:profile="http://schemas.android.com/tools"
+  android:orientation="vertical"
+  xmlns:app="http://schemas.android.com/apk/res-auto" >
+
+  <data>
+    <variable
+      name="viewModel"
+      type="org.oppia.app.profile.AdminAuthViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:id="@+id/admin_auth_container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/addProfileBackground">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/admin_auth_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/admin_auth_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationIcon="@drawable/ic_close_white_24dp"
+        app:title="@string/admin_auth_heading"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/admin_auth_app_bar_layout">
+
+      <ScrollView
+        android:id="@+id/admin_auth_landscape_scrollView"
+        android:scrollbars="none"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content">
+
+          <TextView
+            android:id="@+id/heading_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40dp"
+            android:fontFamily="sans-serif-medium"
+            android:lines="2"
+            android:paddingStart="28dp"
+            android:paddingEnd="28dp"
+            android:text="@string/admin_auth_heading"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="20sp"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+          <TextView
+            android:id="@+id/sub_text"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="12dp"
+            android:fontFamily="sans-serif"
+            android:paddingStart="28dp"
+            android:paddingEnd="28dp"
+            android:text="@string/admin_auth_sub"
+            android:textColor="@color/black_54"
+            android:textSize="16sp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/heading_text" />
+
+          <LinearLayout
+            android:id="@+id/admin_auth_linearLayout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/sub_text">
+
+            <FrameLayout
+              android:layout_width="0dp"
+              android:layout_height="wrap_content"
+              android:layout_weight="10" />
+
+            <org.oppia.app.profile.ProfileInputView
+              android:id="@+id/input_pin"
+              android:layout_width="wrap_content"
+              android:layout_height="wrap_content"
+              android:layout_marginTop="16dp"
+              android:layout_weight="18"
+              android:addTextChangedListener="@{viewModel.inputPinTextWatcher}"
+              android:imeOptions="actionDone"
+              app:inputLength="5"
+              app:isPasswordInput="true"
+              app:label="@string/admin_auth_pin"
+              profile:error="@{viewModel.errorMessage}" />
+
+            <FrameLayout
+              android:layout_width="0dp"
+              android:layout_height="wrap_content"
+              android:layout_weight="10" />
+          </LinearLayout>
+
+          <Button
+            android:id="@+id/submit_button"
+            style="@style/StateButtonActive"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="36dp"
+            android:layout_marginEnd="28dp"
+            android:layout_marginBottom="36dp"
+            android:layout_weight="18"
+            android:background="@{viewModel.isSubmitButtonActive.get()? @drawable/state_button_primary_background :@drawable/start_button_transparent_background}"
+            android:gravity="center"
+            android:minHeight="48dp"
+            android:paddingStart="20dp"
+            android:paddingEnd="20dp"
+            android:text="@string/state_continue_submit"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.77"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/admin_auth_linearLayout" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+
+      </ScrollView>
+
+      <View
+        android:id="@+id/toolbar_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+
+  </androidx.constraintlayout.widget.ConstraintLayout>
+
+</layout>
Index: app/src/main/res/layout-land/default_audio_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/default_audio_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/default_audio_activity.xml	(date 1584626399000)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/story_list_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/audio_language_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/title_default_audio"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_list_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/audio_language_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingTop="8dp"
+        android:paddingBottom="128dp"
+        android:scrollbars="none"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/toolbar_shadow_view" />
+
+      <View
+        android:id="@+id/toolbar_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/language_items.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/language_items.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/language_items.xml	(date 1584626399000)
@@ -0,0 +1,42 @@
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="languageString"
+      type="CharSequence" />
+  </data>
+
+  <RelativeLayout
+    android:id="@+id/radio_container"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="4dp"
+    android:gravity="center_vertical"
+    android:minHeight="48dp">
+
+    <androidx.appcompat.widget.AppCompatRadioButton
+      android:id="@+id/language_radio_button"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="20dp"
+      android:clickable="false"
+      android:gravity="center_vertical"
+      android:padding="4dp"
+      app:buttonTint="@color/defaultAudioActivityRadioButton" />
+
+    <TextView
+      android:id="@+id/language_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="28dp"
+      android:layout_toEndOf="@+id/language_radio_button"
+      android:fontFamily="sans-serif"
+      android:gravity="center_vertical"
+      android:paddingTop="4dp"
+      android:text="@{languageString}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp" />
+  </RelativeLayout>
+</layout>
Index: app/src/main/res/layout-land/administrator_controls_account_actions_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/administrator_controls_account_actions_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/administrator_controls_account_actions_view.xml	(date 1584626399000)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAccountActionsViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/account_actions_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="36dp"
+      android:paddingTop="28dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_account_actions_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/log_out_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/log_out_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="36dp"
+      android:paddingTop="20dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_log_out"
+      android:onClick="@{(v) -> viewModel.onLogOutClicked()}"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/account_actions_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/topic_review_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/topic_review_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/topic_review_fragment.xml	(date 1584626399000)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android">
+
+  <FrameLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/oppiaBackground">
+
+    <androidx.recyclerview.widget.RecyclerView
+      android:id="@+id/review_recycler_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:clipToPadding="false"
+      android:overScrollMode="never"
+      android:paddingLeft="12dp"
+      android:paddingTop="40dp"
+      android:paddingRight="12dp"
+      android:paddingBottom="@dimen/bottom_white_space" />
+  </FrameLayout>
+</layout>
Index: app/src/main/res/layout-land/profile_edit_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/profile_edit_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/profile_edit_activity.xml	(date 1584626399000)
@@ -0,0 +1,240 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:profile="http://schemas.android.com/tools">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.settings.profile.ProfileEditViewModel" />
+  </data>
+
+  <ScrollView
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_margin="0dp"
+    android:padding="0dp">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/profileEditBackground"
+      android:clipToPadding="false">
+
+      <LinearLayout
+        android:id="@+id/linearLayout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:clipToPadding="false"
+        android:orientation="vertical"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/profile_edit_main">
+
+        <View
+          android:layout_width="match_parent"
+          android:layout_height="1dp"
+          android:background="@color/grey" />
+
+        <Button
+          android:id="@+id/profile_rename_button"
+          style="?android:attr/borderlessButtonStyle"
+          android:layout_width="match_parent"
+          android:layout_height="48dp"
+          android:background="@color/white"
+          android:fontFamily="sans-serif"
+          android:gravity="start|center_vertical"
+          android:paddingStart="36dp"
+          android:text="@string/profile_edit_rename"
+          android:textAllCaps="false"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="16sp" />
+
+        <View
+          android:layout_width="match_parent"
+          android:layout_height="1dp"
+          android:background="@color/grey" />
+
+        <Button
+          android:id="@+id/profile_reset_button"
+          style="?android:attr/borderlessButtonStyle"
+          android:layout_width="match_parent"
+          android:layout_height="48dp"
+          android:background="@color/white"
+          android:fontFamily="sans-serif"
+          android:gravity="start|center_vertical"
+          android:paddingStart="36dp"
+          android:text="@string/profile_edit_reset"
+          android:textAllCaps="false"
+          android:textColor="@color/oppiaPrimaryText"
+          android:textSize="16dp" />
+
+        <View
+          android:layout_width="match_parent"
+          android:layout_height="1dp"
+          android:background="@color/grey" />
+
+        <LinearLayout
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:orientation="vertical"
+          android:visibility="@{viewModel.profile.isAdmin ? View.GONE : View.VISIBLE}">
+
+          <androidx.constraintlayout.widget.ConstraintLayout
+            android:id="@+id/profile_edit_allow_download_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/white"
+            android:paddingStart="36dp"
+            android:paddingTop="12dp"
+            android:paddingEnd="16dp"
+            android:paddingBottom="24dp">
+
+            <LinearLayout
+              android:id="@+id/linearLayout2"
+              android:layout_width="0dp"
+              android:layout_height="wrap_content"
+              android:layout_marginEnd="24dp"
+              android:orientation="vertical"
+              app:layout_constraintBottom_toBottomOf="parent"
+              app:layout_constraintEnd_toStartOf="@id/profile_edit_allow_download_switch"
+              app:layout_constraintStart_toStartOf="parent"
+              app:layout_constraintTop_toTopOf="parent">
+
+              <TextView
+                android:id="@+id/profile_edit_allow_download_heading"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:fontFamily="sans-serif"
+                android:text="@string/profile_edit_allow_download_heading"
+                android:textColor="@color/oppiaPrimaryText"
+                android:textSize="16dp" />
+
+              <TextView
+                android:id="@+id/profile_edit_allow_download_sub"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:fontFamily="sans-serif"
+                android:text="@string/profile_edit_allow_download_sub"
+                android:textSize="14sp" />
+            </LinearLayout>
+
+            <Switch
+              android:id="@+id/profile_edit_allow_download_switch"
+              android:layout_width="wrap_content"
+              android:layout_height="wrap_content"
+              android:layout_marginTop="4dp"
+              android:layout_marginEnd="24dp"
+              app:layout_constraintEnd_toEndOf="parent"
+              app:layout_constraintTop_toTopOf="parent" />
+          </androidx.constraintlayout.widget.ConstraintLayout>
+
+          <View
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:background="@color/grey" />
+        </LinearLayout>
+      </LinearLayout>
+
+      <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="24dp"
+        android:layout_marginBottom="8dp"
+        android:clipToPadding="false"
+        android:orientation="vertical"
+        android:visibility="@{viewModel.profile.isAdmin ? View.GONE : View.VISIBLE}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/linearLayout"
+        app:layout_constraintVertical_bias="1.0">
+
+        <View
+          android:layout_width="match_parent"
+          android:layout_height="1dp"
+          android:background="@color/grey" />
+
+        <Button
+          android:id="@+id/profile_delete_button"
+          style="?android:attr/borderlessButtonStyle"
+          android:layout_width="match_parent"
+          android:layout_height="48dp"
+          android:background="@color/white"
+          android:fontFamily="sans-serif"
+          android:gravity="start|center_vertical"
+          android:paddingStart="36dp"
+          android:text="@string/profile_edit_delete"
+          android:textAllCaps="false"
+          android:textColor="@color/red"
+          android:textSize="16sp" />
+
+        <View
+          android:layout_width="match_parent"
+          android:layout_height="1dp"
+          android:background="@color/grey" />
+      </LinearLayout>
+
+      <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/profile_edit_main"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:clipToPadding="false"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <LinearLayout
+          android:layout_width="wrap_content"
+          android:layout_height="wrap_content"
+          android:layout_marginStart="24dp"
+          android:layout_marginEnd="8dp"
+          android:orientation="vertical"
+          app:layout_constraintBottom_toBottomOf="@id/profile_edit_image"
+          app:layout_constraintEnd_toEndOf="parent"
+          app:layout_constraintHorizontal_bias="0.0"
+          app:layout_constraintStart_toEndOf="@id/profile_edit_image"
+          app:layout_constraintTop_toTopOf="@id/profile_edit_image">
+
+          <TextView
+            android:id="@+id/profile_edit_name"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:fontFamily="sans-serif-medium"
+            android:maxLines="1"
+            android:text="@{viewModel.profile.name}"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="20sp"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+          <TextView
+            android:id="@+id/profile_edit_created"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:fontFamily="sans-serif"
+            android:maxLines="1"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="16sp"
+            profile:created="@{viewModel.profile.dateCreatedTimestampMs}" />
+        </LinearLayout>
+
+        <de.hdodenhof.circleimageview.CircleImageView
+          android:id="@+id/profile_edit_image"
+          android:layout_width="90dp"
+          android:layout_height="90dp"
+          android:layout_marginStart="72dp"
+          android:layout_marginTop="32dp"
+          android:layout_marginBottom="36dp"
+          app:layout_constraintBottom_toBottomOf="parent"
+          app:layout_constraintStart_toStartOf="parent"
+          app:layout_constraintTop_toTopOf="parent"
+          profile:src="@{viewModel.profile.avatar}" />
+      </androidx.constraintlayout.widget.ConstraintLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </ScrollView>
+</layout>
Index: app/src/main/res/layout-land/app_version_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/app_version_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/app_version_fragment.xml	(date 1584626399000)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.appversion.AppVersionViewModel" />
+  </data>
+
+  <FrameLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="match_parent"
+      android:background="@color/appVersionBackground">
+
+      <TextView
+        android:id="@+id/app_version_text_view"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/selector_app_version"
+        android:fontFamily="sans-serif"
+        android:paddingStart="36dp"
+        android:paddingTop="20dp"
+        android:paddingEnd="36dp"
+        android:paddingBottom="20dp"
+        android:text="@{@string/app_version_name(viewModel.versionName)}"
+        android:textColor="@color/oppiaPrimaryTextDark"
+        android:textSize="16sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <ImageView
+        android:id="@+id/app_info_image_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="36dp"
+        android:src="@drawable/ic_info_icon_gray_24dp"
+        app:layout_constraintEnd_toStartOf="@id/app_last_update_date_text_view"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="@id/app_last_update_date_text_view" />
+
+      <TextView
+        android:id="@+id/app_last_update_date_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="12dp"
+        android:layout_marginTop="28dp"
+        android:layout_marginEnd="36dp"
+        android:fontFamily="sans-serif"
+        android:text="@{@string/app_last_update_date(viewModel.lastUpdateDate)}"
+        android:textColor="@color/oppiaSecondaryText"
+        android:textSize="12sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toEndOf="@id/app_info_image_view"
+        app:layout_constraintTop_toBottomOf="@id/app_version_text_view" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <View
+      android:id="@+id/app_version_shadow_view"
+      android:layout_width="match_parent"
+      android:layout_height="4dp"
+      android:layout_gravity="top"
+      android:background="@drawable/toolbar_drop_shadow" />
+  </FrameLayout>
+</layout>
Index: app/src/main/res/layout-land/story_header_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/story_header_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/story_header_view.xml	(date 1584626399000)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.story.storyitemviewmodel.StoryHeaderViewModel" />
+  </data>
+
+  <TextView
+    android:id="@+id/story_progress_chapter_completed_text"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_marginStart="76dp"
+    android:layout_marginTop="32dp"
+    android:layout_marginEnd="72dp"
+    android:layout_marginBottom="8dp"
+    android:fontFamily="sans-serif-medium"
+    android:text="@{@plurals/story_total_chapters(viewModel.totalChapters, viewModel.completedChapters, viewModel.totalChapters)}"
+    android:textColor="@color/oppiaPrimaryText"
+    android:textSize="18sp"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent" />
+</layout>
Index: app/src/main/res/layout-land/onboarding_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/onboarding_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/onboarding_fragment.xml	(date 1584626399000)
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="presenter"
+      type="org.oppia.app.onboarding.OnboardingFragmentPresenter" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.onboarding.OnboardingViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/oppiaBackgroundYellowIvory">
+
+    <androidx.viewpager.widget.ViewPager
+      android:id="@+id/onboarding_slide_view_pager"
+      android:layout_width="match_parent"
+      android:layout_height="0dp"
+      android:layout_marginBottom="0dp"
+      android:overScrollMode="never"
+      android:scrollbars="none"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent"/>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/get_started_container"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:paddingStart="56dp"
+      android:paddingEnd="28dp"
+      android:paddingTop="206dp"
+      android:visibility="@{viewModel.slideNumber == (viewModel.totalNumberOfSlides - 1) ? View.VISIBLE: View.GONE, default=gone}"
+      app:layout_constraintBottom_toBottomOf="@id/bottom_container"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintTop_toTopOf="@+id/onboarding_slide_view_pager">
+
+      <Button
+        android:id="@+id/get_started_button"
+        android:layout_width="291dp"
+        android:layout_height="40dp"
+        android:background="@color/colorPrimary"
+        android:fontFamily="sans-serif-medium"
+        android:minHeight="48dp"
+        android:onClick="@{(v) -> presenter.clickOnGetStarted()}"
+        android:text="@string/get_started"
+        android:textColor="@color/white"
+        android:textSize="14sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/bottom_container"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:paddingStart="8dp"
+      android:paddingEnd="8dp"
+      android:background="@android:color/transparent"
+      android:visibility="@{viewModel.slideNumber != (viewModel.totalNumberOfSlides - 1) ? View.VISIBLE: View.INVISIBLE, default=visible}"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent">
+
+      <LinearLayout
+        android:id="@+id/slide_dots_container"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <TextView
+        android:id="@+id/skip_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:fontFamily="sans-serif-medium"
+        android:gravity="center"
+        android:minHeight="48dp"
+        android:onClick="@{(v) -> presenter.clickOnSkip()}"
+        android:paddingStart="8dp"
+        android:paddingEnd="8dp"
+        android:text="@string/skip"
+        android:textAllCaps="true"
+        android:textColor="@color/colorPrimary"
+        android:textSize="14sp"
+        app:layout_constraintBottom_toBottomOf="@+id/slide_dots_container"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="@+id/slide_dots_container" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/administrator_controls_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/administrator_controls_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/administrator_controls_fragment.xml	(date 1584626399000)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.AdministratorControlsViewModel" />
+  </data>
+
+  <androidx.recyclerview.widget.RecyclerView
+    android:id="@+id/administrator_controls_list"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/mid_grey_30"
+    android:clipToPadding="false"
+    android:overScrollMode="never"
+    android:paddingBottom="108dp"
+    android:scrollbars="none"
+    app:data="@{viewModel.administratorControlsLiveData}"
+    app:layout_constraintBottom_toBottomOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent" />
+</layout>
Index: app/src/main/res/layout-land/help_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/help_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/help_activity.xml	(date 1584626399000)
@@ -0,0 +1,31 @@
+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/help_activity_drawer_layout"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent">
+
+  <LinearLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <include
+      android:id="@+id/help_activity_toolbar"
+      layout="@layout/toolbar" />
+
+    <FrameLayout
+      android:id="@+id/help_fragment_placeholder"
+      android:layout_width="match_parent"
+      android:layout_height="match_parent" />
+  </LinearLayout>
+
+  <fragment
+    android:id="@+id/help_activity_fragment_navigation_drawer"
+    android:name="org.oppia.app.drawer.NavigationDrawerFragment"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_gravity="start"
+    app:layout="@layout/drawer_fragment"
+    tools:layout="@layout/drawer_fragment" />
+</androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/res/layout-land/story_text_size_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/story_text_size_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/story_text_size_activity.xml	(date 1584626399000)
@@ -0,0 +1,121 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools">
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/story_list_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/story_text_size_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@string/title_story_text_size"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      android:background="@color/profileEditBackground"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintHorizontal_bias="0.0"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/story_list_app_bar_layout"
+      app:layout_constraintVertical_bias="1.0">
+
+      <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:orientation="vertical">
+
+        <TextView
+          android:id="@+id/preview_textview"
+          android:layout_width="match_parent"
+          android:layout_height="116dp"
+          android:fontFamily="sans-serif"
+          android:gravity="center"
+          android:text="@string/story_text_will_look_like_this" />
+
+        <View
+          android:layout_width="match_parent"
+          android:layout_height="1dp"
+          android:background="@drawable/toolbar_drop_shadow" />
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:background="@color/white"
+          android:orientation="horizontal">
+
+          <TextView
+            android:id="@+id/story_text_size_small_textview"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="168dp"
+            android:layout_marginTop="32dp"
+            android:layout_marginBottom="32dp"
+            android:gravity="center"
+            android:text="@string/constant_string_for_text_size"
+            android:textSize="16sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+          <SeekBar
+            android:id="@+id/story_text_size_seekBar"
+            android:layout_width="match_parent"
+            android:layout_height="12dp"
+            android:layout_marginStart="192dp"
+            android:layout_marginTop="36dp"
+            android:layout_marginEnd="204dp"
+            android:layout_marginBottom="36dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toStartOf="@+id/story_text_size_big_textview"
+            app:layout_constraintStart_toEndOf="@+id/story_text_size_small_textview"
+            app:layout_constraintTop_toTopOf="parent" />
+
+          <TextView
+            android:id="@+id/story_text_size_big_textview"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="32dp"
+            android:layout_marginEnd="168dp"
+            android:layout_marginBottom="32dp"
+            android:fontFamily="sans-serif"
+            android:gravity="center"
+            android:text="@string/constant_string_for_text_size"
+            android:textSize="28sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+      </LinearLayout>
+
+      <View
+        android:id="@+id/story_text_size_toolbar_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="12dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/profile_rename_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/profile_rename_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/profile_rename_activity.xml	(date 1584626399000)
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:profile="http://schemas.android.com/tools">
+  <data>
+    <variable
+      name="viewModel"
+      type="org.oppia.app.settings.profile.ProfileRenameViewModel" />
+  </data>
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/profileEditBackground">
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:paddingBottom="32dp"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <org.oppia.app.profile.ProfileInputView
+        android:id="@+id/input_name"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="96dp"
+        android:layout_marginEnd="96dp"
+        app:label="@string/profile_rename_label"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        profile:error="@{viewModel.nameErrorMsg}" />
+      <Button
+        android:id="@+id/profile_rename_save_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/profile_rename_save"
+        android:textAllCaps="true"
+        android:layout_marginEnd="120dp"
+        style="@style/StateButtonActive"
+        android:layout_marginTop="16dp"
+        app:layout_constraintTop_toBottomOf="@id/input_name"
+        app:layout_constraintEnd_toEndOf="parent"/>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/administrator_controls_download_permissions_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/administrator_controls_download_permissions_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/administrator_controls_download_permissions_view.xml	(date 1584626399000)
@@ -0,0 +1,153 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsDownloadPermissionsViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/download_permissions_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="36dp"
+      android:paddingTop="28dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_download_permissions_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/topic_update_on_wifi_constraint_layout"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/topic_update_on_wifi_constraint_layout"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:paddingStart="36dp"
+      android:paddingTop="20dp"
+      android:paddingEnd="36dp"
+      android:paddingBottom="20dp"
+      app:layout_constraintBottom_toTopOf="@id/view_divider"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/download_permissions_text_view">
+
+      <TextView
+        android:id="@+id/topic_update_on_wifi_title_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:paddingBottom="4dp"
+        android:text="@string/administrator_controls_update_on_wifi_title"
+        android:textColor="@color/oppiaPrimaryTextDark"
+        android:textSize="16sp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <TextView
+        android:id="@+id/topic_update_on_wifi_description_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:text="@string/administrator_controls_update_on_wifi_message"
+        android:textColor="@color/divider"
+        android:textSize="14sp"
+        app:layout_constraintEnd_toStartOf="@id/topic_update_on_wifi_switch"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/topic_update_on_wifi_title_text_view" />
+
+      <androidx.appcompat.widget.SwitchCompat
+        android:id="@+id/topic_update_on_wifi_switch"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="40dp"
+        android:checked="@{viewModel.isTopicWifiUpdatePermission}"
+        android:onCheckedChanged="@{(switch, checked) -> viewModel.onTopicWifiUpdatePermissionChanged(checked)}"
+        android:theme="@style/SwitchCompatTheme"
+        app:layout_constraintBottom_toBottomOf="@id/topic_update_on_wifi_description_text_view"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/topic_update_on_wifi_description_text_view"
+        app:layout_constraintTop_toTopOf="@id/topic_update_on_wifi_title_text_view" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <View
+      android:id="@+id/view_divider"
+      android:layout_width="match_parent"
+      android:layout_height="2dp"
+      android:background="@color/mid_grey_30"
+      app:layout_constraintBottom_toTopOf="@id/auto_update_topic_constraint_layout"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/topic_update_on_wifi_constraint_layout" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:id="@+id/auto_update_topic_constraint_layout"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:paddingStart="36dp"
+      android:paddingTop="20dp"
+      android:paddingEnd="36dp"
+      android:paddingBottom="20dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/view_divider">
+
+      <TextView
+        android:id="@+id/auto_update_topic_title_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:paddingBottom="4dp"
+        android:text="@string/administrator_controls_auto_update_title"
+        android:textColor="@color/oppiaPrimaryTextDark"
+        android:textSize="16sp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <TextView
+        android:id="@+id/auto_update_topic_description_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:fontFamily="sans-serif"
+        android:text="@string/administrator_controls_auto_update_message"
+        android:textColor="@color/divider"
+        android:textSize="14sp"
+        app:layout_constraintEnd_toStartOf="@id/auto_update_topic_switch"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/auto_update_topic_title_text_view" />
+
+      <androidx.appcompat.widget.SwitchCompat
+        android:id="@+id/auto_update_topic_switch"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="40dp"
+        android:checked="@{viewModel.isTopicAutoUpdatePermission}"
+        android:onCheckedChanged="@{(switch, checked) -> viewModel.onTopicAutoUpdatePermissionChanged(checked)}"
+        android:theme="@style/SwitchCompatTheme"
+        app:layout_constraintBottom_toBottomOf="@id/auto_update_topic_description_text_view"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/auto_update_topic_description_text_view"
+        app:layout_constraintTop_toTopOf="@id/auto_update_topic_title_text_view" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/topic_info_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/topic_info_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/topic_info_fragment.xml	(date 1584626399000)
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.info.TopicInfoViewModel" />
+  </data>
+
+  <ScrollView
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white"
+    android:overScrollMode="never"
+    android:scrollbars="none">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:paddingTop="24dp"
+      android:paddingBottom="24dp">
+
+      <TextView
+        android:id="@+id/topic_name_text_view"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="72dp"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="72dp"
+        android:fontFamily="sans-serif"
+        android:text="@{viewModel.topic.name}"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="24sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+      <TextView
+        android:id="@+id/story_count_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="72dp"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="72dp"
+        android:fontFamily="sans-serif"
+        android:text="@{@plurals/story_count(viewModel.topic.storyCount, viewModel.topic.storyCount)}"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="16sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/topic_name_text_view" />
+
+      <TextView
+        android:id="@+id/topic_description_text_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="72dp"
+        android:layout_marginTop="16dp"
+        android:layout_marginEnd="72dp"
+        android:fontFamily="sans-serif"
+        android:gravity="start"
+        android:text="@{viewModel.topicDescription}"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="16sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/story_count_text_view" />
+
+      <ImageView
+        android:id="@+id/download_status_image_view"
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:layout_marginStart="72dp"
+        android:layout_marginTop="24dp"
+        android:layout_marginEnd="72dp"
+        android:layout_marginBottom="32dp"
+        android:src="@{viewModel.downloadStatusIndicatorDrawableResourceId, default=@drawable/ic_available_offline_primary_24dp}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/topic_description_text_view" />
+
+      <TextView
+        android:id="@+id/download_story_count_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="12dp"
+        android:fontFamily="sans-serif"
+        android:gravity="center_vertical"
+        android:text="@string/topic_downloaded"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="18sp"
+        app:layout_constraintBottom_toBottomOf="@+id/download_status_image_view"
+        app:layout_constraintStart_toEndOf="@+id/download_status_image_view"
+        app:layout_constraintTop_toTopOf="@+id/download_status_image_view" />
+
+      <TextView
+        android:id="@+id/download_size_text_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginEnd="72dp"
+        android:fontFamily="sans-serif"
+        android:text="@{String.format(@string/topic_download_text, viewModel.getTopicSizeWithUnit())}"
+        android:textColor="@color/oppiaPrimaryText"
+        android:textSize="18sp"
+        android:textStyle="italic"
+        app:layout_constraintBottom_toBottomOf="@+id/download_status_image_view"
+        app:layout_constraintStart_toEndOf="@+id/download_story_count_text_view"
+        app:layout_constraintTop_toTopOf="@+id/download_status_image_view" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+  </ScrollView>
+</layout>
Index: app/src/main/res/layout-land/story_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/story_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/story_fragment.xml	(date 1584626399000)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+    <variable
+      name="viewModel"
+      type="org.oppia.app.story.StoryViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+
+    <com.google.android.material.appbar.AppBarLayout
+      android:id="@+id/topic_app_bar_layout"
+      android:layout_width="0dp"
+      android:layout_height="wrap_content"
+      android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent">
+
+      <androidx.appcompat.widget.Toolbar
+        android:id="@+id/story_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:fontFamily="sans-serif"
+        android:minHeight="?attr/actionBarSize"
+        android:textSize="20sp"
+        app:navigationContentDescription="@string/go_to_previous_page"
+        app:navigationIcon="?attr/homeAsUpIndicator"
+        app:title="@{viewModel.storyNameLiveData}"
+        app:titleTextColor="@color/white" />
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/topic_app_bar_layout">
+
+      <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/story_chapter_list"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:overScrollMode="never"
+        android:paddingBottom="60dp"
+        android:scrollbars="none"
+        app:data="@{viewModel.storyChapterLiveData}"
+        tools:listitem="@layout/story_chapter_view" />
+
+      <View
+        android:id="@+id/story_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+
+    </FrameLayout>
+
+  </androidx.constraintlayout.widget.ConstraintLayout>
+
+</layout>
Index: app/src/main/res/layout-land/administrator_controls_profile_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/administrator_controls_profile_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/administrator_controls_profile_view.xml	(date 1584626399000)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsProfileViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/profile_management_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="36dp"
+      android:paddingTop="28dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_profile_management_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/edit_profiles_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/edit_profiles_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="36dp"
+      android:paddingTop="20dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:onClick="@{(v) -> viewModel.onEditProfilesClicked()}"
+      android:text="@string/administrator_controls_edit_profiles"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/profile_management_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/administrator_controls_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/administrator_controls_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/administrator_controls_activity.xml	(date 1584626399000)
@@ -0,0 +1,32 @@
+<androidx.drawerlayout.widget.DrawerLayout
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:id="@+id/administrator_controls_activity_drawer_layout"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent">
+
+  <LinearLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <include
+      android:id="@+id/administrator_controls_activity_toolbar"
+      layout="@layout/toolbar" />
+
+    <FrameLayout
+      android:id="@+id/administrator_controls_fragment_placeholder"
+      android:layout_width="match_parent"
+      android:layout_height="match_parent" />
+  </LinearLayout>
+
+  <fragment
+    android:id="@+id/administrator_controls_activity_fragment_navigation_drawer"
+    android:name="org.oppia.app.drawer.NavigationDrawerFragment"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_gravity="start"
+    app:layout="@layout/drawer_fragment"
+    tools:layout="@layout/drawer_fragment" />
+</androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/res/layout/continue_playing_fragment.xml
===================================================================
--- app/src/main/res/layout/continue_playing_fragment.xml	(date 1584621433000)
+++ app/src/main/res/layout-land/recently_played_fragment.xml	(date 1584626399000)
@@ -2,6 +2,13 @@
 <layout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto">
 
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.home.recentlyplayed.RecentlyPlayedViewModel" />
+  </data>
+
   <androidx.constraintlayout.widget.ConstraintLayout
     android:layout_width="match_parent"
     android:layout_height="match_parent"
@@ -17,7 +24,7 @@
       app:layout_constraintTop_toTopOf="parent">
 
       <androidx.appcompat.widget.Toolbar
-        android:id="@+id/continue_playing_toolbar"
+        android:id="@+id/recently_played_toolbar"
         android:layout_width="match_parent"
         android:layout_height="?attr/actionBarSize"
         android:background="?attr/colorPrimary"
@@ -26,7 +33,7 @@
         android:textSize="20sp"
         app:navigationContentDescription="@string/go_to_previous_page"
         app:navigationIcon="?attr/homeAsUpIndicator"
-        app:title="@string/continue_playing_activity"
+        app:title="@string/recently_played_activity"
         app:titleTextColor="@color/white" />
     </com.google.android.material.appbar.AppBarLayout>
 
@@ -47,10 +54,11 @@
         android:paddingTop="8dp"
         android:paddingBottom="172dp"
         android:scrollbars="none"
+        app:data="@{viewModel.ongoingStoryLiveData}"
         app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
 
       <View
-        android:id="@+id/continue_playing__shadow_view"
+        android:id="@+id/recently_played__shadow_view"
         android:layout_width="match_parent"
         android:layout_height="6dp"
         android:background="@drawable/toolbar_drop_shadow" />
Index: app/src/main/res/layout-land/app_version_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/app_version_activity.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/app_version_activity.xml	(date 1584626399000)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  tools:context=".administratorcontrols.appversion.AppVersionActivity">
+
+  <com.google.android.material.appbar.AppBarLayout
+    android:id="@+id/app_version_app_bar_layout"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toTopOf="parent">
+
+    <androidx.appcompat.widget.Toolbar
+      android:id="@+id/app_version_toolbar"
+      android:layout_width="match_parent"
+      android:layout_height="?attr/actionBarSize"
+      android:background="@color/oppiaPrimaryDark"
+      android:textSize="20sp"
+      app:navigationContentDescription="@string/go_to_previous_page"
+      app:navigationIcon="?attr/homeAsUpIndicator"
+      app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+      app:title="@string/administrator_controls_app_version"
+      app:titleTextColor="@color/white" />
+  </com.google.android.material.appbar.AppBarLayout>
+
+  <FrameLayout
+    android:id="@+id/app_version_fragment_placeholder"
+    android:layout_width="match_parent"
+    android:layout_height="0dp"
+    app:layout_constraintBottom_toBottomOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintTop_toBottomOf="@id/app_version_app_bar_layout"
+    app:layout_constraintVertical_weight="1" />
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout-land/administrator_controls_general_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/administrator_controls_general_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/administrator_controls_general_view.xml	(date 1584626399000)
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsGeneralViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/general_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="36dp"
+      android:paddingTop="24dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_general_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/edit_account_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/edit_account_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="36dp"
+      android:paddingTop="20dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_edit_account"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/general_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/topic_practice_header_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/topic_practice_header_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/topic_practice_header_view.xml	(date 1584626399000)
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeHeaderViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginStart="32dp"
+    android:layout_marginTop="32dp"
+    android:layout_marginEnd="24dp"
+    android:layout_marginBottom="8dp"
+    android:paddingStart="48dp"
+    android:paddingEnd="48dp">
+
+    <TextView
+      android:id="@+id/master_skills_text_view"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:fontFamily="sans-serif-medium"
+      android:text="@string/topic_practice_master_these_skills"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="20sp"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/skills_description_text_view"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="8dp"
+      android:fontFamily="sans-serif"
+      android:text="@string/topic_practice_skills_description"
+      android:textColor="@color/oppiaSecondaryText"
+      android:textSize="16sp"
+      app:layout_constraintStart_toStartOf="@+id/master_skills_text_view"
+      app:layout_constraintTop_toBottomOf="@+id/master_skills_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/topic_practice_footer_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/topic_practice_footer_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/topic_practice_footer_view.xml	(date 1584626399000)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="isSubmitButtonActive"
+      type="Boolean" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeFooterViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:paddingStart="96dp"
+    android:paddingEnd="96dp">
+
+    <Button
+      android:id="@+id/topic_practice_start_button"
+      style="@style/StateButtonInactive"
+      android:layout_width="160dp"
+      android:layout_height="wrap_content"
+      android:layout_marginTop="36dp"
+      android:background="@{isSubmitButtonActive ? @drawable/state_button_primary_background :@drawable/start_button_transparent_background}"
+      android:clickable="@{isSubmitButtonActive}"
+      android:fontFamily="sans-serif-medium"
+      android:minHeight="36dp"
+      android:text="@string/topic_practice_start"
+      android:textColor="@{isSubmitButtonActive ? @color/white : @color/submitButtonInactive}"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/org/oppia/app/home/continueplaying/OngoingStoryViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/OngoingStoryViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/OngoingStoryViewModel.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.home.continueplaying
+package org.oppia.app.home.recentlyplayed
 
 import android.view.View
 import androidx.lifecycle.ViewModel
@@ -10,7 +10,7 @@
 class OngoingStoryViewModel(
   val ongoingStory: PromotedStory,
   private val ongoingStoryClickListener: OngoingStoryClickListener
-) : ContinuePlayingItemViewModel() {
+) : RecentlyPlayedItemViewModel() {
   fun clickOnOngoingStoryTile(@Suppress("UNUSED_PARAMETER") v: View) {
     ongoingStoryClickListener.onOngoingStoryClicked(ongoingStory)
   }
Index: app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedViewModel.kt	(date 1584626399000)
@@ -0,0 +1,63 @@
+package org.oppia.app.home.recentlyplayed
+
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.R
+import org.oppia.app.model.OngoingStoryList
+import org.oppia.app.model.ProfileId
+import org.oppia.domain.topic.TopicListController
+import org.oppia.util.data.AsyncResult
+import javax.inject.Inject
+
+// TODO(#297): Add download status information to promoted-story-card.
+
+/** [ViewModel] for displaying a promoted story. */
+class RecentlyPlayedViewModel @Inject constructor(
+  private val fragment: Fragment,
+  private val topicListController: TopicListController
+) : RecentlyPlayedItemViewModel() {
+
+  private val itemList: MutableList<RecentlyPlayedItemViewModel> = ArrayList()
+
+  private lateinit var profileId: ProfileId
+
+  fun setProfileId(internalProfileId: Int) {
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+  }
+
+  private val ongoingStoryListSummaryResultLiveData: LiveData<AsyncResult<OngoingStoryList>> by lazy {
+    topicListController.getOngoingStoryList(profileId)
+  }
+
+  val ongoingStoryLiveData: LiveData<List<RecentlyPlayedItemViewModel>>by lazy {
+    Transformations.map(ongoingStoryListSummaryResultLiveData, ::processOngoingStoryList)
+  }
+
+  private fun processOngoingStoryList(ongoingStoryList: AsyncResult<OngoingStoryList>): List<RecentlyPlayedItemViewModel> {
+    if (ongoingStoryList.isSuccess()) {
+      if (ongoingStoryList.getOrThrow().recentStoryList.isNotEmpty()) {
+        val recentSectionTitleViewModel =
+          SectionTitleViewModel(fragment.getString(R.string.ongoing_story_last_week), false)
+        itemList.add(recentSectionTitleViewModel)
+        for (promotedStory in ongoingStoryList.getOrThrow().recentStoryList) {
+          val ongoingStoryViewModel = OngoingStoryViewModel(promotedStory, fragment as OngoingStoryClickListener)
+          itemList.add(ongoingStoryViewModel)
+        }
+      }
+
+      if (ongoingStoryList.getOrThrow().olderStoryList.isNotEmpty()) {
+        val showDivider = itemList.isNotEmpty()
+        val olderSectionTitleViewModel =
+          SectionTitleViewModel(fragment.getString(R.string.ongoing_story_last_month), showDivider)
+        itemList.add(olderSectionTitleViewModel)
+        for (promotedStory in ongoingStoryList.getOrThrow().olderStoryList) {
+          val ongoingStoryViewModel = OngoingStoryViewModel(promotedStory, fragment as OngoingStoryClickListener)
+          itemList.add(ongoingStoryViewModel)
+        }
+      }
+    }
+    return itemList
+  }
+}
Index: app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,24 @@
+package org.oppia.app.home.recentlyplayed
+
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import javax.inject.Inject
+
+/** The presenter for [RecentlyPlayedActivity]. */
+@ActivityScope
+class RecentlyPlayedActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  fun handleOnCreate(internalProfileId: Int) {
+    activity.setContentView(R.layout.recently_played_activity)
+    if (getRecentlyPlayedFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.recently_played_fragment_placeholder,
+        RecentlyPlayedFragment.newInstance(internalProfileId)
+      ).commitNow()
+    }
+  }
+
+  private fun getRecentlyPlayedFragment(): RecentlyPlayedFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.recently_played_fragment_placeholder) as RecentlyPlayedFragment?
+  }
+}
Index: app/src/main/res/layout-land/topic_practice_subtopic.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/topic_practice_subtopic.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/topic_practice_subtopic.xml	(date 1584626399000)
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="isChecked"
+      type="Boolean" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeSubtopicViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:paddingStart="48dp"
+    android:paddingEnd="48dp"
+    app:barrierDirection="right">
+
+    <androidx.constraintlayout.widget.Barrier
+      android:id="@+id/topic_practice_subtopic_barrier"
+      android:layout_width="wrap_content"
+      android:layout_height="wrap_content"
+      app:barrierDirection="bottom"
+      app:constraint_referenced_ids="subtopic_check_box" />
+
+    <CheckBox
+      android:id="@+id/subtopic_check_box"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="40dp"
+      android:layout_marginTop="16dp"
+      android:button="@drawable/selector_checkbox"
+      android:checked="@{isChecked}"
+      android:fontFamily="sans-serif"
+      android:gravity="top"
+      android:paddingStart="20dp"
+      android:paddingEnd="20dp"
+      android:text="@{viewModel.subtopic.title}"
+      android:textColor="@color/oppiaPrimaryText"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/story_chapter_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/story_chapter_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/story_chapter_view.xml	(date 1584626399000)
@@ -0,0 +1,116 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <import type="org.oppia.app.model.ChapterPlayState" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.story.storyitemviewmodel.StoryChapterSummaryViewModel" />
+  </data>
+
+  <FrameLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <com.google.android.material.card.MaterialCardView
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:layout_marginStart="76dp"
+      android:layout_marginTop="16dp"
+      android:layout_marginEnd="72dp"
+      android:layout_marginBottom="8dp"
+      android:clickable="@{viewModel.chapterSummary.chapterPlayState != ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES}"
+      android:onClick="@{(v) -> viewModel.onExplorationClicked()}"
+      app:cardCornerRadius="4dp"
+      app:cardElevation="@{viewModel.chapterSummary.chapterPlayState != ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES ? @dimen/elevation_4dp : @dimen/elevation_0dp}"
+      app:strokeColor="@{viewModel.chapterSummary.chapterPlayState != ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES ? @color/colorPrimary : @color/chapterCardGreyBorder}"
+      app:strokeWidth="2dp">
+
+      <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:clipToPadding="true"
+        android:contentDescription="@{viewModel.name}">
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:minHeight="116dp"
+          android:orientation="vertical"
+          android:padding="8dp"
+          app:layout_constraintBottom_toBottomOf="parent"
+          app:layout_constraintEnd_toEndOf="parent"
+          app:layout_constraintStart_toStartOf="parent"
+          app:layout_constraintTop_toTopOf="parent">
+
+          <TextView
+            android:id="@+id/chapter_title"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="8dp"
+            android:layout_marginTop="4dp"
+            android:layout_marginEnd="8dp"
+            android:ellipsize="end"
+            android:fontFamily="sans-serif-medium"
+            android:maxLines="2"
+            android:text="@{String.format(@string/chapter_name, (viewModel.index + 1), viewModel.name)}"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="18sp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+          <TextView
+            android:id="@+id/chapter_summary"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="8dp"
+            android:layout_marginTop="8dp"
+            android:layout_marginEnd="8dp"
+            android:layout_marginBottom="4dp"
+            android:ellipsize="end"
+            android:fontFamily="sans-serif"
+            android:maxLines="3"
+            android:text="@{viewModel.summary}"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="16sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/chapter_title"
+            app:layout_constraintVertical_bias="0.0" />
+
+          <ImageView
+            android:id="@+id/chapter_completed_tick"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginEnd="8dp"
+            android:layout_marginBottom="4dp"
+            android:contentDescription="@{String.format(@string/chapter_completed, (viewModel.index + 1), viewModel.name)}"
+            android:src="@drawable/ic_check_24dp"
+            android:visibility="@{viewModel.chapterSummary.chapterPlayState == ChapterPlayState.COMPLETED ? View.VISIBLE : View.GONE}"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/chapter_summary"
+            app:layout_constraintVertical_bias="1.0" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+      </androidx.constraintlayout.widget.ConstraintLayout>
+    </com.google.android.material.card.MaterialCardView>
+
+    <FrameLayout
+      android:layout_width="match_parent"
+      android:layout_height="match_parent"
+      android:layout_marginStart="76dp"
+      android:layout_marginTop="16dp"
+      android:layout_marginEnd="72dp"
+      android:layout_marginBottom="8dp"
+      android:background="@color/chapterCardShadow"
+      android:padding="8dp"
+      android:visibility="@{viewModel.chapterSummary.chapterPlayState == ChapterPlayState.NOT_PLAYABLE_MISSING_PREREQUISITES ? View.VISIBLE : View.INVISIBLE}" />
+  </FrameLayout>
+</layout>
Index: app/src/main/res/layout-land/concept_card_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/concept_card_fragment.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/concept_card_fragment.xml	(date 1584626399000)
@@ -0,0 +1,80 @@
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <import type="android.view.View" />
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.topic.conceptcard.ConceptCardViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/colorConceptCardBackground">
+
+    <androidx.appcompat.widget.Toolbar
+      android:id="@+id/concept_card_toolbar"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/colorConceptToolbarBackground"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent"
+      app:title="@string/concept_card_toolbar_title"
+      app:titleTextColor="@color/white" />
+
+    <FrameLayout
+      android:layout_width="0dp"
+      android:layout_height="0dp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@+id/concept_card_toolbar">
+
+      <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:orientation="vertical">
+
+          <TextView
+            android:id="@+id/concept_card_heading_text"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="28dp"
+            android:layout_marginTop="40dp"
+            android:layout_marginEnd="28dp"
+            android:fontFamily="sans-serif-medium"
+            android:text="@{viewModel.conceptCardLiveData.skillDescription}"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="20sp" />
+
+          <TextView
+            android:id="@+id/concept_card_explanation_text"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="40dp"
+            android:layout_marginTop="28dp"
+            android:layout_marginEnd="40dp"
+            android:fontFamily="sans-serif"
+            android:text="@{viewModel.explanationLiveData}"
+            android:textColor="@color/oppiaPrimaryText"
+            android:textSize="16sp" />
+        </LinearLayout>
+        <!--TODO(#352): Show worked examples in Concept Card.-->
+      </ScrollView>
+
+      <View
+        android:id="@+id/concept_card_shadow_view"
+        android:layout_width="match_parent"
+        android:layout_height="6dp"
+        android:background="@drawable/toolbar_drop_shadow" />
+    </FrameLayout>
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/res/layout-land/administrator_controls_app_information_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/administrator_controls_app_information_view.xml	(date 1584626399000)
+++ app/src/main/res/layout-land/administrator_controls_app_information_view.xml	(date 1584626399000)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto">
+
+  <data>
+
+    <variable
+      name="viewModel"
+      type="org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAppInformationViewModel" />
+  </data>
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+      android:id="@+id/app_information_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/mid_grey_30"
+      android:fontFamily="sans-serif-medium"
+      android:paddingLeft="36dp"
+      android:paddingTop="28dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_app_information_label"
+      android:textColor="@color/colorPrimary"
+      android:textSize="14sp"
+      app:layout_constraintBottom_toTopOf="@id/app_version_text_view"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+      android:id="@+id/app_version_text_view"
+      android:layout_width="match_parent"
+      android:layout_height="wrap_content"
+      android:background="@color/white"
+      android:fontFamily="sans-serif"
+      android:paddingLeft="36dp"
+      android:paddingTop="20dp"
+      android:paddingRight="36dp"
+      android:paddingBottom="20dp"
+      android:text="@string/administrator_controls_app_version"
+      android:onClick="@{(v) -> viewModel.onAppVersionClicked()}"
+      android:textColor="@color/oppiaPrimaryTextDark"
+      android:textSize="16sp"
+      app:layout_constraintBottom_toBottomOf="parent"
+      app:layout_constraintEnd_toEndOf="parent"
+      app:layout_constraintStart_toStartOf="parent"
+      app:layout_constraintTop_toBottomOf="@id/app_information_text_view" />
+  </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,11 @@
+package org.oppia.app.home.recentlyplayed
+
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** The root  [ViewModel] for all individual items that may be displayed in [RecentlyPlayedFragment] [RecyclerView]. */
+abstract class RecentlyPlayedItemViewModel : ObservableViewModel() {
+  enum class ViewType {
+    VIEW_TYPE_SECTION_TITLE_TEXT,
+    VIEW_TYPE_SECTION_STORY_ITEM
+  }
+}
Index: app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedActivity.kt	(date 1584626399000)
@@ -0,0 +1,45 @@
+package org.oppia.app.home.recentlyplayed
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.home.RouteToExplorationListener
+import org.oppia.app.player.exploration.ExplorationActivity
+import javax.inject.Inject
+
+/** Activity for recent stories. */
+class RecentlyPlayedActivity : InjectableAppCompatActivity(), RouteToExplorationListener {
+
+  @Inject lateinit var recentlyPlayedActivityPresenter: RecentlyPlayedActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    val internalProfileId = intent.getIntExtra(RECENTLY_PLAYED_ACTIVITY_INTERNAL_PROFILE_ID_KEY, -1)
+    recentlyPlayedActivityPresenter.handleOnCreate(internalProfileId)
+  }
+
+  companion object {
+    internal const val RECENTLY_PLAYED_ACTIVITY_INTERNAL_PROFILE_ID_KEY = "RecentlyPlayedActivity.internal_profile_id"
+
+    /** Returns a new [Intent] to route to [RecentlyPlayedActivity]. */
+    fun createRecentlyPlayedActivityIntent(context: Context, internalProfileId: Int): Intent {
+      val intent = Intent(context, RecentlyPlayedActivity::class.java)
+      intent.putExtra(RECENTLY_PLAYED_ACTIVITY_INTERNAL_PROFILE_ID_KEY, internalProfileId)
+      return intent
+    }
+  }
+
+  override fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
+    startActivity(
+      ExplorationActivity.createExplorationActivityIntent(
+        this,
+        internalProfileId,
+        topicId,
+        storyId,
+        explorationId
+      )
+    )
+  }
+}
Index: domain/src/test/java/org/oppia/domain/UserAppHistoryControllerTest.kt
===================================================================
--- domain/src/test/java/org/oppia/domain/UserAppHistoryControllerTest.kt	(date 1584621433000)
+++ domain/src/test/java/org/oppia/domain/onboarding/OnboardingFlowControllerTest.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.domain
+package org.oppia.domain.onboarding
 
 import android.app.Application
 import android.content.Context
@@ -32,7 +32,8 @@
 import org.mockito.Mockito.verify
 import org.mockito.junit.MockitoJUnit
 import org.mockito.junit.MockitoRule
-import org.oppia.app.model.UserAppHistory
+import org.oppia.app.model.OnboardingFlow
+import org.oppia.data.persistence.PersistentCacheStore
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
@@ -46,10 +47,10 @@
 import javax.inject.Singleton
 import kotlin.coroutines.EmptyCoroutineContext
 
-/** Tests for [UserAppHistoryController]. */
+/** Tests for [OnboardingFlowController]. */
 @RunWith(AndroidJUnit4::class)
 @Config(manifest = Config.NONE)
-class UserAppHistoryControllerTest {
+class OnboardingFlowControllerTest {
   @Rule
   @JvmField
   val mockitoRule: MockitoRule = MockitoJUnit.rule()
@@ -58,7 +59,10 @@
   @JvmField
   val executorRule = InstantTaskExecutorRule()
 
-  @Inject lateinit var userAppHistoryController: UserAppHistoryController
+  @Inject
+  lateinit var onboardingFlowController: OnboardingFlowController
+  @Inject
+  lateinit var cacheFactory: PersistentCacheStore.Factory
 
   @Inject
   @field:TestDispatcher
@@ -68,15 +72,12 @@
     EmptyCoroutineContext + testDispatcher
   }
 
-  @Mock
-  lateinit var mockAppHistoryObserver: Observer<AsyncResult<UserAppHistory>>
+  @Mock lateinit var mockOnboardingObserver: Observer<AsyncResult<OnboardingFlow>>
 
-  @Captor
-  lateinit var appHistoryResultCaptor: ArgumentCaptor<AsyncResult<UserAppHistory>>
+  @Captor lateinit var onboardingResultCaptor: ArgumentCaptor<AsyncResult<OnboardingFlow>>
 
   // https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/
-  @ObsoleteCoroutinesApi
-  private val testThread = newSingleThreadContext("TestMain")
+  @ObsoleteCoroutinesApi private val testThread = newSingleThreadContext("TestMain")
 
   @Before
   @ExperimentalCoroutinesApi
@@ -95,7 +96,7 @@
   }
 
   private fun setUpTestApplicationComponent() {
-    DaggerUserAppHistoryControllerTest_TestApplicationComponent.builder()
+    DaggerOnboardingFlowControllerTest_TestApplicationComponent.builder()
       .setApplication(ApplicationProvider.getApplicationContext())
       .build()
       .inject(this)
@@ -103,70 +104,70 @@
 
   @Test
   @ExperimentalCoroutinesApi
-  fun testController_providesInitialLiveData_thatIndicatesUserHasNotOpenedTheApp() = runBlockingTest(coroutineContext) {
-    val appHistory = userAppHistoryController.getUserAppHistory()
-    advanceUntilIdle()
-    appHistory.observeForever(mockAppHistoryObserver)
+  fun testController_providesInitialLiveData_indicatesUserHasNotOnboardedTheApp() =
+    runBlockingTest(coroutineContext) {
+      val onboarding = onboardingFlowController.getOnboardingFlow()
+      advanceUntilIdle()
+      onboarding.observeForever(mockOnboardingObserver)
 
-    verify(mockAppHistoryObserver, atLeastOnce()).onChanged(appHistoryResultCaptor.capture())
-    assertThat(appHistoryResultCaptor.value.isSuccess()).isTrue()
-    assertThat(appHistoryResultCaptor.value.getOrThrow().alreadyOpenedApp).isFalse()
-  }
+      verify(mockOnboardingObserver, atLeastOnce()).onChanged(onboardingResultCaptor.capture())
+      assertThat(onboardingResultCaptor.value.isSuccess()).isTrue()
+      assertThat(onboardingResultCaptor.value.getOrThrow().alreadyOnboardedApp).isFalse()
+    }
 
   @Test
   @ExperimentalCoroutinesApi
-  fun testControllerObserver_observedAfterSettingAppOpened_providesLiveData_userDidNotOpenApp()
-      = runBlockingTest(coroutineContext) {
-    val appHistory = userAppHistoryController.getUserAppHistory()
+  fun testControllerObserver_observedAfterSettingAppOnboarded_providesLiveData_userDidNotOnboardApp() =
+    runBlockingTest(coroutineContext) {
+      val onboarding = onboardingFlowController.getOnboardingFlow()
 
-    appHistory.observeForever(mockAppHistoryObserver)
-    userAppHistoryController.markUserOpenedApp()
-    advanceUntilIdle()
+      onboarding.observeForever(mockOnboardingObserver)
+      onboardingFlowController.markOnboardingFlowCompleted()
+      advanceUntilIdle()
 
-    // The result should not indicate that the user opened the app because markUserOpenedApp does not notify observers
-    // of the change.
-    verify(mockAppHistoryObserver, atLeastOnce()).onChanged(appHistoryResultCaptor.capture())
-    assertThat(appHistoryResultCaptor.value.isSuccess()).isTrue()
-    assertThat(appHistoryResultCaptor.value.getOrThrow().alreadyOpenedApp).isFalse()
-  }
+      // The result should not indicate that the user onboarded the app because markUserOnboardedApp does not notify observers
+      // of the change.
+      verify(mockOnboardingObserver, atLeastOnce()).onChanged(onboardingResultCaptor.capture())
+      assertThat(onboardingResultCaptor.value.isSuccess()).isTrue()
+      assertThat(onboardingResultCaptor.value.getOrThrow().alreadyOnboardedApp).isFalse()
+    }
 
   @Test
   @ExperimentalCoroutinesApi
-  fun testController_settingAppOpened_observedNewController_userOpenedApp()
-      = runBlockingTest(coroutineContext) {
-    userAppHistoryController.markUserOpenedApp()
+  fun testController_settingAppOnboarded_observedNewController_userOnboardedApp() = runBlockingTest(coroutineContext) {
+    onboardingFlowController.markOnboardingFlowCompleted()
     advanceUntilIdle()
 
     // Create the controller by creating another singleton graph and injecting it (simulating the app being recreated).
     setUpTestApplicationComponent()
-    val appHistory = userAppHistoryController.getUserAppHistory()
-    appHistory.observeForever(mockAppHistoryObserver)
+    val onboarding = onboardingFlowController.getOnboardingFlow()
+    onboarding.observeForever(mockOnboardingObserver)
     advanceUntilIdle()
 
-    // The app should be considered open since a new LiveData instance was observed after marking the app as opened.
-    verify(mockAppHistoryObserver, atLeastOnce()).onChanged(appHistoryResultCaptor.capture())
-    assertThat(appHistoryResultCaptor.value.isSuccess()).isTrue()
-    assertThat(appHistoryResultCaptor.value.getOrThrow().alreadyOpenedApp).isTrue()
+    // The app should be considered onboarded since a new LiveData instance was observed after marking the app as onboarded.
+    verify(mockOnboardingObserver, atLeastOnce()).onChanged(onboardingResultCaptor.capture())
+    assertThat(onboardingResultCaptor.value.isSuccess()).isTrue()
+    assertThat(onboardingResultCaptor.value.getOrThrow().alreadyOnboardedApp).isTrue()
   }
 
   @Test
   @ExperimentalCoroutinesApi
-  fun testController_openedApp_cleared_observeNewController_userDidNotOpenApp() = runBlockingTest(coroutineContext) {
-    userAppHistoryController.markUserOpenedApp()
-    advanceUntilIdle()
-
-    // Clear, then recreate another controller.
-    userAppHistoryController.clearUserAppHistory()
-    setUpTestApplicationComponent()
-    val appHistory = userAppHistoryController.getUserAppHistory()
-    appHistory.observeForever(mockAppHistoryObserver)
-    advanceUntilIdle()
-
-    // The app should be considered not yet opened since the previous history was cleared.
-    verify(mockAppHistoryObserver, atLeastOnce()).onChanged(appHistoryResultCaptor.capture())
-    assertThat(appHistoryResultCaptor.value.isSuccess()).isTrue()
-    assertThat(appHistoryResultCaptor.value.getOrThrow().alreadyOpenedApp).isFalse()
-  }
+  fun testController_onboardedApp_cleared_observeNewController_userDidNotOnboardApp() =
+    runBlockingTest(coroutineContext) {
+      val onboardingFlowStore = cacheFactory.create("on_boarding_flow", OnboardingFlow.getDefaultInstance())
+      onboardingFlowController.markOnboardingFlowCompleted()
+      advanceUntilIdle()
+      // Clear, then recreate another controller.
+      onboardingFlowStore.clearCacheAsync()
+      setUpTestApplicationComponent()
+      val onboarding = onboardingFlowController.getOnboardingFlow()
+      onboarding.observeForever(mockOnboardingObserver)
+      advanceUntilIdle()
+      // The app should be considered not yet onboarded since the previous history was cleared.
+      verify(mockOnboardingObserver, atLeastOnce()).onChanged(onboardingResultCaptor.capture())
+      assertThat(onboardingResultCaptor.value.isSuccess()).isTrue()
+      assertThat(onboardingResultCaptor.value.getOrThrow().alreadyOnboardedApp).isFalse()
+    }
 
   @Qualifier annotation class TestDispatcher
 
@@ -224,9 +225,10 @@
     interface Builder {
       @BindsInstance
       fun setApplication(application: Application): Builder
+
       fun build(): TestApplicationComponent
     }
 
-    fun inject(userAppHistoryControllerTest: UserAppHistoryControllerTest)
+    fun inject(onboardingFlowControllerTest: OnboardingFlowControllerTest)
   }
 }
Index: domain/src/main/java/org/oppia/domain/onboarding/OnboardingFlowController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/java/org/oppia/domain/onboarding/OnboardingFlowController.kt	(date 1584626399000)
+++ domain/src/main/java/org/oppia/domain/onboarding/OnboardingFlowController.kt	(date 1584626399000)
@@ -0,0 +1,52 @@
+package org.oppia.domain.onboarding
+
+import androidx.lifecycle.LiveData
+import org.oppia.app.model.OnboardingFlow
+import org.oppia.data.persistence.PersistentCacheStore
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.data.DataProviders
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+import javax.inject.Singleton
+
+/** Controller for persisting and retrieving the user onboarding information of the app. */
+@Singleton
+class OnboardingFlowController @Inject constructor(
+  cacheStoreFactory: PersistentCacheStore.Factory,
+  private val dataProviders: DataProviders,
+  private val logger: Logger
+) {
+  private val onboardingFlowStore = cacheStoreFactory.create("on_boarding_flow", OnboardingFlow.getDefaultInstance())
+
+  init {
+    // Prime the cache ahead of time so that any existing history is read prior to any calls to markOnboardingFlowCompleted().
+    onboardingFlowStore.primeCacheAsync().invokeOnCompletion {
+      it?.let {
+        logger.e("DOMAIN", "Failed to prime cache ahead of LiveData conversion for user onboarding data.", it)
+      }
+    }
+  }
+
+  /**
+   * Saves that the user has completed onboarding the app. Note that this does not notify existing subscribers of the changed state,
+   * nor can future subscribers observe this state until app restart.
+   */
+  fun markOnboardingFlowCompleted() {
+    onboardingFlowStore.storeDataAsync(updateInMemoryCache = false) {
+      it.toBuilder().setAlreadyOnboardedApp(true).build()
+    }.invokeOnCompletion {
+      it?.let {
+        logger.e("DOMAIN", "Failed when storing that the user already onboarded the app.", it)
+      }
+    }
+  }
+
+  /**
+   * Returns a [LiveData] result indicating whether the user has onboarded the app. This is guaranteed to
+   * provide the state of the store upon the creation of this controller even if [markOnboardingFlowCompleted] has since been
+   * called.
+   */
+  fun getOnboardingFlow(): LiveData<AsyncResult<OnboardingFlow>> {
+    return dataProviders.convertToLiveData(onboardingFlowStore)
+  }
+}
Index: app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,107 @@
+package org.oppia.app.home.recentlyplayed
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.Observer
+import org.oppia.app.databinding.OngoingStoryCardBinding
+import org.oppia.app.databinding.RecentlyPlayedFragmentBinding
+import org.oppia.app.databinding.SectionTitleBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.home.RouteToExplorationListener
+import org.oppia.app.model.PromotedStory
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.viewmodel.ViewModelProvider
+import org.oppia.domain.exploration.ExplorationDataController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The presenter for [RecentlyPlayedFragment]. */
+@FragmentScope
+class RecentlyPlayedFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val logger: Logger,
+  private val explorationDataController: ExplorationDataController,
+  private val viewModelProvider: ViewModelProvider<RecentlyPlayedViewModel>
+) {
+  private val routeToExplorationListener = activity as RouteToExplorationListener
+  private var internalProfileId: Int = -1
+  private lateinit var binding: RecentlyPlayedFragmentBinding
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?, internalProfileId: Int): View? {
+    binding = RecentlyPlayedFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    val viewModel = getRecentlyPlayedModel()
+    binding.recentlyPlayedToolbar.setNavigationOnClickListener {
+      (activity as RecentlyPlayedActivity).finish()
+    }
+
+    this.internalProfileId = internalProfileId
+
+    viewModel.setProfileId(internalProfileId)
+
+    binding.ongoingStoryRecyclerView.apply {
+      adapter = createRecyclerViewAdapter()
+    }
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.viewModel = viewModel
+    }
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<RecentlyPlayedItemViewModel> {
+    return BindableAdapter.MultiTypeBuilder
+      .newBuilder<RecentlyPlayedItemViewModel, RecentlyPlayedItemViewModel.ViewType> { viewModel ->
+        when (viewModel) {
+          is SectionTitleViewModel -> RecentlyPlayedItemViewModel.ViewType.VIEW_TYPE_SECTION_TITLE_TEXT
+          is OngoingStoryViewModel -> RecentlyPlayedItemViewModel.ViewType.VIEW_TYPE_SECTION_STORY_ITEM
+          else -> throw IllegalArgumentException("Encountered unexpected view model: $viewModel")
+        }
+      }
+      .registerViewDataBinder(
+        viewType = RecentlyPlayedItemViewModel.ViewType.VIEW_TYPE_SECTION_TITLE_TEXT,
+        inflateDataBinding = SectionTitleBinding::inflate,
+        setViewModel = SectionTitleBinding::setViewModel,
+        transformViewModel = { it as SectionTitleViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = RecentlyPlayedItemViewModel.ViewType.VIEW_TYPE_SECTION_STORY_ITEM,
+        inflateDataBinding = OngoingStoryCardBinding::inflate,
+        setViewModel = OngoingStoryCardBinding::setViewModel,
+        transformViewModel = { it as OngoingStoryViewModel }
+      )
+      .build()
+  }
+
+  private fun getRecentlyPlayedModel(): RecentlyPlayedViewModel {
+    return viewModelProvider.getForFragment(fragment, RecentlyPlayedViewModel::class.java)
+  }
+
+  fun onOngoingStoryClicked(promotedStory: PromotedStory) {
+    playExploration(promotedStory.topicId, promotedStory.storyId, promotedStory.explorationId)
+  }
+
+  private fun playExploration(topicId: String, storyId: String, explorationId: String) {
+    explorationDataController.startPlayingExploration(
+      explorationId
+    ).observe(fragment, Observer<AsyncResult<Any?>> { result ->
+      when {
+        result.isPending() -> logger.d("RecentlyPlayedFragment", "Loading exploration")
+        result.isFailure() -> logger.e(
+          "RecentlyPlayedFragment",
+          "Failed to load exploration",
+          result.getErrorOrNull()!!
+        )
+        else -> {
+          logger.d("RecentlyPlayedFragment", "Successfully loaded exploration")
+          routeToExplorationListener.routeToExploration(internalProfileId, topicId, storyId, explorationId)
+          activity.finish()
+        }
+      }
+    })
+  }
+}
Index: app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/RecentlyPlayedFragment.kt	(date 1584626399000)
@@ -0,0 +1,44 @@
+package org.oppia.app.home.recentlyplayed
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import org.oppia.app.model.PromotedStory
+import org.oppia.app.story.StoryFragment
+import javax.inject.Inject
+
+const val KEY_INTERNAL_PROFILE_ID = "INTERNAL_PROFILE_ID"
+
+/** Fragment that contains all recently played stories. */
+class RecentlyPlayedFragment : InjectableFragment(), OngoingStoryClickListener {
+  companion object {
+    /** Returns a new [RecentlyPlayedFragment] to display recently played stories. */
+    fun newInstance(internalProfileId: Int): RecentlyPlayedFragment {
+      val recentlyPlayedFragment = RecentlyPlayedFragment()
+      val args = Bundle()
+      args.putInt(KEY_INTERNAL_PROFILE_ID, internalProfileId)
+      recentlyPlayedFragment.arguments = args
+      return recentlyPlayedFragment
+    }
+  }
+
+  @Inject lateinit var recentlyPlayedFragmentPresenter: RecentlyPlayedFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    val args = checkNotNull(arguments) { "Expected arguments to be passed to RecentlyPlayedFragment" }
+    val internalProfileId = args.getInt(KEY_INTERNAL_PROFILE_ID, -1)
+    return recentlyPlayedFragmentPresenter.handleCreateView(inflater, container, internalProfileId)
+  }
+
+  override fun onOngoingStoryClicked(promotedStory: PromotedStory) {
+    recentlyPlayedFragmentPresenter.onOngoingStoryClicked(promotedStory)
+  }
+}
Index: app/src/main/java/org/oppia/app/home/continueplaying/OngoingStoryClickListener.kt
===================================================================
--- app/src/main/java/org/oppia/app/home/continueplaying/OngoingStoryClickListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/OngoingStoryClickListener.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.home.continueplaying
+package org.oppia.app.home.recentlyplayed
 
 import org.oppia.app.model.PromotedStory
 
Index: app/src/main/java/org/oppia/app/home/recentlyplayed/SectionTitleViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/recentlyplayed/SectionTitleViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/home/recentlyplayed/SectionTitleViewModel.kt	(date 1584626399000)
@@ -0,0 +1,7 @@
+package org.oppia.app.home.recentlyplayed
+
+import androidx.lifecycle.ViewModel
+
+/** [ViewModel] for section title in [RecentlyPlayedFragment]. */
+class SectionTitleViewModel(val sectionTitleText: String, val isDividerVisible: Boolean) :
+  RecentlyPlayedItemViewModel()
Index: domain/src/test/java/org/oppia/domain/profile/ProfileManagementControllerTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/test/java/org/oppia/domain/profile/ProfileManagementControllerTest.kt	(date 1584621433000)
+++ domain/src/test/java/org/oppia/domain/profile/ProfileManagementControllerTest.kt	(date 1584626399000)
@@ -31,9 +31,13 @@
 import org.mockito.Mockito.verify
 import org.mockito.junit.MockitoJUnit
 import org.mockito.junit.MockitoRule
+import org.oppia.app.model.AppLanguage
+import org.oppia.app.model.AudioLanguage
+import org.oppia.app.model.DeviceSettings
 import org.oppia.app.model.Profile
 import org.oppia.app.model.ProfileDatabase
 import org.oppia.app.model.ProfileId
+import org.oppia.app.model.StoryTextSize
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.EnableConsoleLog
 import org.oppia.util.logging.EnableFileLog
@@ -59,22 +63,23 @@
 
   @Inject lateinit var context: Context
 
+  @Inject lateinit var profileTestHelper: ProfileTestHelper
   @Inject lateinit var profileManagementController: ProfileManagementController
 
-  @Mock
-  lateinit var mockProfilesObserver: Observer<AsyncResult<List<Profile>>>
-  @Captor
-  lateinit var profilesResultCaptor: ArgumentCaptor<AsyncResult<List<Profile>>>
+  @Mock lateinit var mockProfilesObserver: Observer<AsyncResult<List<Profile>>>
+  @Captor lateinit var profilesResultCaptor: ArgumentCaptor<AsyncResult<List<Profile>>>
+
+  @Mock lateinit var mockProfileObserver: Observer<AsyncResult<Profile>>
+  @Captor lateinit var profileResultCaptor: ArgumentCaptor<AsyncResult<Profile>>
 
-  @Mock
-  lateinit var mockProfileObserver: Observer<AsyncResult<Profile>>
-  @Captor
-  lateinit var profileResultCaptor: ArgumentCaptor<AsyncResult<Profile>>
+  @Mock lateinit var mockUpdateResultObserver: Observer<AsyncResult<Any?>>
+  @Captor lateinit var updateResultCaptor: ArgumentCaptor<AsyncResult<Any?>>
 
-  @Mock
-  lateinit var mockUpdateResultObserver: Observer<AsyncResult<Any?>>
-  @Captor
-  lateinit var updateResultCaptor: ArgumentCaptor<AsyncResult<Any?>>
+  @Mock lateinit var mockWasProfileAddedResultObserver: Observer<AsyncResult<Boolean>>
+  @Captor lateinit var wasProfileAddedResultCaptor: ArgumentCaptor<AsyncResult<Boolean>>
+
+  @Mock lateinit var mockDeviceSettingsObserver: Observer<AsyncResult<DeviceSettings>>
+  @Captor lateinit var deviceSettingsResultCaptor: ArgumentCaptor<AsyncResult<DeviceSettings>>
 
   private val PROFILES_LIST = listOf<Profile>(
     Profile.newBuilder().setName("James").setPin("123").setAllowDownloadAccess(true).build(),
@@ -128,14 +133,16 @@
       avatarImagePath = null,
       allowDownloadAccess = true,
       colorRgb = -10710042,
-      isAdmin = true
+      isAdmin = true,
+      storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+      appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+      audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
     ).observeForever(mockUpdateResultObserver)
     advanceUntilIdle()
 
     val profileDatabase = readProfileDatabase()
+    verifyUpdateSucceeded()
 
-    verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-    assertThat(updateResultCaptor.value.isSuccess()).isTrue()
     val profile = profileDatabase.profilesMap[0]!!
     assertThat(profile.name).isEqualTo("James")
     assertThat(profile.pin).isEqualTo("123")
@@ -157,11 +164,13 @@
         avatarImagePath = null,
         allowDownloadAccess = false,
         colorRgb = -10710042,
-        isAdmin = true
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
       ).observeForever(mockUpdateResultObserver)
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isFailure()).isTrue()
+      verifyUpdateFailed()
       assertThat(updateResultCaptor.value.getErrorOrNull()).hasMessageThat()
         .contains("JAMES is not unique to other profiles")
     }
@@ -179,11 +188,13 @@
         avatarImagePath = null,
         allowDownloadAccess = false,
         colorRgb = -10710042,
-        isAdmin = true
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
       ).observeForever(mockUpdateResultObserver)
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isFailure()).isTrue()
+      verifyUpdateFailed()
       assertThat(updateResultCaptor.value.getErrorOrNull()).hasMessageThat()
         .contains("James034 does not contain only letters")
     }
@@ -198,8 +209,7 @@
       profileManagementController.getProfile(ProfileId.newBuilder().setInternalId(3).build())
         .observeForever(mockProfileObserver)
 
-      verify(mockProfileObserver, atLeastOnce()).onChanged(profileResultCaptor.capture())
-      assertThat(profileResultCaptor.value.isSuccess()).isTrue()
+      verifyGetProfileSucceeded()
       val profile = profileResultCaptor.value.getOrThrow()
       assertThat(profile.name).isEqualTo("Rajat")
       assertThat(profile.pin).isEqualTo("456")
@@ -216,8 +226,7 @@
 
       profileManagementController.getProfiles().observeForever(mockProfilesObserver)
 
-      verify(mockProfilesObserver, atLeastOnce()).onChanged(profilesResultCaptor.capture())
-      assertThat(profilesResultCaptor.value.isSuccess()).isTrue()
+      verifyGetMultipleProfilesSucceeded()
       val profiles = profilesResultCaptor.value.getOrThrow().sortedBy { it.id.internalId }
       assertThat(profiles.size).isEqualTo(PROFILES_LIST.size)
       checkTestProfilesArePresent(profiles)
@@ -237,13 +246,15 @@
         avatarImagePath = null,
         allowDownloadAccess = false,
         colorRgb = -10710042,
-        isAdmin = false
+        isAdmin = false,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
       )
       advanceUntilIdle()
       profileManagementController.getProfiles().observeForever(mockProfilesObserver)
 
-      verify(mockProfilesObserver, atLeastOnce()).onChanged(profilesResultCaptor.capture())
-      assertThat(profilesResultCaptor.value.isSuccess()).isTrue()
+      verifyGetMultipleProfilesSucceeded()
       val profiles = profilesResultCaptor.value.getOrThrow().sortedBy { it.id.internalId }
       assertThat(profiles.size).isEqualTo(PROFILES_LIST.size + 1)
       checkTestProfilesArePresent(profiles)
@@ -262,10 +273,8 @@
       advanceUntilIdle()
       profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      verify(mockProfileObserver, atLeastOnce()).onChanged(profileResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isSuccess()).isTrue()
-      assertThat(profileResultCaptor.value.isSuccess()).isTrue()
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
       assertThat(profileResultCaptor.value.getOrThrow().name).isEqualTo("John")
     }
 
@@ -281,8 +290,7 @@
         .observeForever(mockUpdateResultObserver)
       advanceUntilIdle()
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isFailure()).isTrue()
+      verifyUpdateFailed()
       assertThat(updateResultCaptor.value.getErrorOrNull()).hasMessageThat()
         .contains("James is not unique to other profiles")
     }
@@ -299,12 +307,29 @@
         .observeForever(mockUpdateResultObserver)
       advanceUntilIdle()
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isFailure()).isTrue()
+      verifyUpdateFailed()
       assertThat(updateResultCaptor.value.getErrorOrNull()).hasMessageThat()
         .contains("ProfileId 6 does not match an existing Profile")
     }
 
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testUpdateName_addProfiles_updateProfileAvatar_checkUpdateIsSuccessful() =
+    runBlockingTest(coroutineContext) {
+      addTestProfiles()
+      advanceUntilIdle()
+
+      val profileId = ProfileId.newBuilder().setInternalId(2).build()
+      profileManagementController.updateProfileAvatar(profileId, /* avatarImagePath = */ null, colorRgb = -10710042)
+        .observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
+
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
+      assertThat(profileResultCaptor.value.getOrThrow().avatar.avatarColorRgb).isEqualTo(-10710042)
+    }
+
   @Test
   @ExperimentalCoroutinesApi
   fun testUpdatePin_addProfiles_updatePin_checkUpdateIsSuccessful() =
@@ -318,10 +343,8 @@
       advanceUntilIdle()
       profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      verify(mockProfileObserver, atLeastOnce()).onChanged(profileResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isSuccess()).isTrue()
-      assertThat(profileResultCaptor.value.isSuccess()).isTrue()
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
       assertThat(profileResultCaptor.value.getOrThrow().pin).isEqualTo("321")
     }
 
@@ -337,8 +360,7 @@
         .observeForever(mockUpdateResultObserver)
       advanceUntilIdle()
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isFailure()).isTrue()
+      verifyUpdateFailed()
       assertThat(updateResultCaptor.value.getErrorOrNull()).hasMessageThat()
         .contains("ProfileId 6 does not match an existing Profile")
     }
@@ -356,10 +378,8 @@
       advanceUntilIdle()
       profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      verify(mockProfileObserver, atLeastOnce()).onChanged(profileResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isSuccess()).isTrue()
-      assertThat(profileResultCaptor.value.isSuccess()).isTrue()
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
       assertThat(profileResultCaptor.value.getOrThrow().allowDownloadAccess).isEqualTo(false)
     }
 
@@ -375,12 +395,65 @@
         .observeForever(mockUpdateResultObserver)
       advanceUntilIdle()
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isFailure()).isTrue()
+      verifyUpdateFailed()
       assertThat(updateResultCaptor.value.getErrorOrNull()).hasMessageThat()
         .contains("ProfileId 6 does not match an existing Profile")
     }
 
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testUpdateStoryTextSize_addProfiles_updateWithFontSize18_checkUpdateIsSuccessful() =
+    runBlockingTest(coroutineContext) {
+      addTestProfiles()
+      advanceUntilIdle()
+
+      val profileId = ProfileId.newBuilder().setInternalId(2).build()
+      profileManagementController.updateStoryTextSize(profileId, StoryTextSize.MEDIUM_TEXT_SIZE)
+        .observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
+
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
+      assertThat(profileResultCaptor.value.getOrThrow().storyTextSize).isEqualTo(StoryTextSize.MEDIUM_TEXT_SIZE)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testUpdateAppLanguage_addProfiles_updateWithChineseLanguage_checkUpdateIsSuccessful() =
+    runBlockingTest(coroutineContext) {
+      addTestProfiles()
+      advanceUntilIdle()
+
+      val profileId = ProfileId.newBuilder().setInternalId(2).build()
+      profileManagementController.updateAppLanguage(profileId, AppLanguage.CHINESE_APP_LANGUAGE)
+        .observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
+
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
+      assertThat(profileResultCaptor.value.getOrThrow().appLanguage).isEqualTo(AppLanguage.CHINESE_APP_LANGUAGE)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testUpdateAudioLanguage_addProfiles_updateWithFrenchLanguage_checkUpdateIsSuccessful() =
+    runBlockingTest(coroutineContext) {
+      addTestProfiles()
+      advanceUntilIdle()
+
+      val profileId = ProfileId.newBuilder().setInternalId(2).build()
+      profileManagementController.updateAudioLanguage(profileId, AudioLanguage.FRENCH_AUDIO_LANGUAGE)
+        .observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
+
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
+      assertThat(profileResultCaptor.value.getOrThrow().audioLanguage).isEqualTo(AudioLanguage.FRENCH_AUDIO_LANGUAGE)
+    }
+
   @Test
   @ExperimentalCoroutinesApi
   fun testDeleteProfile_addProfiles_deleteProfile_checkDeletionIsSuccessful() =
@@ -393,9 +466,8 @@
       advanceUntilIdle()
       profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
+      verifyUpdateSucceeded()
       verify(mockProfileObserver, atLeastOnce()).onChanged(profileResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isSuccess()).isTrue()
       assertThat(profileResultCaptor.value.isFailure()).isTrue()
       assertThat(File(getAbsoluteDirPath("2")).isDirectory).isFalse()
     }
@@ -417,13 +489,15 @@
         avatarImagePath = null,
         allowDownloadAccess = false,
         colorRgb = -10710042,
-        isAdmin = true
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
       )
       advanceUntilIdle()
       profileManagementController.getProfiles().observeForever(mockProfilesObserver)
 
-      verify(mockProfilesObserver, atLeastOnce()).onChanged(profilesResultCaptor.capture())
-      assertThat(profilesResultCaptor.value.isSuccess()).isTrue()
+      verifyGetMultipleProfilesSucceeded()
       val profiles = profilesResultCaptor.value.getOrThrow().sortedBy { it.id.internalId }
       assertThat(profiles.size).isEqualTo(4)
       assertThat(profiles[profiles.size - 2].name).isEqualTo("Ben")
@@ -450,8 +524,7 @@
       setUpTestApplicationComponent()
       profileManagementController.getProfiles().observeForever(mockProfilesObserver)
 
-      verify(mockProfilesObserver, atLeastOnce()).onChanged(profilesResultCaptor.capture())
-      assertThat(profilesResultCaptor.value.isSuccess()).isTrue()
+      verifyGetMultipleProfilesSucceeded()
       val profiles = profilesResultCaptor.value.getOrThrow()
       assertThat(profiles.size).isEqualTo(2)
       assertThat(profiles.first().name).isEqualTo("James")
@@ -473,10 +546,8 @@
       advanceUntilIdle()
       profileManagementController.getProfile(profileId).observeForever(mockProfileObserver)
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      verify(mockProfileObserver, atLeastOnce()).onChanged(profileResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isSuccess()).isTrue()
-      assertThat(profileResultCaptor.value.isSuccess()).isTrue()
+      verifyUpdateSucceeded()
+      verifyGetProfileSucceeded()
       assertThat(profileManagementController.getCurrentProfileId().internalId).isEqualTo(2)
       assertThat(profileResultCaptor.value.getOrThrow().lastLoggedInTimestampMs).isNotEqualTo(0)
     }
@@ -492,8 +563,7 @@
       profileManagementController.loginToProfile(profileId).observeForever(mockUpdateResultObserver)
       advanceUntilIdle()
 
-      verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
-      assertThat(updateResultCaptor.value.isFailure()).isTrue()
+      verifyUpdateFailed()
       assertThat(updateResultCaptor.value.getErrorOrNull()).hasMessageThat()
         .contains(
           "org.oppia.domain.profile.ProfileManagementController\$ProfileNotFoundException: " +
@@ -501,6 +571,459 @@
         )
     }
 
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testWasProfileEverAdded_addAdminProfile_checkIfProfileEverAdded() = runBlockingTest(coroutineContext) {
+    profileManagementController.addProfile(
+      name = "James",
+      pin = "123",
+      avatarImagePath = null,
+      allowDownloadAccess = true,
+      colorRgb = -10710042,
+      isAdmin = true,
+      storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+      appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+      audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+    ).observeForever(mockUpdateResultObserver)
+    advanceUntilIdle()
+
+    val profileDatabase = readProfileDatabase()
+
+    verifyUpdateSucceeded()
+    assertThat(profileDatabase.wasProfileEverAdded).isEqualTo(false)
+  }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testWasProfileEverAdded_addAdminProfile_getWasProfileEverAdded() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.getWasProfileEverAdded()
+        .observeForever(mockWasProfileAddedResultObserver)
+
+      verifyWasProfileEverAddedSucceeded()
+      val wasProfileEverAdded = wasProfileAddedResultCaptor.value.getOrThrow()
+      assertThat(wasProfileEverAdded).isFalse()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testWasProfileEverAdded_addAdminProfile_addUserProfile_checkIfProfileEverAdded() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.addProfile(
+        name = "Rajat",
+        pin = "01234",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = false,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val profileDatabase = readProfileDatabase()
+
+      verifyUpdateSucceeded()
+      assertThat(profileDatabase.wasProfileEverAdded).isEqualTo(true)
+      assertThat(profileDatabase.profilesMap.size).isEqualTo(2)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testWasProfileEverAdded_addAdminProfile_addUserProfile_getWasProfileEverAdded() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.addProfile(
+        name = "Rajat",
+        pin = "01234",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = false,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.getWasProfileEverAdded()
+        .observeForever(mockWasProfileAddedResultObserver)
+
+      verifyWasProfileEverAddedSucceeded()
+
+      val wasProfileEverAdded = wasProfileAddedResultCaptor.value.getOrThrow()
+      assertThat(wasProfileEverAdded).isTrue()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testWasProfileEverAdded_addAdminProfile_addUserProfile_deleteUserProfile_checkIfProfileEverAdded() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.addProfile(
+        name = "Rajat",
+        pin = "01234",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = false,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val profileId1 = ProfileId.newBuilder().setInternalId(1).build()
+      profileManagementController.deleteProfile(profileId1)
+      advanceUntilIdle()
+
+      val profileDatabase = readProfileDatabase()
+
+      verifyUpdateSucceeded()
+      assertThat(profileDatabase.profilesMap.size).isEqualTo(1)
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testWasProfileEverAdded_addAdminProfile_addUserProfile_deleteUserProfile_getWasProfileEverAdded() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.addProfile(
+        name = "Rajat",
+        pin = "01234",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = false,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val profileId1 = ProfileId.newBuilder().setInternalId(1).build()
+      profileManagementController.deleteProfile(profileId1)
+      advanceUntilIdle()
+
+      profileManagementController.getWasProfileEverAdded()
+        .observeForever(mockWasProfileAddedResultObserver)
+
+      verifyWasProfileEverAddedSucceeded()
+      val wasProfileEverAdded = wasProfileAddedResultCaptor.value.getOrThrow()
+      assertThat(wasProfileEverAdded).isTrue()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testDeviceSettings_addAdminProfile_getDefaultDeviceSettings_isSuccessful() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.getDeviceSettings().observeForever(mockDeviceSettingsObserver)
+      advanceUntilIdle()
+      verifyGetDeviceSettingsSucceeded()
+
+      val deviceSettings = deviceSettingsResultCaptor.value.getOrThrow()
+      assertThat(deviceSettings.allowDownloadAndUpdateOnlyOnWifi).isFalse()
+      assertThat(deviceSettings.automaticallyUpdateTopics).isFalse()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testDeviceSettings_addAdminProfile_updateDeviceWifiSettings_getDeviceSettings_isSuccessful() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val adminProfileId = ProfileId.newBuilder().setInternalId(0).build()
+      profileManagementController.updateWifiPermissionDeviceSettings(
+        adminProfileId, /* downloadAndUpdateOnWifiOnly = */
+        true
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      verifyUpdateSucceeded()
+
+      profileManagementController.getDeviceSettings().observeForever(mockDeviceSettingsObserver)
+      advanceUntilIdle()
+
+      verifyGetDeviceSettingsSucceeded()
+      val deviceSettings = deviceSettingsResultCaptor.value.getOrThrow()
+      assertThat(deviceSettings.allowDownloadAndUpdateOnlyOnWifi).isTrue()
+      assertThat(deviceSettings.automaticallyUpdateTopics).isFalse()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testDeviceSettings_addAdminProfile_updateTopicsAutomaticallyDeviceSettings_getDeviceSettings_isSuccessful() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val adminProfileId = ProfileId.newBuilder().setInternalId(0).build()
+      profileManagementController.updateTopicAutomaticallyPermissionDeviceSettings(
+        adminProfileId, /* automaticallyUpdateTopics = */
+        true
+      )
+        .observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      verifyUpdateSucceeded()
+
+      profileManagementController.getDeviceSettings().observeForever(mockDeviceSettingsObserver)
+      advanceUntilIdle()
+
+      verify(mockDeviceSettingsObserver, atLeastOnce()).onChanged(deviceSettingsResultCaptor.capture())
+      assertThat(deviceSettingsResultCaptor.value.isSuccess()).isTrue()
+
+      val deviceSettings = deviceSettingsResultCaptor.value.getOrThrow()
+      assertThat(deviceSettings.allowDownloadAndUpdateOnlyOnWifi).isFalse()
+      assertThat(deviceSettings.automaticallyUpdateTopics).isTrue()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testDeviceSettings_addAdminProfile_updateDeviceWifiSettings_updateTopicsAutomaticallyDeviceSettings_getDeviceSettings_isSuccessful() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val adminProfileId = ProfileId.newBuilder().setInternalId(0).build()
+      profileManagementController.updateWifiPermissionDeviceSettings(
+        adminProfileId, /* downloadAndUpdateOnWifiOnly = */
+        true
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      verifyUpdateSucceeded()
+
+      profileManagementController.updateTopicAutomaticallyPermissionDeviceSettings(
+        adminProfileId, /* automaticallyUpdateTopics = */
+        true
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      verifyUpdateSucceeded()
+
+      profileManagementController.getDeviceSettings().observeForever(mockDeviceSettingsObserver)
+      advanceUntilIdle()
+      verifyGetDeviceSettingsSucceeded()
+
+      val deviceSettings = deviceSettingsResultCaptor.value.getOrThrow()
+      assertThat(deviceSettings.allowDownloadAndUpdateOnlyOnWifi).isTrue()
+      assertThat(deviceSettings.automaticallyUpdateTopics).isTrue()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testDeviceSettings_updateDeviceWifiSettings_fromUserProfile_isFailure() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.addProfile(
+        name = "Rajat",
+        pin = "01234",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = false,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val userProfileId = ProfileId.newBuilder().setInternalId(1).build()
+      profileManagementController.updateWifiPermissionDeviceSettings(
+        userProfileId, /* downloadAndUpdateOnWifiOnly = */
+        true
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      verifyUpdateFailed()
+    }
+
+  @Test
+  @ExperimentalCoroutinesApi
+  fun testDeviceSettings_updateTopicsAutomaticallyDeviceSettings_fromUserProfile_isFailure() =
+    runBlockingTest(coroutineContext) {
+      profileManagementController.addProfile(
+        name = "James",
+        pin = "12345",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = true,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      profileManagementController.addProfile(
+        name = "Rajat",
+        pin = "01234",
+        avatarImagePath = null,
+        allowDownloadAccess = true,
+        colorRgb = -10710042,
+        isAdmin = false,
+        storyTextSize = StoryTextSize.SMALL_TEXT_SIZE,
+        appLanguage = AppLanguage.ENGLISH_APP_LANGUAGE,
+        audioLanguage = AudioLanguage.ENGLISH_AUDIO_LANGUAGE
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+
+      val userProfileId = ProfileId.newBuilder().setInternalId(1).build()
+      profileManagementController.updateTopicAutomaticallyPermissionDeviceSettings(
+        userProfileId, /* automaticallyUpdateTopics = */
+        true
+      ).observeForever(mockUpdateResultObserver)
+      advanceUntilIdle()
+      verifyUpdateFailed()
+    }
+
+  private fun verifyGetDeviceSettingsSucceeded() {
+    verify(mockDeviceSettingsObserver, atLeastOnce()).onChanged(deviceSettingsResultCaptor.capture())
+    assertThat(deviceSettingsResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetProfileSucceeded() {
+    verify(mockProfileObserver, atLeastOnce()).onChanged(profileResultCaptor.capture())
+    assertThat(profileResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyGetMultipleProfilesSucceeded() {
+    verify(mockProfilesObserver, atLeastOnce()).onChanged(profilesResultCaptor.capture())
+    assertThat(profilesResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyUpdateSucceeded() {
+    verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
+    assertThat(updateResultCaptor.value.isSuccess()).isTrue()
+  }
+
+  private fun verifyUpdateFailed() {
+    verify(mockUpdateResultObserver, atLeastOnce()).onChanged(updateResultCaptor.capture())
+    assertThat(updateResultCaptor.value.isFailure()).isTrue()
+  }
+
+  private fun verifyWasProfileEverAddedSucceeded() {
+    verify(mockWasProfileAddedResultObserver, atLeastOnce()).onChanged(wasProfileAddedResultCaptor.capture())
+    assertThat(wasProfileAddedResultCaptor.value.isSuccess()).isTrue()
+  }
+
   @ExperimentalCoroutinesApi
   private fun addTestProfiles() {
     PROFILES_LIST.forEach {
@@ -510,7 +1033,10 @@
         avatarImagePath = null,
         allowDownloadAccess = it.allowDownloadAccess,
         colorRgb = -10710042,
-        isAdmin = false
+        isAdmin = false,
+        storyTextSize = it.storyTextSize,
+        appLanguage = it.appLanguage,
+        audioLanguage = it.audioLanguage
       )
     }
   }
Index: app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardActivity.kt	(date 1584626399000)
@@ -0,0 +1,32 @@
+package org.oppia.app.topic.reviewcard
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+const val TOPIC_ID_ARGUMENT_KEY = "TOPIC_ID_"
+const val SUBTOPIC_ID_ARGUMENT_KEY = "SUBTOPIC_ID"
+
+/** Activity for review card. */
+class ReviewCardActivity : InjectableAppCompatActivity() {
+
+  @Inject lateinit var reviewCardActivityPresenter: ReviewCardActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    reviewCardActivityPresenter.handleOnCreate()
+  }
+
+  companion object {
+    /** Returns a new [Intent] to route to [ReviewCardActivity]. */
+    fun createReviewCardActivityIntent(context: Context, topicId: String, subtopicId: String): Intent {
+      val intent = Intent(context, ReviewCardActivity::class.java)
+      intent.putExtra(TOPIC_ID_ARGUMENT_KEY, topicId)
+      intent.putExtra(SUBTOPIC_ID_ARGUMENT_KEY, subtopicId)
+      return intent
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/topic/play/TopicPlayFragment.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/TopicPlayFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsFragment.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 import android.content.Context
 import android.os.Bundle
@@ -11,9 +11,9 @@
 
 private const val KEY_CURRENT_EXPANDED_LIST_INDEX = "CURRENT_EXPANDED_LIST_INDEX"
 
-/** Fragment that contains subtopic list for play mode. */
-class TopicPlayFragment : InjectableFragment(), ExpandedChapterListIndexListener, StorySummarySelector {
-  @Inject lateinit var topicPlayFragmentPresenter: TopicPlayFragmentPresenter
+/** Fragment that contains subtopic list for lessons mode. */
+class TopicLessonsFragment : InjectableFragment(), ExpandedChapterListIndexListener, StorySummarySelector {
+  @Inject lateinit var topicLessonsFragmentPresenter: TopicLessonsFragmentPresenter
 
   private var currentExpandedChapterListIndex: Int? = null
 
@@ -29,7 +29,7 @@
         currentExpandedChapterListIndex = null
       }
     }
-    return topicPlayFragmentPresenter.handleCreateView(
+    return topicLessonsFragmentPresenter.handleCreateView(
       inflater,
       container,
       currentExpandedChapterListIndex,
@@ -49,6 +49,6 @@
   }
 
   override fun selectStorySummary(storySummary: StorySummary) {
-    topicPlayFragmentPresenter.storySummaryClicked(storySummary)
+    topicLessonsFragmentPresenter.storySummaryClicked(storySummary)
   }
 }
Index: app/src/main/java/org/oppia/app/topic/play/ChapterSummarySelector.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/ChapterSummarySelector.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/ChapterSummarySelector.kt	(date 1584626399000)
@@ -1,8 +1,8 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 import org.oppia.app.model.ChapterSummary
 
-/** Interface to transfer the selected chapter summary to [TopicPlayFragmentPresenter]. */
+/** Interface to transfer the selected chapter summary to [TopicLessonsFragmentPresenter]. */
 interface ChapterSummarySelector {
-  fun selectChapterSummary(chapterSummary: ChapterSummary)
+  fun selectChapterSummary(storyId: String, chapterSummary: ChapterSummary)
 }
Index: app/src/main/java/org/oppia/app/home/RouteToTopicPlayStoryListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/RouteToTopicPlayStoryListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/RouteToTopicPlayStoryListener.kt	(date 1584626399000)
@@ -2,5 +2,5 @@
 
 /** Listener for when an activity should route to a story-item in TopicPlay tab. */
 interface RouteToTopicPlayStoryListener {
-  fun routeToTopicPlayStory(topicId: String, storyId: String)
+  fun routeToTopicPlayStory(internalProfileId: Int, topicId: String, storyId: String)
 }
Index: app/src/main/java/org/oppia/app/topic/play/ExpandedChapterListIndexListener.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/ExpandedChapterListIndexListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/ExpandedChapterListIndexListener.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 /**
  * Interface to keep track of story-index for which ChapterList is visible/expanded.
Index: app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,24 @@
+package org.oppia.app.topic.reviewcard
+
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import javax.inject.Inject
+
+/** The presenter for [ReviewCardActivity]. */
+@ActivityScope
+class ReviewCardActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  fun handleOnCreate() {
+    activity.setContentView(R.layout.review_card_activity)
+    if (getReviewCardFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.review_card_fragment_placeholder,
+        ReviewCardFragment()
+      ).commitNow()
+    }
+  }
+
+  private fun getReviewCardFragment(): ReviewCardFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.review_card_fragment_placeholder) as ReviewCardFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/topic/reviewcard/ReveiwCardFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/reviewcard/ReveiwCardFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/reviewcard/ReveiwCardFragment.kt	(date 1584626399000)
@@ -0,0 +1,25 @@
+package org.oppia.app.topic.reviewcard
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableDialogFragment
+import javax.inject.Inject
+
+/* Fragment that displays review card */
+class ReviewCardFragment : InjectableDialogFragment() {
+
+  @Inject lateinit var reviewCardFragmentPresenter: ReviewCardFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    super.onCreateView(inflater, container, savedInstanceState)
+    return reviewCardFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/main/java/org/oppia/app/home/RouteToExplorationListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/RouteToExplorationListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/RouteToExplorationListener.kt	(date 1584626399000)
@@ -2,5 +2,5 @@
 
 /** Listener for when an activity should route to a exploration. */
 interface RouteToExplorationListener {
-  fun routeToExploration(explorationId: String, topicId: String?)
+  fun routeToExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String)
 }
Index: app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardViewModel.kt	(date 1584626399000)
@@ -0,0 +1,58 @@
+package org.oppia.app.topic.reviewcard
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.databinding.ReviewCardFragmentBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.ReviewCard
+import org.oppia.domain.topic.TopicController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import org.oppia.util.parser.HtmlParser
+import org.oppia.util.parser.ReviewCardHtmlParserEntityType
+import javax.inject.Inject
+
+/** [ViewModel] for Review card, providing rich text and worked examples */
+@FragmentScope
+class ReviewCardViewModel @Inject constructor(
+  private val topicController: TopicController,
+  private val logger: Logger,
+  private val htmlParserFactory: HtmlParser.Factory,
+  @ReviewCardHtmlParserEntityType private val entityType: String
+) : ViewModel() {
+  private lateinit var topicId: String
+  private lateinit var subtopicId: String
+  private lateinit var binding: ReviewCardFragmentBinding
+
+  var subtopicTitle: String = ""
+
+  val explanationLiveData: LiveData<CharSequence> by lazy {
+    processExplanationLiveData()
+  }
+
+  /** Sets the value of subtopicId and binding. Must be called before setting ViewModel to binding */
+  fun setSubtopicIdAndBinding(topicId: String, id: String, binding: ReviewCardFragmentBinding) {
+    subtopicId = id
+    this.topicId = topicId
+    this.binding = binding
+  }
+
+  private val reviewCardResultLiveData: LiveData<AsyncResult<ReviewCard>> by lazy {
+    topicController.getReviewCard(topicId,subtopicId)
+  }
+
+  private fun processExplanationLiveData(): LiveData<CharSequence> {
+    return Transformations.map(reviewCardResultLiveData, ::processExplanationResult)
+  }
+
+  private fun processExplanationResult(reviewCardResult: AsyncResult<ReviewCard>): CharSequence {
+    if (reviewCardResult.isFailure()) {
+      logger.e("ReviewCardFragment", "Failed to retrieve Review Card", reviewCardResult.getErrorOrNull()!!)
+    }
+    val reviewCard = reviewCardResult.getOrDefault(ReviewCard.getDefaultInstance())
+    subtopicTitle = reviewCard.subtopicTitle
+    return htmlParserFactory.create(entityType, subtopicId, /* imageCenterAlign= */ true)
+      .parseOppiaHtml(reviewCard.pageContents.html, binding.reviewCardExplanationText)
+  }
+}
Index: app/src/main/java/org/oppia/app/home/RouteToTopicListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/RouteToTopicListener.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/RouteToTopicListener.kt	(date 1584626399000)
@@ -2,5 +2,5 @@
 
 /** Listener for when an activity should route to a topic. */
 interface RouteToTopicListener {
-  fun routeToTopic(topicId: String)
+  fun routeToTopic(internalProfileId: Int, topicId: String)
 }
Index: app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/reviewcard/ReviewCardFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,40 @@
+package org.oppia.app.topic.reviewcard
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.Fragment
+import org.oppia.app.databinding.ReviewCardFragmentBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.viewmodel.ViewModelProvider
+import javax.inject.Inject
+
+/** Presenter for [ReviewCardFragment], sets up bindings from ViewModel */
+@FragmentScope
+class ReviewCardFragmentPresenter @Inject constructor(
+  private val fragment: Fragment,
+  private val viewModelProvider: ViewModelProvider<ReviewCardViewModel>
+) {
+  private lateinit var topicId: String
+  private lateinit var subtopicId: String
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    val binding = ReviewCardFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    val viewModel = getReviewCardViewModel()
+
+    topicId = fragment.activity!!.intent.getStringExtra(TOPIC_ID_ARGUMENT_KEY)
+    subtopicId = fragment.activity!!.intent.getStringExtra(SUBTOPIC_ID_ARGUMENT_KEY)
+
+    viewModel.setSubtopicIdAndBinding(topicId, subtopicId, binding)
+
+    binding.let {
+      it.viewModel = viewModel
+      it.lifecycleOwner = fragment
+    }
+    return binding.root
+  }
+
+  private fun getReviewCardViewModel(): ReviewCardViewModel {
+    return viewModelProvider.getForFragment(fragment, ReviewCardViewModel::class.java)
+  }
+}
Index: app/src/main/java/org/oppia/app/topic/play/StorySummaryViewModel.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/StorySummaryViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/StorySummaryViewModel.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 import androidx.lifecycle.ViewModel
 import org.oppia.app.model.StorySummary
@@ -7,7 +7,7 @@
 class StorySummaryViewModel(
   val storySummary: StorySummary,
   private val storySummarySelector: StorySummarySelector
-) : TopicPlayItemViewModel() {
+) : TopicLessonsItemViewModel() {
 
   fun clickOnStorySummaryTitle() {
     storySummarySelector.selectStorySummary(storySummary)
Index: app/src/main/java/org/oppia/app/topic/play/StorySummarySelector.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/StorySummarySelector.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/StorySummarySelector.kt	(date 1584626399000)
@@ -1,8 +1,8 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 import org.oppia.app.model.StorySummary
 
-/** Interface to transfer the selected story summary to [TopicPlayFragmentPresenter]. */
+/** Interface to transfer the selected story summary to [TopicLessonsFragmentPresenter]. */
 interface StorySummarySelector {
   fun selectStorySummary(storySummary: StorySummary)
 }
Index: app/src/main/java/org/oppia/app/topic/play/ChapterSummaryAdapter.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/ChapterSummaryAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/ChapterSummaryAdapter.kt	(date 1584626399000)
@@ -1,25 +1,26 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.databinding.DataBindingUtil
 import androidx.recyclerview.widget.RecyclerView
 import org.oppia.app.R
-import org.oppia.app.databinding.PlayChapterViewBinding
+import org.oppia.app.databinding.LessonsChapterViewBinding
 import org.oppia.app.model.ChapterSummary
 
 // TODO(#216): Make use of generic data-binding-enabled RecyclerView adapter.
 
-/** Adapter to bind ChapterSummary to [RecyclerView] inside [TopicPlayFragment]. */
+/** Adapter to bind ChapterSummary to [RecyclerView] inside [TopicLessonsFragment]. */
 class ChapterSummaryAdapter(
+  private val storyId: String,
   private val chapterList: List<ChapterSummary>,
   private val chapterSummarySelector: ChapterSummarySelector
 ) :
   RecyclerView.Adapter<ChapterSummaryAdapter.ChapterSummaryViewHolder>() {
   override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ChapterSummaryViewHolder {
-    val chapterSummaryListItemBinding = DataBindingUtil.inflate<PlayChapterViewBinding>(
+    val chapterSummaryListItemBinding = DataBindingUtil.inflate<LessonsChapterViewBinding>(
       LayoutInflater.from(parent.context),
-      R.layout.play_chapter_view, parent,
+      R.layout.lessons_chapter_view, parent,
       /* attachToRoot= */ false
     )
     return ChapterSummaryViewHolder(chapterSummaryListItemBinding)
@@ -33,13 +34,13 @@
     chapterSummaryViewHolder.bind(chapterList[position], position)
   }
 
-  inner class ChapterSummaryViewHolder(private val binding: PlayChapterViewBinding) :
+  inner class ChapterSummaryViewHolder(private val binding: LessonsChapterViewBinding) :
     RecyclerView.ViewHolder(binding.root) {
     internal fun bind(chapterSummary: ChapterSummary, position: Int) {
       binding.chapterSummary = chapterSummary
       binding.index = position
       binding.chapterContainer.setOnClickListener {
-        chapterSummarySelector.selectChapterSummary(chapterSummary)
+        chapterSummarySelector.selectChapterSummary(storyId, chapterSummary)
       }
     }
   }
Index: app/src/main/java/org/oppia/app/topic/practice/TopicPracticeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/practice/TopicPracticeViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/practice/TopicPracticeViewModel.kt	(date 1584626399000)
@@ -0,0 +1,69 @@
+package org.oppia.app.topic.practice
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.ProfileId
+import org.oppia.app.model.Topic
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeFooterViewModel
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeHeaderViewModel
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeItemViewModel
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeSubtopicViewModel
+import org.oppia.domain.topic.TopicController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** [ViewModel] for [TopicPracticeFragment]. */
+@FragmentScope
+class TopicPracticeViewModel @Inject constructor(
+  private val logger: Logger,
+  private val topicController: TopicController
+) : ViewModel() {
+  private val itemViewModelList: MutableList<TopicPracticeItemViewModel> = ArrayList()
+  private lateinit var topicId: String
+  private var internalProfileId: Int = -1
+
+  private val topicResultLiveData: LiveData<AsyncResult<Topic>> by lazy {
+    topicController.getTopic(ProfileId.newBuilder().setInternalId(internalProfileId).build(), topicId)
+  }
+
+  private val topicLiveData: LiveData<Topic> by lazy { getTopicList() }
+
+  private fun getTopicList(): LiveData<Topic> {
+    return Transformations.map(topicResultLiveData, ::processTopicResult)
+  }
+
+  val topicPracticeSkillLiveData: LiveData<List<TopicPracticeItemViewModel>> by lazy {
+    Transformations.map(topicLiveData, ::processTopicPracticeSkillList)
+  }
+
+  fun setTopicId(topicId: String) {
+    this.topicId = topicId
+  }
+
+  fun setInternalProfileId(internalProfileId: Int) {
+    this.internalProfileId = internalProfileId
+  }
+
+  private fun processTopicResult(topic: AsyncResult<Topic>): Topic {
+    if (topic.isFailure()) {
+      logger.e("TopicPracticeFragment", "Failed to retrieve topic", topic.getErrorOrNull()!!)
+    }
+    return topic.getOrDefault(Topic.getDefaultInstance())
+  }
+
+  private fun processTopicPracticeSkillList(topic: Topic): List<TopicPracticeItemViewModel> {
+    itemViewModelList.add(TopicPracticeHeaderViewModel() as TopicPracticeItemViewModel)
+
+    itemViewModelList.addAll(topic.subtopicList.map { subtopic ->
+      TopicPracticeSubtopicViewModel(subtopic) as TopicPracticeItemViewModel
+    })
+
+    itemViewModelList.add(TopicPracticeFooterViewModel() as TopicPracticeItemViewModel)
+
+    return itemViewModelList
+  }
+
+}
Index: app/src/main/java/org/oppia/app/topic/play/TopicPlayFragmentPresenter.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/TopicPlayFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsFragmentPresenter.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 import android.view.LayoutInflater
 import android.view.View
@@ -8,12 +8,14 @@
 import androidx.lifecycle.LiveData
 import androidx.lifecycle.Observer
 import androidx.lifecycle.Transformations
-import org.oppia.app.databinding.TopicPlayFragmentBinding
+import org.oppia.app.databinding.TopicLessonsFragmentBinding
 import org.oppia.app.fragment.FragmentScope
 import org.oppia.app.home.RouteToExplorationListener
 import org.oppia.app.model.ChapterSummary
+import org.oppia.app.model.ProfileId
 import org.oppia.app.model.StorySummary
 import org.oppia.app.model.Topic
+import org.oppia.app.topic.PROFILE_ID_ARGUMENT_KEY
 import org.oppia.app.topic.RouteToStoryListener
 import org.oppia.app.topic.STORY_ID_ARGUMENT_KEY
 import org.oppia.app.topic.TOPIC_ID_ARGUMENT_KEY
@@ -23,9 +25,9 @@
 import org.oppia.util.logging.Logger
 import javax.inject.Inject
 
-/** The presenter for [TopicPlayFragment]. */
+/** The presenter for [TopicLessonsFragment]. */
 @FragmentScope
-class TopicPlayFragmentPresenter @Inject constructor(
+class TopicLessonsFragmentPresenter @Inject constructor(
   activity: AppCompatActivity,
   private val fragment: Fragment,
   private val logger: Logger,
@@ -37,13 +39,14 @@
 
   private var currentExpandedChapterListIndex: Int? = null
 
-  private lateinit var binding: TopicPlayFragmentBinding
+  private lateinit var binding: TopicLessonsFragmentBinding
+  private var internalProfileId: Int = -1
   private lateinit var topicId: String
   private lateinit var storyId: String
 
   private lateinit var expandedChapterListIndexListener: ExpandedChapterListIndexListener
 
-  private val itemList: MutableList<TopicPlayItemViewModel> = ArrayList()
+  private val itemList: MutableList<TopicLessonsItemViewModel> = ArrayList()
 
   fun handleCreateView(
     inflater: LayoutInflater,
@@ -51,13 +54,14 @@
     currentExpandedChapterListIndex: Int?,
     expandedChapterListIndexListener: ExpandedChapterListIndexListener
   ): View? {
+    internalProfileId = fragment.arguments?.getInt(PROFILE_ID_ARGUMENT_KEY, -1)!!
     topicId = checkNotNull(fragment.arguments?.getString(TOPIC_ID_ARGUMENT_KEY)) {
-      "Expected topic ID to be included in arguments for TopicPlayFragment."
+      "Expected topic ID to be included in arguments for TopicLessonsFragment."
     }
     storyId = fragment.arguments?.getString(STORY_ID_ARGUMENT_KEY) ?: ""
     this.currentExpandedChapterListIndex = currentExpandedChapterListIndex
     this.expandedChapterListIndexListener = expandedChapterListIndexListener
-    binding = TopicPlayFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    binding = TopicLessonsFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
     binding.let {
       it.lifecycleOwner = fragment
     }
@@ -68,7 +72,7 @@
   private val topicLiveData: LiveData<Topic> by lazy { getTopicList() }
 
   private val topicResultLiveData: LiveData<AsyncResult<Topic>> by lazy {
-    topicController.getTopic(topicId)
+    topicController.getTopic(ProfileId.newBuilder().setInternalId(internalProfileId).build(), topicId)
   }
 
   private fun subscribeToTopicLiveData() {
@@ -80,7 +84,7 @@
             currentExpandedChapterListIndex = index + 1
           }
         }
-        itemList.add(TopicPlayTitleViewModel())
+        itemList.add(TopicLessonsTitleViewModel())
         for (storySummary in it.storyList) {
           itemList.add(StorySummaryViewModel(storySummary, fragment as StorySummarySelector))
         }
@@ -106,35 +110,35 @@
 
   private fun processTopicResult(topic: AsyncResult<Topic>): Topic {
     if (topic.isFailure()) {
-      logger.e("TopicPlayFragment", "Failed to retrieve topic", topic.getErrorOrNull()!!)
+      logger.e("TopicLessonsFragment", "Failed to retrieve topic", topic.getErrorOrNull()!!)
     }
     return topic.getOrDefault(Topic.getDefaultInstance())
   }
 
   override fun selectStorySummary(storySummary: StorySummary) {
-    routeToStoryListener.routeToStory(storySummary.storyId)
+    routeToStoryListener.routeToStory(internalProfileId, topicId, storySummary.storyId)
   }
 
-  override fun selectChapterSummary(chapterSummary: ChapterSummary) {
-    playExploration(chapterSummary.explorationId, topicId)
+  override fun selectChapterSummary(storyId: String, chapterSummary: ChapterSummary) {
+    playExploration(internalProfileId, topicId, storyId, chapterSummary.explorationId)
   }
 
-  private fun playExploration(explorationId: String, topicId: String) {
+  private fun playExploration(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
     explorationDataController.startPlayingExploration(
       explorationId
     ).observe(fragment, Observer<AsyncResult<Any?>> { result ->
       when {
-        result.isPending() -> logger.d("TopicPlayFragment", "Loading exploration")
-        result.isFailure() -> logger.e("TopicPlayFragment", "Failed to load exploration", result.getErrorOrNull()!!)
+        result.isPending() -> logger.d("TopicLessonsFragment", "Loading exploration")
+        result.isFailure() -> logger.e("TopicLessonsFragment", "Failed to load exploration", result.getErrorOrNull()!!)
         else -> {
-          logger.d("TopicPlayFragment", "Successfully loaded exploration")
-          routeToExplorationListener.routeToExploration(explorationId, topicId)
+          logger.d("TopicLessonsFragment", "Successfully loaded exploration")
+          routeToExplorationListener.routeToExploration(internalProfileId, topicId, storyId, explorationId)
         }
       }
     })
   }
 
   fun storySummaryClicked(storySummary: StorySummary) {
-    routeToStoryListener.routeToStory(storySummary.storyId)
+    routeToStoryListener.routeToStory(internalProfileId, topicId, storySummary.storyId)
   }
 }
Index: app/src/main/java/org/oppia/app/topic/play/StorySummaryAdapter.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/play/StorySummaryAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/lessons/StorySummaryAdapter.kt	(date 1584626399000)
@@ -1,10 +1,11 @@
-package org.oppia.app.topic.play
+package org.oppia.app.topic.lessons
 
 import android.view.LayoutInflater
+import android.view.View
 import android.view.ViewGroup
 import androidx.recyclerview.widget.RecyclerView
-import org.oppia.app.databinding.TopicPlayStorySummaryBinding
-import org.oppia.app.databinding.TopicPlayTitleBinding
+import org.oppia.app.databinding.TopicLessonsStorySummaryBinding
+import org.oppia.app.databinding.TopicLessonsTitleBinding
 import org.oppia.app.model.ChapterPlayState
 import org.oppia.app.model.ChapterSummary
 
@@ -13,9 +14,9 @@
 private const val VIEW_TYPE_TITLE_TEXT = 1
 private const val VIEW_TYPE_STORY_ITEM = 2
 
-/** Adapter to bind StorySummary to [RecyclerView] inside [TopicPlayFragment]. */
+/** Adapter to bind StorySummary to [RecyclerView] inside [TopicLessonsFragment]. */
 class StorySummaryAdapter(
-  private val itemList: MutableList<TopicPlayItemViewModel>,
+  private val itemList: MutableList<TopicLessonsItemViewModel>,
   private val chapterSummarySelector: ChapterSummarySelector,
   private val expandedChapterListIndexListener: ExpandedChapterListIndexListener,
   private var currentExpandedChapterListIndex: Int?
@@ -28,7 +29,7 @@
       VIEW_TYPE_TITLE_TEXT -> {
         val inflater = LayoutInflater.from(parent.context)
         val binding =
-          TopicPlayTitleBinding.inflate(
+          TopicLessonsTitleBinding.inflate(
             inflater,
             parent,
             /* attachToParent= */ false
@@ -38,7 +39,7 @@
       VIEW_TYPE_STORY_ITEM -> {
         val inflater = LayoutInflater.from(parent.context)
         val binding =
-          TopicPlayStorySummaryBinding.inflate(
+          TopicLessonsStorySummaryBinding.inflate(
             inflater,
             parent,
             /* attachToParent= */ false
@@ -63,7 +64,7 @@
 
   override fun getItemViewType(position: Int): Int {
     return when (itemList[position]) {
-      is TopicPlayTitleViewModel -> {
+      is TopicLessonsTitleViewModel -> {
         VIEW_TYPE_TITLE_TEXT
       }
       is StorySummaryViewModel -> {
@@ -78,12 +79,12 @@
   }
 
   private class TopicPlayTitleViewHolder(
-    binding: TopicPlayTitleBinding
+    binding: TopicLessonsTitleBinding
   ) : RecyclerView.ViewHolder(binding.root) {
     internal fun bind() {}
   }
 
-  inner class StorySummaryViewHolder(private val binding: TopicPlayStorySummaryBinding) :
+  inner class StorySummaryViewHolder(private val binding: TopicLessonsStorySummaryBinding) :
     RecyclerView.ViewHolder(binding.root) {
     internal fun bind(storySummaryViewModel: StorySummaryViewModel, position: Int) {
       var isChapterListVisible = false
@@ -106,9 +107,10 @@
         storySummaryViewModel.storySummary.chapterCount,
         completedChapterCount
       )
-
+      binding.topicPlayStoryDashedLineView.setLayerType(View.LAYER_TYPE_SOFTWARE, /* paint= */ null)
       val chapterList = storySummaryViewModel.storySummary.chapterList
-      binding.chapterRecyclerView.adapter = ChapterSummaryAdapter(chapterList, chapterSummarySelector)
+      binding.chapterRecyclerView.adapter =
+        ChapterSummaryAdapter(storySummaryViewModel.storySummary.storyId, chapterList, chapterSummarySelector)
 
       binding.root.setOnClickListener {
         val previousIndex: Int? = currentExpandedChapterListIndex
Index: app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.topic.lessons
+
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** The root [ViewModel] for all individual items that may be displayed in [TopicLessonsFragment] recycler view. */
+abstract class TopicLessonsItemViewModel : ObservableViewModel()
Index: app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsTitleViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsTitleViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/lessons/TopicLessonsTitleViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.topic.lessons
+
+import androidx.lifecycle.ViewModel
+
+/** [ViewModel] for title in [TopicLessonsFragment]. */
+class TopicLessonsTitleViewModel : TopicLessonsItemViewModel()
Index: app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,7 @@
+package org.oppia.app.topic.practice.practiceitemviewmodel
+
+import org.oppia.app.topic.practice.TopicPracticeFragment
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** Super-class for generalising different views for the recyclerView in [TopicPracticeFragment] */
+abstract class TopicPracticeItemViewModel : ObservableViewModel()
Index: app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeSubtopicViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeSubtopicViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeSubtopicViewModel.kt	(date 1584626399000)
@@ -0,0 +1,7 @@
+package org.oppia.app.topic.practice.practiceitemviewmodel
+
+import org.oppia.app.model.Subtopic
+import org.oppia.app.topic.practice.TopicPracticeFragment
+
+/** Subtopic view model for the recycler view in [TopicPracticeFragment]. */
+class TopicPracticeSubtopicViewModel(val subtopic: Subtopic) : TopicPracticeItemViewModel()
Index: app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeHeaderViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeHeaderViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeHeaderViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.topic.practice.practiceitemviewmodel
+
+import org.oppia.app.topic.practice.TopicPracticeFragment
+
+/** Header view model for the recycler view in [TopicPracticeFragment]. */
+class TopicPracticeHeaderViewModel : TopicPracticeItemViewModel()
Index: app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeFooterViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeFooterViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/practice/practiceitemviewmodel/TopicPracticeFooterViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.topic.practice.practiceitemviewmodel
+
+import org.oppia.app.topic.practice.TopicPracticeFragment
+
+/** Footer view model for the recycler view in [TopicPracticeFragment]. */
+class TopicPracticeFooterViewModel : TopicPracticeItemViewModel()
Index: app/src/main/java/org/oppia/app/player/state/StateViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/StateViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/StateViewModel.kt	(date 1584626399000)
@@ -5,6 +5,7 @@
 import androidx.lifecycle.ViewModel
 import org.oppia.app.fragment.FragmentScope
 import org.oppia.app.model.UserAnswer
+import org.oppia.app.player.state.answerhandling.AnswerErrorCategory
 import org.oppia.app.player.state.answerhandling.InteractionAnswerHandler
 import org.oppia.app.player.state.itemviewmodel.StateItemViewModel
 import org.oppia.app.viewmodel.ObservableArrayList
@@ -34,7 +35,10 @@
 
   // TODO(#164): Add a hasPendingAnswer() that binds to the enabled state of the Submit button.
   fun getPendingAnswer(): UserAnswer {
-    return getPendingAnswerHandler(itemList)?.getPendingAnswer() ?: UserAnswer.getDefaultInstance()
+    return if (getPendingAnswerHandler(itemList)?.checkPendingAnswerError(AnswerErrorCategory.SUBMIT_TIME) != null) {
+      UserAnswer.getDefaultInstance()
+    } else
+      getPendingAnswerHandler(itemList)?.getPendingAnswer() ?: UserAnswer.getDefaultInstance()
   }
 
   private fun getPendingAnswerHandler(itemList: List<StateItemViewModel>): InteractionAnswerHandler? {
Index: app/src/main/java/org/oppia/app/topic/train/TopicTrainFragment.kt
===================================================================
--- app/src/main/java/org/oppia/app/topic/train/TopicTrainFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/topic/practice/TopicPracticeFragment.kt	(date 1584626399000)
@@ -1,4 +1,4 @@
-package org.oppia.app.topic.train
+package org.oppia.app.topic.practice
 
 import android.content.Context
 import android.os.Bundle
@@ -10,9 +10,9 @@
 
 private const val KEY_SKILL_ID_LIST = "SKILL_ID_LIST"
 
-/** Fragment that displays skills for topic train mode. */
-class TopicTrainFragment : InjectableFragment() {
-  @Inject lateinit var topicTrainFragmentPresenter: TopicTrainFragmentPresenter
+/** Fragment that displays skills for topic practice mode. */
+class TopicPracticeFragment : InjectableFragment() {
+  @Inject lateinit var topicPracticeFragmentPresenter: TopicPracticeFragmentPresenter
 
   override fun onAttach(context: Context) {
     super.onAttach(context)
@@ -24,11 +24,11 @@
     if (savedInstanceState != null) {
       selectedIdList = savedInstanceState.getStringArrayList(KEY_SKILL_ID_LIST)
     }
-    return topicTrainFragmentPresenter.handleCreateView(inflater, container, selectedIdList)
+    return topicPracticeFragmentPresenter.handleCreateView(inflater, container, selectedIdList)
   }
 
   override fun onSaveInstanceState(outState: Bundle) {
     super.onSaveInstanceState(outState)
-    outState.putStringArrayList(KEY_SKILL_ID_LIST, topicTrainFragmentPresenter.selectedSkillIdList)
+    outState.putStringArrayList(KEY_SKILL_ID_LIST, topicPracticeFragmentPresenter.selectedSkillIdList)
   }
 }
Index: app/src/main/java/org/oppia/app/topic/practice/TopicPracticeFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/practice/TopicPracticeFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/practice/TopicPracticeFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,156 @@
+package org.oppia.app.topic.practice
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import org.oppia.app.databinding.TopicPracticeFooterViewBinding
+import org.oppia.app.databinding.TopicPracticeFragmentBinding
+import org.oppia.app.databinding.TopicPracticeHeaderViewBinding
+import org.oppia.app.databinding.TopicPracticeSubtopicBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.topic.PROFILE_ID_ARGUMENT_KEY
+import org.oppia.app.topic.RouteToQuestionPlayerListener
+import org.oppia.app.topic.TOPIC_ID_ARGUMENT_KEY
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeFooterViewModel
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeHeaderViewModel
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeItemViewModel
+import org.oppia.app.topic.practice.practiceitemviewmodel.TopicPracticeSubtopicViewModel
+import org.oppia.app.viewmodel.ViewModelProvider
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The presenter for [TopicPracticeFragment]. */
+@FragmentScope
+class TopicPracticeFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val logger: Logger,
+  private val viewModelProvider: ViewModelProvider<TopicPracticeViewModel>
+) : SubtopicSelector {
+  private lateinit var binding: TopicPracticeFragmentBinding
+  private lateinit var linearLayoutManager: LinearLayoutManager
+  lateinit var selectedSkillIdList: ArrayList<String>
+  private var skillIdHashMap = HashMap<String, MutableList<String>>()
+  private lateinit var topicId: String
+  private lateinit var topicPracticeFooterViewBinding: TopicPracticeFooterViewBinding
+  private val routeToQuestionPlayerListener = activity as RouteToQuestionPlayerListener
+
+  fun handleCreateView(
+    inflater: LayoutInflater,
+    container: ViewGroup?,
+    skillList: ArrayList<String>
+  ): View? {
+    val viewModel = getTopicPracticeViewModel()
+    val internalProfileId = fragment.arguments?.getInt(PROFILE_ID_ARGUMENT_KEY, -1)!!
+    topicId = checkNotNull(fragment.arguments?.getString(TOPIC_ID_ARGUMENT_KEY)) {
+      "Expected topic ID to be included in arguments for TopicPracticeFragment."
+    }
+    viewModel.setTopicId(topicId)
+    viewModel.setInternalProfileId(internalProfileId)
+
+    selectedSkillIdList = skillList
+    binding = TopicPracticeFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+
+    linearLayoutManager = LinearLayoutManager(activity.applicationContext)
+
+    binding.topicPracticeSkillList.apply {
+      layoutManager = linearLayoutManager
+      adapter = createRecyclerViewAdapter()
+    }
+
+    binding.apply {
+      this.viewModel = viewModel
+      lifecycleOwner = fragment
+    }
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<TopicPracticeItemViewModel> {
+    return BindableAdapter.MultiTypeBuilder
+      .newBuilder<TopicPracticeItemViewModel, ViewType> { viewModel ->
+        when (viewModel) {
+          is TopicPracticeHeaderViewModel -> ViewType.VIEW_TYPE_HEADER
+          is TopicPracticeSubtopicViewModel -> ViewType.VIEW_TYPE_SKILL
+          is TopicPracticeFooterViewModel -> ViewType.VIEW_TYPE_FOOTER
+          else -> throw IllegalArgumentException("Encountered unexpected view model: $viewModel")
+        }
+      }
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_HEADER,
+        inflateDataBinding = TopicPracticeHeaderViewBinding::inflate,
+        setViewModel = TopicPracticeHeaderViewBinding::setViewModel,
+        transformViewModel = { it as TopicPracticeHeaderViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_SKILL,
+        inflateDataBinding = TopicPracticeSubtopicBinding::inflate,
+        setViewModel = this::bindSkillView,
+        transformViewModel = { it as TopicPracticeSubtopicViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_FOOTER,
+        inflateDataBinding = TopicPracticeFooterViewBinding::inflate,
+        setViewModel = this::bindFooterView,
+        transformViewModel = { it as TopicPracticeFooterViewModel }
+      )
+      .build()
+  }
+
+  private fun bindSkillView(binding: TopicPracticeSubtopicBinding, model: TopicPracticeSubtopicViewModel) {
+    binding.viewModel = model
+    binding.isChecked = selectedSkillIdList.contains(model.subtopic.subtopicId)
+    binding.subtopicCheckBox.setOnCheckedChangeListener { _, isChecked ->
+      if (isChecked) {
+        subtopicSelected(model.subtopic.subtopicId, model.subtopic.skillIdsList)
+      } else {
+        subtopicUnselected(model.subtopic.subtopicId, model.subtopic.skillIdsList)
+      }
+    }
+  }
+
+  private fun bindFooterView(binding: TopicPracticeFooterViewBinding, model: TopicPracticeFooterViewModel) {
+    topicPracticeFooterViewBinding = binding
+    binding.viewModel = model
+    binding.isSubmitButtonActive = selectedSkillIdList.isNotEmpty()
+    binding.topicPracticeStartButton.setOnClickListener {
+      val skillIdList = ArrayList(skillIdHashMap.values)
+      logger.d("TopicPracticeFragmentPresenter", "Skill Ids = " + skillIdList.flatten())
+      routeToQuestionPlayerListener.routeToQuestionPlayer(skillIdList.flatten() as ArrayList<String>)
+    }
+  }
+
+  private fun getTopicPracticeViewModel(): TopicPracticeViewModel {
+    return viewModelProvider.getForFragment(fragment, TopicPracticeViewModel::class.java)
+  }
+
+  private enum class ViewType {
+    VIEW_TYPE_HEADER,
+    VIEW_TYPE_SKILL,
+    VIEW_TYPE_FOOTER
+  }
+
+  override fun subtopicSelected(subtopicId: String, skillIdList: MutableList<String>) {
+    if (!selectedSkillIdList.contains(subtopicId)) {
+      selectedSkillIdList.add(subtopicId)
+      skillIdHashMap.put(subtopicId, skillIdList)
+    }
+
+    if (::topicPracticeFooterViewBinding.isInitialized) {
+      topicPracticeFooterViewBinding.isSubmitButtonActive = skillIdHashMap.isNotEmpty()
+    }
+  }
+
+  override fun subtopicUnselected(subtopicId: String, skillIdList: MutableList<String>) {
+    if (selectedSkillIdList.contains(subtopicId)) {
+      selectedSkillIdList.remove(subtopicId)
+      skillIdHashMap.remove(subtopicId)
+    }
+    if (::topicPracticeFooterViewBinding.isInitialized) {
+      topicPracticeFooterViewBinding.isSubmitButtonActive = skillIdHashMap.isNotEmpty()
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/topic/practice/SubtopicSelector.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/topic/practice/SubtopicSelector.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/topic/practice/SubtopicSelector.kt	(date 1584626399000)
@@ -0,0 +1,10 @@
+package org.oppia.app.topic.practice
+
+/** Interface to update the selectedSubtopicList in [TopicPracticeFragmentPresenter]. */
+interface SubtopicSelector {
+  /** This subtopic and skill will get added to selectedSubtopicList in [TopicPracticeFragmentPresenter]. */
+  fun subtopicSelected(subtopicId: String, skillIdList: MutableList<String>)
+
+  /** This subtopic and skill will get removed from selectedSubtopicList in [TopicPracticeFragmentPresenter]. */
+  fun subtopicUnselected(subtopicId: String, skillIdList: MutableList<String>)
+}
Index: app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListViewModel.kt	(date 1584626399000)
@@ -0,0 +1,53 @@
+package org.oppia.app.ongoingtopiclist
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.OngoingTopicList
+import org.oppia.app.model.ProfileId
+import org.oppia.domain.topic.TopicController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The ViewModel for [OngoingTopicListFragment]. */
+@FragmentScope
+class OngoingTopicListViewModel @Inject constructor(
+  private val topicController: TopicController,
+  private val logger: Logger
+) : ViewModel() {
+  /** [internalProfileId] needs to be set before any of the live data members can be accessed. */
+  private var internalProfileId: Int = -1
+
+  private val ongoingTopicListResultLiveData: LiveData<AsyncResult<OngoingTopicList>> by lazy {
+    topicController.getOngoingTopicList(ProfileId.newBuilder().setInternalId(internalProfileId).build())
+  }
+
+  private val ongoingTopicListLiveData: LiveData<OngoingTopicList> by lazy {
+    Transformations.map(ongoingTopicListResultLiveData, ::processOngoingTopicResult)
+  }
+
+  val ongoingTopicListViewModelLiveData: LiveData<List<OngoingTopicItemViewModel>> by lazy {
+    Transformations.map(ongoingTopicListLiveData, ::processOngoingTopicList)
+  }
+
+  fun setProfileId(internalProfileId: Int) {
+    this.internalProfileId = internalProfileId
+  }
+
+  private fun processOngoingTopicResult(ongoingTopicListResult: AsyncResult<OngoingTopicList>): OngoingTopicList {
+    if (ongoingTopicListResult.isFailure()) {
+      logger.e("OngoingTopicListFragment", "Failed to retrieve OngoingTopicList: ", ongoingTopicListResult.getErrorOrNull()!!)
+    }
+    return ongoingTopicListResult.getOrDefault(OngoingTopicList.getDefaultInstance())
+  }
+
+  private fun processOngoingTopicList(ongoingTopicList: OngoingTopicList): List<OngoingTopicItemViewModel> {
+    val itemViewModelList: MutableList<OngoingTopicItemViewModel> = mutableListOf()
+    itemViewModelList.addAll(ongoingTopicList.topicList.map { topic ->
+      OngoingTopicItemViewModel(topic)
+    })
+    return itemViewModelList
+  }
+}
Index: app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListFragment.kt	(date 1584626399000)
@@ -0,0 +1,43 @@
+package org.oppia.app.ongoingtopiclist
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** Fragment for displaying [OngoingTopicListActivity]. */
+class OngoingTopicListFragment : InjectableFragment() {
+
+  companion object {
+    internal const val ONGOING_TOPIC_LIST_FRAGMENT_PROFILE_ID_KEY = "OngoingTopicListFragment.profile_id"
+
+    /** Returns a new [OngoingTopicListFragment] to display corresponding to the specified profile ID. */
+    fun newInstance(internalProfileId: Int): OngoingTopicListFragment {
+      val ongoingTopicListFragment = OngoingTopicListFragment()
+      val args = Bundle()
+      args.putInt(ONGOING_TOPIC_LIST_FRAGMENT_PROFILE_ID_KEY, internalProfileId)
+      ongoingTopicListFragment.arguments = args
+      return ongoingTopicListFragment
+    }
+  }
+
+  @Inject lateinit var ongoingTopicListFragmentPresenter: OngoingTopicListFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(
+    inflater: LayoutInflater,
+    container: ViewGroup?,
+    savedInstanceState: Bundle?
+  ): View? {
+    val args = checkNotNull(arguments) { "Expected arguments to be passed to OngoingTopicListFragment" }
+    val internalProfileId = args.getInt(ONGOING_TOPIC_LIST_FRAGMENT_PROFILE_ID_KEY, -1)
+    return ongoingTopicListFragmentPresenter.handleCreateView(inflater, container, internalProfileId)
+  }
+}
Index: app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,7 @@
+package org.oppia.app.completedstorylist
+
+import androidx.lifecycle.ViewModel
+import org.oppia.app.model.CompletedStory
+
+/** Completed story view model for the recycler view in [CompletedStoryListFragment]. */
+class CompletedStoryItemViewModel(val completedStory: CompletedStory) : ViewModel()
Index: app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,24 @@
+package org.oppia.app.completedstorylist
+
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import javax.inject.Inject
+
+/** The presenter for [CompletedStoryListActivity]. */
+@ActivityScope
+class CompletedStoryListActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  fun handleOnCreate(internalProfileId: Int) {
+    activity.setContentView(R.layout.completed_story_list_activity)
+    if (getCompletedStoryListFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.completed_story_list_fragment_placeholder,
+        CompletedStoryListFragment.newInstance(internalProfileId)
+      ).commitNow()
+    }
+  }
+
+  private fun getCompletedStoryListFragment(): CompletedStoryListFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.completed_story_list_fragment_placeholder) as CompletedStoryListFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/home/topiclist/PromotedStoryViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/topiclist/PromotedStoryViewModel.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/topiclist/PromotedStoryViewModel.kt	(date 1584626399000)
@@ -12,7 +12,11 @@
 // TODO(#283): Add download status information to promoted-story-card.
 
 /** [ViewModel] for displaying a promoted story. */
-class PromotedStoryViewModel(private val activity: AppCompatActivity) : ObservableViewModel(),
+class PromotedStoryViewModel(
+  private val activity: AppCompatActivity,
+  private val internalProfileId: Int
+) :
+  ObservableViewModel(),
   RouteToTopicPlayStoryListener {
 
   /**
@@ -27,13 +31,18 @@
   }
 
   fun clickOnStoryTile() {
-    routeToTopicPlayStory(promotedStoryObservable.get()!!.topicId, promotedStoryObservable.get()!!.storyId)
+    routeToTopicPlayStory(
+      internalProfileId,
+      promotedStoryObservable.get()!!.topicId,
+      promotedStoryObservable.get()!!.storyId
+    )
   }
 
-  override fun routeToTopicPlayStory(topicId: String, storyId: String) {
+  override fun routeToTopicPlayStory(internalProfileId: Int, topicId: String, storyId: String) {
     activity.startActivity(
       TopicActivity.createTopicPlayStoryActivityIntent(
         activity.applicationContext,
+        internalProfileId,
         topicId,
         storyId
       )
Index: app/src/main/java/org/oppia/app/player/state/StateFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/state/StateFragment.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/state/StateFragment.kt	(date 1584626399000)
@@ -7,20 +7,29 @@
 import android.view.ViewGroup
 import org.oppia.app.fragment.InjectableFragment
 import org.oppia.app.model.UserAnswer
+import org.oppia.app.player.state.answerhandling.InteractionAnswerErrorReceiver
+import org.oppia.app.player.state.answerhandling.InteractionAnswerHandler
 import org.oppia.app.player.state.answerhandling.InteractionAnswerReceiver
 import javax.inject.Inject
 
 /** Fragment that represents the current state of an exploration. */
-class StateFragment : InjectableFragment(), InteractionAnswerReceiver {
+class StateFragment : InjectableFragment(), InteractionAnswerReceiver, InteractionAnswerHandler,
+  InteractionAnswerErrorReceiver {
   companion object {
     /**
      * Creates a new instance of a StateFragment.
-     * @param explorationId used by StateFragment.
+     * @param internalProfileId used by StateFragment to mark progress.
+     * @param topicId used by StateFragment to mark progress.
+     * @param storyId used by StateFragment to mark progress.
+     * @param explorationId used by StateFragment to mark progress and manage exploration.
      * @return a new instance of [StateFragment].
      */
-    fun newInstance(explorationId: String): StateFragment {
+    fun newInstance(internalProfileId: Int, topicId: String, storyId: String, explorationId: String): StateFragment {
       val stateFragment = StateFragment()
       val args = Bundle()
+      args.putInt(STATE_FRAGMENT_PROFILE_ID_ARGUMENT_KEY, internalProfileId)
+      args.putString(STATE_FRAGMENT_TOPIC_ID_ARGUMENT_KEY, topicId)
+      args.putString(STATE_FRAGMENT_STORY_ID_ARGUMENT_KEY, storyId)
       args.putString(STATE_FRAGMENT_EXPLORATION_ID_ARGUMENT_KEY, explorationId)
       stateFragment.arguments = args
       return stateFragment
@@ -46,6 +55,10 @@
 
   fun handleKeyboardAction() = stateFragmentPresenter.handleKeyboardAction()
 
+  override fun onPendingAnswerError(pendingAnswerError: String?) {
+    stateFragmentPresenter.updateSubmitButton(pendingAnswerError)
+  }
+
   fun setAudioBarVisibility(visibility: Boolean) = stateFragmentPresenter.setAudioBarVisibility(visibility)
 
   fun scrollToTop() = stateFragmentPresenter.scrollToTop()
Index: app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,7 @@
+package org.oppia.app.ongoingtopiclist
+
+import androidx.lifecycle.ViewModel
+import org.oppia.app.model.Topic
+
+/** [ViewModel] for displaying topic item in [OngoingTopicListActivity]. */
+class OngoingTopicItemViewModel(val topic: Topic) : ViewModel()
Index: app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,60 @@
+package org.oppia.app.ongoingtopiclist
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import org.oppia.app.databinding.OngoingTopicItemBinding
+import org.oppia.app.databinding.OngoingTopicListFragmentBinding
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.viewmodel.ViewModelProvider
+import javax.inject.Inject
+
+/** The presenter for [OngoingTopicListFragment]. */
+class OngoingTopicListFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val viewModelProvider: ViewModelProvider<OngoingTopicListViewModel>
+) {
+
+  private lateinit var binding: OngoingTopicListFragmentBinding
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?, internalProfileId: Int): View? {
+    val viewModel = getOngoingTopicListViewModel()
+    binding = OngoingTopicListFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    viewModel.setProfileId(internalProfileId)
+
+    binding.ongoingTopicListToolbar.setNavigationOnClickListener {
+      (activity as OngoingTopicListActivity).finish()
+    }
+
+    binding.ongoingTopicList.apply {
+      layoutManager = LinearLayoutManager(activity.applicationContext)
+      adapter = createRecyclerViewAdapter()
+    }
+
+    // NB: Both the view model and lifecycle owner must be set in order to correctly bind LiveData elements to
+    // data-bound view models.
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.viewModel = viewModel
+    }
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<OngoingTopicItemViewModel> {
+    return BindableAdapter.SingleTypeBuilder
+      .newBuilder<OngoingTopicItemViewModel>()
+      .registerViewDataBinderWithSameModelType(
+        inflateDataBinding = OngoingTopicItemBinding::inflate,
+        setViewModel = OngoingTopicItemBinding::setViewModel
+      )
+      .build()
+  }
+
+  private fun getOngoingTopicListViewModel(): OngoingTopicListViewModel {
+    return viewModelProvider.getForFragment(fragment, OngoingTopicListViewModel::class.java)
+  }
+}
Index: app/src/main/java/org/oppia/app/home/topiclist/TopicListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/home/topiclist/TopicListAdapter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/home/topiclist/TopicListAdapter.kt	(date 1584626399000)
@@ -13,7 +13,7 @@
 import org.oppia.app.databinding.TopicSummaryViewBinding
 import org.oppia.app.databinding.WelcomeBinding
 import org.oppia.app.home.HomeItemViewModel
-import org.oppia.app.home.UserAppHistoryViewModel
+import org.oppia.app.home.WelcomeViewModel
 import org.oppia.app.recyclerview.StartSnapHelper
 
 private const val VIEW_TYPE_WELCOME_MESSAGE = 1
@@ -79,7 +79,7 @@
   override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {
     when (holder.itemViewType) {
       VIEW_TYPE_WELCOME_MESSAGE -> {
-        (holder as WelcomeViewHolder).bind(itemList[position] as UserAppHistoryViewModel)
+        (holder as WelcomeViewHolder).bind(itemList[position] as WelcomeViewModel)
       }
       VIEW_TYPE_PROMOTED_STORY_LIST -> {
         (holder as PromotedStoryListViewHolder).bind(
@@ -99,7 +99,7 @@
 
   override fun getItemViewType(position: Int): Int {
     return when (itemList[position]) {
-      is UserAppHistoryViewModel -> {
+      is WelcomeViewModel -> {
         VIEW_TYPE_WELCOME_MESSAGE
       }
       is AllTopicsViewModel -> {
@@ -120,8 +120,8 @@
   }
 
   private class WelcomeViewHolder(val binding: WelcomeBinding) : RecyclerView.ViewHolder(binding.root) {
-    internal fun bind(userAppHistoryViewModel: UserAppHistoryViewModel) {
-      binding.viewModel = userAppHistoryViewModel
+    internal fun bind(welcomeViewModel: WelcomeViewModel) {
+      binding.viewModel = welcomeViewModel
     }
   }
 
Index: app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListActivity.kt	(date 1584626399000)
@@ -0,0 +1,30 @@
+package org.oppia.app.ongoingtopiclist
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+/** Activity for ongoing topics. */
+class OngoingTopicListActivity : InjectableAppCompatActivity() {
+  @Inject lateinit var ongoingTopicListActivityPresenter: OngoingTopicListActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    val internalProfileId: Int = intent.getIntExtra(ONGOING_TOPIC_LIST_ACTIVITY_PROFILE_ID_KEY, -1)
+    ongoingTopicListActivityPresenter.handleOnCreate(internalProfileId)
+  }
+
+  companion object {
+    internal const val ONGOING_TOPIC_LIST_ACTIVITY_PROFILE_ID_KEY = "OngoingTopicListActivity.profile_id"
+
+    /** Returns a new [Intent] to route to [OngoingTopicListActivity] for a specified profile ID. */
+    fun createOngoingTopicListActivityIntent(context: Context, internalProfileId: Int): Intent {
+      val intent = Intent(context, OngoingTopicListActivity::class.java)
+      intent.putExtra(ONGOING_TOPIC_LIST_ACTIVITY_PROFILE_ID_KEY, internalProfileId)
+      return intent
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/ongoingtopiclist/OngoingTopicListActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,26 @@
+package org.oppia.app.ongoingtopiclist
+
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import javax.inject.Inject
+
+/** The presenter for [OngoingTopicListActivity]. */
+@ActivityScope
+class OngoingTopicListActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity
+) {
+  fun handleOnCreate(internalProfileId: Int) {
+    activity.setContentView(R.layout.ongoing_topic_list_activity)
+    if (getOngoingTopicListFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.ongoing_topic_list_fragment_placeholder,
+        OngoingTopicListFragment.newInstance(internalProfileId)
+      ).commitNow()
+    }
+  }
+
+  private fun getOngoingTopicListFragment(): OngoingTopicListFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.ongoing_topic_list_fragment_placeholder) as OngoingTopicListFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsActivity.kt	(date 1584626399000)
@@ -0,0 +1,49 @@
+package org.oppia.app.administratorcontrols
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.view.Menu
+import org.oppia.app.R
+import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.administratorcontrols.appversion.AppVersionActivity
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
+import org.oppia.app.settings.profile.ProfileListActivity
+import javax.inject.Inject
+
+/** Activity for Administrator Controls. */
+class AdministratorControlsActivity : InjectableAppCompatActivity(), RouteToProfileListListener, RouteToAppVersionListener {
+  @Inject lateinit var administratorControlsActivityPresenter: AdministratorControlsActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    administratorControlsActivityPresenter.handleOnCreate()
+    title = getString(R.string.administrator_controls)
+  }
+
+  override fun onCreateOptionsMenu(menu: Menu?): Boolean {
+    menuInflater.inflate(R.menu.menu_administrator_controls_activity, menu)
+    return super.onCreateOptionsMenu(menu)
+  }
+
+  override fun routeToAppVersion() {
+    startActivity(AppVersionActivity.createAppVersionActivityIntent(this))
+  }
+
+  override fun routeToProfileList() {
+    startActivity(ProfileListActivity.createProfileListActivityIntent(this))
+  }
+
+  companion object {
+    fun createAdministratorControlsActivityIntent(context: Context, profileId: Int?): Intent {
+      val intent = Intent(context, AdministratorControlsActivity::class.java)
+      intent.putExtra(KEY_NAVIGATION_PROFILE_ID, profileId)
+      return intent
+    }
+
+    fun getIntentKey(): String {
+      return KEY_NAVIGATION_PROFILE_ID
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/RouteToProfileListListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/RouteToProfileListListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/RouteToProfileListListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.administratorcontrols
+
+/** Listener for when an activity should route to a exploration. */
+interface RouteToProfileListListener {
+  fun routeToProfileList()
+}
Index: utility/src/main/java/org/oppia/util/parser/ExplorationHtmlParserEntityType.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- utility/src/main/java/org/oppia/util/parser/ExplorationHtmlParserEntityType.kt	(date 1584621433000)
+++ utility/src/main/java/org/oppia/util/parser/ExplorationHtmlParserEntityType.kt	(date 1584626399000)
@@ -9,3 +9,7 @@
 /** Qualifier for injecting the entity type for concept card. */
 @Qualifier
 annotation class ConceptCardHtmlParserEntityType
+
+/** Qualifier for injecting the entity type for review card. */
+@Qualifier
+annotation class ReviewCardHtmlParserEntityType
Index: app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsFragment.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.administratorcontrols
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** Fragment that contains Administrator Controls of the application. */
+class AdministratorControlsFragment : InjectableFragment() {
+  @Inject lateinit var administratorControlsFragmentPresenter: AdministratorControlsFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return administratorControlsFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListViewModel.kt	(date 1584626399000)
@@ -0,0 +1,57 @@
+package org.oppia.app.completedstorylist
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.CompletedStoryList
+import org.oppia.app.model.ProfileId
+import org.oppia.domain.topic.TopicController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The ViewModel for [CompletedStoryListFragment]. */
+@FragmentScope
+class CompletedStoryListViewModel @Inject constructor(
+  private val topicController: TopicController,
+  private val logger: Logger
+) : ViewModel() {
+  /** [internalProfileId] needs to be set before any of the live data members can be accessed. */
+  private var internalProfileId: Int = -1
+
+  private val completedStoryListResultLiveData: LiveData<AsyncResult<CompletedStoryList>> by lazy {
+    topicController.getCompletedStoryList(ProfileId.newBuilder().setInternalId(internalProfileId).build())
+  }
+
+  private val completedStoryLiveData: LiveData<CompletedStoryList> by lazy {
+    Transformations.map(completedStoryListResultLiveData, ::processCompletedStoryListResult)
+  }
+
+  val completedStoryListLiveData: LiveData<List<CompletedStoryItemViewModel>> by lazy {
+    Transformations.map(completedStoryLiveData, ::processCompletedStoryList)
+  }
+
+  fun setProfileId(internalProfileId: Int) {
+    this.internalProfileId = internalProfileId
+  }
+
+  private fun processCompletedStoryListResult(completedStoryListResult: AsyncResult<CompletedStoryList>): CompletedStoryList {
+    if (completedStoryListResult.isFailure()) {
+      logger.e(
+        "CompletedStoryListFragment",
+        "Failed to retrieve CompletedStory list: ",
+        completedStoryListResult.getErrorOrNull()!!
+      )
+    }
+    return completedStoryListResult.getOrDefault(CompletedStoryList.getDefaultInstance())
+  }
+
+  private fun processCompletedStoryList(completedStoryList: CompletedStoryList): List<CompletedStoryItemViewModel> {
+    val itemViewModelList: MutableList<CompletedStoryItemViewModel> = mutableListOf()
+    itemViewModelList.addAll(completedStoryList.completedStoryList.map { completedStory ->
+      CompletedStoryItemViewModel(completedStory)
+    })
+    return itemViewModelList
+  }
+}
Index: app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListActivity.kt	(date 1584626399000)
@@ -0,0 +1,30 @@
+package org.oppia.app.completedstorylist
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+/** Activity for completed stories. */
+class CompletedStoryListActivity : InjectableAppCompatActivity() {
+  @Inject lateinit var completedStoryListActivityPresenter: CompletedStoryListActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    val internalProfileId: Int = intent.getIntExtra(COMPLETED_STORY_LIST_ACTIVITY_PROFILE_ID_KEY, -1)
+    completedStoryListActivityPresenter.handleOnCreate(internalProfileId)
+  }
+
+  companion object {
+    internal const val COMPLETED_STORY_LIST_ACTIVITY_PROFILE_ID_KEY = "CompletedStoryListActivity.profile_id"
+
+    /** Returns a new [Intent] to route to [CompletedStoryListActivity] for a specified profile ID. */
+    fun createCompletedStoryListActivityIntent(context: Context, internalProfileId: Int): Intent {
+      val intent = Intent(context, CompletedStoryListActivity::class.java)
+      intent.putExtra(COMPLETED_STORY_LIST_ACTIVITY_PROFILE_ID_KEY, internalProfileId)
+      return intent
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,56 @@
+package org.oppia.app.completedstorylist
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import org.oppia.app.databinding.CompletedStoryItemBinding
+import org.oppia.app.databinding.CompletedStoryListFragmentBinding
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.viewmodel.ViewModelProvider
+import javax.inject.Inject
+
+/** The presenter for [CompletedStoryListFragment]. */
+class CompletedStoryListFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val viewModelProvider: ViewModelProvider<CompletedStoryListViewModel>
+) {
+
+  private lateinit var binding: CompletedStoryListFragmentBinding
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?, internalProfileId: Int): View? {
+    val viewModel = getCompletedStoryListViewModel()
+    viewModel.setProfileId(internalProfileId)
+
+    binding = CompletedStoryListFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    binding.completedStoryListToolbar.setNavigationOnClickListener {
+      (activity as CompletedStoryListActivity).finish()
+    }
+    binding.completedStoryList.apply {
+      layoutManager = LinearLayoutManager(activity.applicationContext)
+      adapter = createRecyclerViewAdapter()
+    }
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.viewModel = viewModel
+    }
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<CompletedStoryItemViewModel> {
+    return BindableAdapter.SingleTypeBuilder
+      .newBuilder<CompletedStoryItemViewModel>()
+      .registerViewDataBinderWithSameModelType(
+        inflateDataBinding = CompletedStoryItemBinding::inflate,
+        setViewModel = CompletedStoryItemBinding::setViewModel
+      )
+      .build()
+  }
+
+  private fun getCompletedStoryListViewModel(): CompletedStoryListViewModel {
+    return viewModelProvider.getForFragment(fragment, CompletedStoryListViewModel::class.java)
+  }
+}
Index: app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/completedstorylist/CompletedStoryListFragment.kt	(date 1584626399000)
@@ -0,0 +1,42 @@
+package org.oppia.app.completedstorylist
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** Fragment for displaying completed stories. */
+class CompletedStoryListFragment : InjectableFragment() {
+  companion object {
+    internal const val COMPLETED_STORY_LIST_FRAGMENT_PROFILE_ID_KEY = "CompletedStoryListFragment.profile_id"
+
+    /** Returns a new [CompletedStoryListFragment] to display corresponding to the specified profile ID. */
+    fun newInstance(internalProfileId: Int): CompletedStoryListFragment {
+      val completedStoryListFragment = CompletedStoryListFragment()
+      val args = Bundle()
+      args.putInt(COMPLETED_STORY_LIST_FRAGMENT_PROFILE_ID_KEY, internalProfileId)
+      completedStoryListFragment.arguments = args
+      return completedStoryListFragment
+    }
+  }
+
+  @Inject lateinit var completedStoryListFragmentPresenter: CompletedStoryListFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(
+    inflater: LayoutInflater,
+    container: ViewGroup?,
+    savedInstanceState: Bundle?
+  ): View? {
+    val args = checkNotNull(arguments) { "Expected arguments to be passed to CompletedStoryListFragment" }
+    val internalProfileId = args.getInt(COMPLETED_STORY_LIST_FRAGMENT_PROFILE_ID_KEY, -1)
+    return completedStoryListFragmentPresenter.handleCreateView(inflater, container, internalProfileId)
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionFragment.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.administratorcontrols.appversion
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** Fragment that contains app version and last update time of the Oppia application. */
+class AppVersionFragment : InjectableFragment(){
+  @Inject lateinit var appVersionFragmentPresenter: AppVersionFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return appVersionFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionActivity.kt	(date 1584626399000)
@@ -0,0 +1,32 @@
+package org.oppia.app.administratorcontrols.appversion
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.view.MenuItem
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+/** Activity for App Version. */
+class AppVersionActivity : InjectableAppCompatActivity() {
+  @Inject lateinit var appVersionActivityPresenter: AppVersionActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    appVersionActivityPresenter.handleOnCreate()
+  }
+
+  override fun onOptionsItemSelected(item: MenuItem?): Boolean {
+    if (item?.itemId == android.R.id.home) {
+      onBackPressed()
+    }
+    return super.onOptionsItemSelected(item)
+  }
+
+  companion object {
+    fun createAppVersionActivityIntent(context: Context): Intent {
+      return Intent(context, AppVersionActivity::class.java)
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,32 @@
+package org.oppia.app.administratorcontrols.appversion
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import javax.inject.Inject
+
+/** The presenter for [AppVersionActivity]. */
+@ActivityScope
+class AppVersionActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  fun handleOnCreate() {
+    activity.setContentView(R.layout.app_version_activity)
+    setToolbar()
+    if (getAppVersionFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.app_version_fragment_placeholder,
+        AppVersionFragment()
+      ).commitNow()
+    }
+  }
+
+  private fun setToolbar() {
+    val appVersionToolbar: Toolbar = activity.findViewById(R.id.app_version_toolbar) as Toolbar
+    activity.setSupportActionBar(appVersionToolbar)
+    activity.supportActionBar?.setDisplayHomeAsUpEnabled(true)
+  }
+
+  private fun getAppVersionFragment(): AppVersionFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.app_version_fragment_placeholder) as AppVersionFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,119 @@
+package org.oppia.app.administratorcontrols
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAccountActionsViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAppInformationViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsDownloadPermissionsViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsGeneralViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsProfileViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsItemViewModel
+import org.oppia.app.databinding.AdministratorControlsAccountActionsViewBinding
+import org.oppia.app.databinding.AdministratorControlsAppInformationViewBinding
+import org.oppia.app.databinding.AdministratorControlsDownloadPermissionsViewBinding
+import org.oppia.app.databinding.AdministratorControlsFragmentBinding
+import org.oppia.app.databinding.AdministratorControlsGeneralViewBinding
+import org.oppia.app.databinding.AdministratorControlsProfileViewBinding
+import org.oppia.app.drawer.KEY_NAVIGATION_PROFILE_ID
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.ProfileId
+import org.oppia.app.recyclerview.BindableAdapter
+import org.oppia.app.viewmodel.ViewModelProvider
+import javax.inject.Inject
+
+/** The presenter for [AdministratorControlsFragment]. */
+@FragmentScope
+class AdministratorControlsFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val viewModelProvider: ViewModelProvider<AdministratorControlsViewModel>
+) {
+  private lateinit var binding: AdministratorControlsFragmentBinding
+  private lateinit var linearLayoutManager: LinearLayoutManager
+  private var internalProfileId: Int = -1
+  private lateinit var profileId: ProfileId
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    binding = AdministratorControlsFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+
+    val viewModel = getAdministratorControlsViewModel()
+    internalProfileId = activity.intent.getIntExtra(KEY_NAVIGATION_PROFILE_ID, -1)
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+    viewModel.setProfileId(profileId)
+
+    linearLayoutManager = LinearLayoutManager(activity.applicationContext)
+
+    binding.administratorControlsList.apply {
+      layoutManager = linearLayoutManager
+      adapter = createRecyclerViewAdapter()
+    }
+
+    binding.apply {
+      this.viewModel = viewModel
+      this.lifecycleOwner = fragment
+    }
+
+    return binding.root
+  }
+
+  private fun createRecyclerViewAdapter(): BindableAdapter<AdministratorControlsItemViewModel> {
+    return BindableAdapter.MultiTypeBuilder
+      .newBuilder<AdministratorControlsItemViewModel, ViewType> { viewModel ->
+        when (viewModel) {
+          is AdministratorControlsGeneralViewModel -> ViewType.VIEW_TYPE_GENERAL
+          is AdministratorControlsProfileViewModel -> ViewType.VIEW_TYPE_PROFILE
+          is AdministratorControlsDownloadPermissionsViewModel -> ViewType.VIEW_TYPE_DOWNLOAD_PERMISSIONS
+          is AdministratorControlsAppInformationViewModel -> ViewType.VIEW_TYPE_APP_INFORMATION
+          is AdministratorControlsAccountActionsViewModel -> ViewType.VIEW_TYPE_ACCOUNT_ACTIONS
+          else -> throw IllegalArgumentException("Encountered unexpected view model: $viewModel")
+        }
+      }
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_GENERAL,
+        inflateDataBinding = AdministratorControlsGeneralViewBinding::inflate,
+        setViewModel = AdministratorControlsGeneralViewBinding::setViewModel,
+        transformViewModel = { it as AdministratorControlsGeneralViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_PROFILE,
+        inflateDataBinding = AdministratorControlsProfileViewBinding::inflate,
+        setViewModel = AdministratorControlsProfileViewBinding::setViewModel,
+        transformViewModel = { it as AdministratorControlsProfileViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_DOWNLOAD_PERMISSIONS,
+        inflateDataBinding = AdministratorControlsDownloadPermissionsViewBinding::inflate,
+        setViewModel = AdministratorControlsDownloadPermissionsViewBinding::setViewModel,
+        transformViewModel = { it as AdministratorControlsDownloadPermissionsViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_APP_INFORMATION,
+        inflateDataBinding = AdministratorControlsAppInformationViewBinding::inflate,
+        setViewModel = AdministratorControlsAppInformationViewBinding::setViewModel,
+        transformViewModel = { it as AdministratorControlsAppInformationViewModel }
+      )
+      .registerViewDataBinder(
+        viewType = ViewType.VIEW_TYPE_ACCOUNT_ACTIONS,
+        inflateDataBinding = AdministratorControlsAccountActionsViewBinding::inflate,
+        setViewModel = AdministratorControlsAccountActionsViewBinding::setViewModel,
+        transformViewModel = { it as AdministratorControlsAccountActionsViewModel }
+      )
+      .build()
+  }
+
+  private fun getAdministratorControlsViewModel(): AdministratorControlsViewModel {
+    return viewModelProvider.getForFragment(fragment, AdministratorControlsViewModel::class.java)
+  }
+
+  private enum class ViewType {
+    VIEW_TYPE_GENERAL,
+    VIEW_TYPE_PROFILE,
+    VIEW_TYPE_DOWNLOAD_PERMISSIONS,
+    VIEW_TYPE_APP_INFORMATION,
+    VIEW_TYPE_ACCOUNT_ACTIONS
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/RouteToAppVersionListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/RouteToAppVersionListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/RouteToAppVersionListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.administratorcontrols
+
+/** Listener for when an activity should route to App Version. */
+interface RouteToAppVersionListener {
+  fun routeToAppVersion()
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,43 @@
+package org.oppia.app.administratorcontrols
+
+import android.view.View
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.drawerlayout.widget.DrawerLayout
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.drawer.NavigationDrawerFragment
+import javax.inject.Inject
+
+/** The presenter for [AdministratorControlsActivity]. */
+@ActivityScope
+class AdministratorControlsActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  private lateinit var navigationDrawerFragment: NavigationDrawerFragment
+
+  fun handleOnCreate() {
+    activity.setContentView(R.layout.administrator_controls_activity)
+    setUpNavigationDrawer()
+    if (getAdministratorControlsFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.administrator_controls_fragment_placeholder,
+        AdministratorControlsFragment()
+      ).commitNow()
+    }
+  }
+
+  private fun setUpNavigationDrawer() {
+    val toolbar = activity.findViewById<View>(R.id.administrator_controls_activity_toolbar) as Toolbar
+    activity.setSupportActionBar(toolbar)
+    activity.supportActionBar!!.setDisplayShowHomeEnabled(true)
+    navigationDrawerFragment =
+      activity.supportFragmentManager.findFragmentById(R.id.administrator_controls_activity_fragment_navigation_drawer) as NavigationDrawerFragment
+    navigationDrawerFragment.setUpDrawer(
+      activity.findViewById<View>(R.id.administrator_controls_activity_drawer_layout) as DrawerLayout,
+      toolbar, /* menuItemId = */ 0
+    )
+  }
+
+  private fun getAdministratorControlsFragment(): AdministratorControlsFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.administrator_controls_fragment_placeholder) as AdministratorControlsFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/AdministratorControlsViewModel.kt	(date 1584626399000)
@@ -0,0 +1,65 @@
+package org.oppia.app.administratorcontrols
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Transformations
+import androidx.lifecycle.ViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAccountActionsViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsAppInformationViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsDownloadPermissionsViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsGeneralViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsItemViewModel
+import org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel.AdministratorControlsProfileViewModel
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.DeviceSettings
+import org.oppia.app.model.ProfileId
+import org.oppia.app.viewmodel.ObservableViewModel
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** [ViewModel] for [AdministratorControlsFragment]. */
+@FragmentScope
+class AdministratorControlsViewModel @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val logger: Logger,
+  private val profileManagementController: ProfileManagementController
+) : ObservableViewModel() {
+  private val routeToProfileListListener = activity as RouteToProfileListListener
+  private lateinit var userProfileId: ProfileId
+
+  private val deviceSettingsLiveData: LiveData<DeviceSettings> by lazy {
+    Transformations.map(profileManagementController.getDeviceSettings(), ::processGetDeviceSettingsResult)
+  }
+
+  val administratorControlsLiveData: LiveData<List<AdministratorControlsItemViewModel>> by lazy {
+    Transformations.map(deviceSettingsLiveData, ::processAdministratorControlsList)
+  }
+
+  private fun processGetDeviceSettingsResult(deviceSettingsResult: AsyncResult<DeviceSettings>): DeviceSettings {
+    if (deviceSettingsResult.isFailure()) {
+      logger.e("AdministratorControlsFragment", "Failed to retrieve profile", deviceSettingsResult.getErrorOrNull()!!)
+    }
+    return deviceSettingsResult.getOrDefault(DeviceSettings.getDefaultInstance())
+  }
+
+  private fun processAdministratorControlsList(deviceSettings: DeviceSettings): List<AdministratorControlsItemViewModel> {
+    val itemViewModelList: MutableList<AdministratorControlsItemViewModel> = mutableListOf(
+      AdministratorControlsGeneralViewModel()
+    )
+    itemViewModelList.add(AdministratorControlsProfileViewModel(routeToProfileListListener))
+    itemViewModelList.add(AdministratorControlsDownloadPermissionsViewModel(fragment, logger, profileManagementController,
+      userProfileId, deviceSettings))
+    itemViewModelList.add(AdministratorControlsAppInformationViewModel(activity))
+    itemViewModelList.add(AdministratorControlsAccountActionsViewModel(fragment))
+
+    return itemViewModelList
+  }
+
+  fun setProfileId(profileId: ProfileId) {
+    userProfileId = profileId
+  }
+}
Index: utility/src/main/java/org/oppia/util/parser/HtmlParserEntityTypeModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- utility/src/main/java/org/oppia/util/parser/HtmlParserEntityTypeModule.kt	(date 1584621433000)
+++ utility/src/main/java/org/oppia/util/parser/HtmlParserEntityTypeModule.kt	(date 1584626399000)
@@ -17,4 +17,10 @@
   fun provideConceptCardHtmlParserEntityType(): String {
     return "skill"
   }
+
+  @Provides
+  @ReviewCardHtmlParserEntityType
+  fun provideReviewCardHtmlParserEntityType(): String {
+    return "subtopic"
+  }
 }
Index: app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsAppInformationViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsAppInformationViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsAppInformationViewModel.kt	(date 1584626399000)
@@ -0,0 +1,16 @@
+package org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel
+
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.administratorcontrols.RouteToAppVersionListener
+
+/** [ViewModel] for the recycler view in [AdministratorControlsFragment]. */
+class AdministratorControlsAppInformationViewModel(
+  activity: AppCompatActivity
+) : AdministratorControlsItemViewModel() {
+
+  private val routeToAppVersionListener = activity as RouteToAppVersionListener
+
+  fun onAppVersionClicked() {
+    routeToAppVersionListener.routeToAppVersion()
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsItemViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsItemViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsItemViewModel.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel
+
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** Super-class for generalising different views for the recyclerView in [AdministratorControlsFragment] */
+abstract class AdministratorControlsItemViewModel : ObservableViewModel()
Index: app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsProfileViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsProfileViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsProfileViewModel.kt	(date 1584626399000)
@@ -0,0 +1,13 @@
+package org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel
+
+import org.oppia.app.administratorcontrols.RouteToProfileListListener
+
+/** [ViewModel] for the recycler view in [AdministratorControlsFragment]. */
+class AdministratorControlsProfileViewModel(
+  private val routeToProfileListListener: RouteToProfileListListener
+) : AdministratorControlsItemViewModel() {
+
+  fun onEditProfilesClicked() {
+    routeToProfileListListener.routeToProfileList()
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsGeneralViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsGeneralViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsGeneralViewModel.kt	(date 1584626399000)
@@ -0,0 +1,4 @@
+package org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel
+
+/** [ViewModel] for the recycler view in [AdministratorControlsFragment]. */
+class AdministratorControlsGeneralViewModel : AdministratorControlsItemViewModel()
Index: app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,32 @@
+package org.oppia.app.administratorcontrols.appversion
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.Fragment
+import org.oppia.app.databinding.AppVersionFragmentBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.viewmodel.ViewModelProvider
+import javax.inject.Inject
+
+/** The presenter for [AppVersionFragment]. */
+@FragmentScope
+class AppVersionFragmentPresenter @Inject constructor(
+  private val fragment: Fragment,
+  private val viewModelProvider: ViewModelProvider<AppVersionViewModel>
+) {
+  private lateinit var binding: AppVersionFragmentBinding
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    binding = AppVersionFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.viewModel = getAppVersionViewModel()
+    }
+    return binding.root
+  }
+
+  private fun getAppVersionViewModel(): AppVersionViewModel {
+    return viewModelProvider.getForFragment(fragment, AppVersionViewModel::class.java)
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/appversion/AppVersionViewModel.kt	(date 1584626399000)
@@ -0,0 +1,34 @@
+package org.oppia.app.administratorcontrols.appversion
+
+import androidx.databinding.ObservableField
+import androidx.fragment.app.Fragment
+import org.oppia.app.BuildConfig
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.viewmodel.ObservableViewModel
+import java.text.SimpleDateFormat
+import java.util.*
+import javax.inject.Inject
+
+/** [ViewModel] for [AppVersionFragment]*/
+@FragmentScope
+class AppVersionViewModel @Inject constructor(
+  fragment: Fragment
+) : ObservableViewModel() {
+
+  val versionName = ObservableField<String>(BuildConfig.VERSION_NAME)
+
+  private val lastUpdateDateTime =
+    fragment.activity!!.packageManager.getPackageInfo(fragment.activity!!.packageName, /* flags= */ 0).lastUpdateTime
+  val lastUpdateDate = ObservableField<String>(getDateTime(lastUpdateDateTime))
+
+  // TODO(#555): Create one central utility file from where we should access date format or even convert date timestamp to string from that file.
+  private fun getDateTime(l: Long): String? {
+    return try {
+      val sdf = SimpleDateFormat("dd MMMM yyyy", Locale.US)
+      val netDate = Date(l)
+      sdf.format(netDate)
+    } catch (e: Exception) {
+      e.toString()
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsDownloadPermissionsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsDownloadPermissionsViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsDownloadPermissionsViewModel.kt	(date 1584626399000)
@@ -0,0 +1,38 @@
+package org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel
+
+import androidx.databinding.ObservableField
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.Observer
+import org.oppia.app.model.DeviceSettings
+import org.oppia.app.model.ProfileId
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.util.logging.Logger
+
+/** [ViewModel] for the recycler view in [AdministratorControlsFragment]. */
+class AdministratorControlsDownloadPermissionsViewModel(
+  private val fragment: Fragment,
+  private val logger: Logger,
+  private val profileManagementController: ProfileManagementController,
+  private val userProfileId: ProfileId,
+  deviceSettings: DeviceSettings
+) : AdministratorControlsItemViewModel() {
+
+  var isTopicWifiUpdatePermission = ObservableField<Boolean>(deviceSettings.allowDownloadAndUpdateOnlyOnWifi)
+  var isTopicAutoUpdatePermission = ObservableField<Boolean>(deviceSettings.automaticallyUpdateTopics)
+
+  fun onTopicWifiUpdatePermissionChanged(checked: Boolean) {
+    profileManagementController.updateWifiPermissionDeviceSettings(userProfileId, checked).observe(fragment, Observer {
+      if (it.isFailure()) {
+        logger.e("AdministratorControlsFragment", "Failed to update topic update on wifi permission", it.getErrorOrNull()!!)
+      }
+    })
+  }
+
+  fun onTopicAutoUpdatePermissionChanged(checked: Boolean) {
+    profileManagementController.updateTopicAutomaticallyPermissionDeviceSettings(userProfileId, checked).observe(fragment, Observer {
+      if (it.isFailure()) {
+        logger.e("AdministratorControlsFragment", "Failed to update topic auto update permission", it.getErrorOrNull()!!)
+      }
+    })
+  }
+}
Index: domain/src/main/assets/fractions_topic.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- domain/src/main/assets/fractions_topic.json	(date 1584621433000)
+++ domain/src/main/assets/fractions_topic.json	(date 1584626399000)
@@ -27,52 +27,89 @@
         "title": "What is a Fraction?"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "B39yK4cbHZYI",
+          "UxTGIJqaHMLa"
+        ],
         "id": 2,
         "title": "Fractions of a group"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "B39yK4cbHZYI",
+          "UxTGIJqaHMLa"
+        ],
         "id": 3,
-        "title": "Equivalent Fractions"
-      },
-      {
+        "title": "Mixed Numbers"
+      },{
         "skill_ids": [],
         "id": 4,
-        "title": "Mixed Numbers"
+        "title": "Adding Fractions"
+      },
+      {
+        "skill_ids": [
+          "5RM9KPfQxobH",
+          "B39yK4cbHZYI"
+        ],
+        "id": 5,
+        "title": "Equivalent Fractions"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "5RM9KPfQxobH",
+          "B39yK4cbHZYI",
+          "UxTGIJqaHMLa"
+        ],
         "id": 5,
         "title": "The Number Line"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "B39yK4cbHZYI",
+          "UxTGIJqaHMLa"
+        ],
         "id": 6,
         "title": "Comparing Fractions"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "5RM9KPfQxobH",
+          "B39yK4cbHZYI"
+        ],
         "id": 7,
         "title": "Adding Fractions"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "5RM9KPfQxobH",
+          "B39yK4cbHZYI",
+          "UxTGIJqaHMLa"
+        ],
         "id": 8,
         "title": "Subtracting Fractions"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "5RM9KPfQxobH",
+          "UxTGIJqaHMLa"
+        ],
         "id": 9,
         "title": "Multiplying Fractions"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "B39yK4cbHZYI",
+          "UxTGIJqaHMLa"
+        ],
         "id": 10,
         "title": "Dividing Fractions"
       },
       {
-        "skill_ids": [],
+        "skill_ids": [
+          "5RM9KPfQxobH",
+          "B39yK4cbHZYI",
+          "UxTGIJqaHMLa"
+        ],
         "id": 11,
         "title": "General Skills"
       }
Index: app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsAccountActionsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsAccountActionsViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/administratorcontrols/administratorcontrolsitemviewmodel/AdministratorControlsAccountActionsViewModel.kt	(date 1584626399000)
@@ -0,0 +1,28 @@
+package org.oppia.app.administratorcontrols.administratorcontrolsitemviewmodel
+
+import android.content.Intent
+import androidx.appcompat.app.AlertDialog
+import androidx.fragment.app.Fragment
+import org.oppia.app.R
+import org.oppia.app.profile.ProfileActivity
+
+/** [ViewModel] for the recycler view in [AdministratorControlsFragment]. */
+class AdministratorControlsAccountActionsViewModel(
+  private val fragment: Fragment
+) : AdministratorControlsItemViewModel() {
+
+  fun onLogOutClicked() {
+    AlertDialog.Builder(fragment.context!!, R.style.AlertDialogTheme)
+      .setMessage(R.string.log_out_dialog_message)
+      .setNegativeButton(R.string.log_out_dialog_cancel_button) { dialog, _ ->
+        dialog.dismiss()
+      }
+      .setPositiveButton(R.string.log_out_dialog_okay_button) { _, _ ->
+        // TODO(#762): Replace [ProfileChooserActivity] to [LoginActivity] once it is added.
+        val intent = Intent(fragment.activity, ProfileActivity::class.java)
+        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+        fragment.activity!!.startActivity(intent)
+        fragment.activity!!.finish()
+      }.create().show()
+  }
+}
Index: app/src/main/java/org/oppia/app/onboarding/OnboadingSlideViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/OnboadingSlideViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/OnboadingSlideViewModel.kt	(date 1584626399000)
@@ -0,0 +1,69 @@
+package org.oppia.app.onboarding
+
+import android.content.Context
+import android.content.res.Configuration
+import android.content.res.Resources
+import androidx.databinding.ObservableField
+import androidx.lifecycle.ViewModel
+import org.oppia.app.R
+import org.oppia.app.viewmodel.ObservableViewModel
+
+const val TOTAL_NUMBER_OF_SLIDES = 4
+
+/** [ViewModel] for slide in onboarding flow. */
+class OnboardingSlideViewModel(val context: Context, viewPagerSlide: ViewPagerSlide) : ObservableViewModel() {
+  val slideImage = ObservableField<Int>(R.drawable.ic_onboarding_0)
+  val contentDescription = ObservableField<String>(context.resources.getString(R.string.onboarding_slide_0_title))
+  val title = ObservableField<String>(context.resources.getString(R.string.onboarding_slide_0_title))
+  val description = ObservableField<String>(context.resources.getString(R.string.onboarding_slide_0_description))
+  private val orientation = Resources.getSystem().configuration.orientation
+
+  init {
+    initializingSlide(viewPagerSlide)
+  }
+
+  private fun initializingSlide(viewPagerSlide: ViewPagerSlide) {
+    when (viewPagerSlide) {
+      ViewPagerSlide.SLIDE_0 -> {
+        if (orientation == Configuration.ORIENTATION_LANDSCAPE) {
+          slideImage.set(R.drawable.ic_landscape_onboarding_0)
+        } else if (orientation == Configuration.ORIENTATION_PORTRAIT){
+          slideImage.set(R.drawable.ic_onboarding_0)
+        }
+        contentDescription.set(context.resources.getString(R.string.onboarding_slide_0_title))
+        title.set(context.resources.getString(R.string.onboarding_slide_0_title))
+        description.set(context.resources.getString(R.string.onboarding_slide_0_description))
+      }
+      ViewPagerSlide.SLIDE_1 -> {
+        if (orientation == Configuration.ORIENTATION_LANDSCAPE){
+          slideImage.set(R.drawable.ic_landscape_onboarding_1)
+        } else if (orientation == Configuration.ORIENTATION_PORTRAIT){
+          slideImage.set(R.drawable.ic_onboarding_1)
+        }
+        contentDescription.set(context.resources.getString(R.string.onboarding_slide_1_title))
+        title.set(context.resources.getString(R.string.onboarding_slide_1_title))
+        description.set(context.resources.getString(R.string.onboarding_slide_1_description))
+      }
+      ViewPagerSlide.SLIDE_2 -> {
+        if (orientation == Configuration.ORIENTATION_LANDSCAPE){
+          slideImage.set(R.drawable.ic_landscape_onboarding_2)
+        } else if(orientation == Configuration.ORIENTATION_PORTRAIT){
+          slideImage.set(R.drawable.ic_onboarding_2)
+        }
+        contentDescription.set(context.resources.getString(R.string.onboarding_slide_2_title))
+        title.set(context.resources.getString(R.string.onboarding_slide_2_title))
+        description.set(context.resources.getString(R.string.onboarding_slide_2_description))
+      }
+      ViewPagerSlide.SLIDE_3 -> {
+        if (orientation == Configuration.ORIENTATION_LANDSCAPE){
+          slideImage.set(R.drawable.ic_landscape_onboarding_3)
+        } else if (orientation == Configuration.ORIENTATION_PORTRAIT){
+          slideImage.set(R.drawable.ic_onboarding_3)
+        }
+        contentDescription.set(context.resources.getString(R.string.onboarding_slide_3_title))
+        title.set(context.resources.getString(R.string.onboarding_slide_3_title))
+        description.set(context.resources.getString(R.string.onboarding_slide_3_description))
+      }
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/onboarding/OnboardingActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/OnboardingActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/OnboardingActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,24 @@
+package org.oppia.app.onboarding
+
+import androidx.appcompat.app.AppCompatActivity
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import javax.inject.Inject
+
+/** The presenter for [OnboardingActivity]. */
+@ActivityScope
+class OnboardingActivityPresenter @Inject constructor(private val activity: AppCompatActivity) {
+  fun handleOnCreate() {
+    activity.setContentView(R.layout.onboarding_activity)
+    if (getOnboardingFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.onboarding_fragment_placeholder,
+        OnboardingFragment()
+      ).commitNow()
+    }
+  }
+
+  private fun getOnboardingFragment(): OnboardingFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.onboarding_fragment_placeholder) as OnboardingFragment?
+  }
+}
Index: app/src/main/java/org/oppia/app/onboarding/OnboardingActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/OnboardingActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/OnboardingActivity.kt	(date 1584626399000)
@@ -0,0 +1,32 @@
+package org.oppia.app.onboarding
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import org.oppia.app.profile.ProfileActivity
+import javax.inject.Inject
+
+/** Activity that contains the onboarding flow for learners. */
+class OnboardingActivity : InjectableAppCompatActivity(), RouteToProfileListListener {
+  @Inject lateinit var onboardingActivityPresenter: OnboardingActivityPresenter
+
+  companion object {
+    fun createOnboardingActivity(context: Context): Intent {
+      val intent = Intent(context, OnboardingActivity::class.java)
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+      return intent
+    }
+  }
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    onboardingActivityPresenter.handleOnCreate()
+  }
+
+  override fun routeToProfileList() {
+    startActivity(ProfileActivity.createProfileActivity(this))
+    finish()
+  }
+}
Index: app/src/main/java/org/oppia/app/onboarding/OnboardingFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/OnboardingFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/OnboardingFragment.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.onboarding
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** Fragment that contains an onboarding flow of the app. */
+class OnboardingFragment : InjectableFragment() {
+  @Inject lateinit var onboardingFragmentPresenter: OnboardingFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return onboardingFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/main/java/org/oppia/app/onboarding/OnboardingFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/OnboardingFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/OnboardingFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,110 @@
+package org.oppia.app.onboarding
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.LinearLayout
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.viewpager.widget.ViewPager
+import org.oppia.app.R
+import org.oppia.app.databinding.OnboardingFragmentBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.viewmodel.ViewModelProvider
+import org.oppia.domain.onboarding.OnboardingFlowController
+import javax.inject.Inject
+
+/** The presenter for [OnboardingFragment]. */
+@FragmentScope
+class OnboardingFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val onboardingFlowController: OnboardingFlowController,
+  private val viewModelProvider: ViewModelProvider<OnboardingViewModel>
+) {
+  private val dotsList = ArrayList<ImageView>()
+  private lateinit var onboardingPagerAdapter: OnboardingPagerAdapter
+  private val routeToProfileListener = activity as RouteToProfileListListener
+  private lateinit var binding: OnboardingFragmentBinding
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    binding = OnboardingFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+    // NB: Both the view model and lifecycle owner must be set in order to correctly bind LiveData elements to
+    // data-bound view models.
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.presenter = this
+      it.viewModel = getOnboardingViewModel()
+    }
+    setUpViewPager()
+    addDots()
+    return binding.root
+  }
+
+  private fun setUpViewPager() {
+    onboardingPagerAdapter = OnboardingPagerAdapter(fragment.requireContext())
+    binding.onboardingSlideViewPager.adapter = onboardingPagerAdapter
+    binding.onboardingSlideViewPager.addOnPageChangeListener(object : ViewPager.OnPageChangeListener {
+      override fun onPageScrollStateChanged(state: Int) {
+      }
+
+      override fun onPageScrolled(position: Int, positionOffset: Float, positionOffsetPixels: Int) {
+      }
+
+      override fun onPageSelected(position: Int) {
+        getOnboardingViewModel().slideChanged(ViewPagerSlide.getSlideForPosition(position))
+        selectDot(position)
+      }
+    })
+  }
+
+  fun clickOnGetStarted() {
+    onboardingFlowController.markOnboardingFlowCompleted()
+    routeToProfileListener.routeToProfileList()
+  }
+
+  fun clickOnSkip() {
+    getOnboardingViewModel().slideChanged(ViewPagerSlide.SLIDE_3)
+    binding.onboardingSlideViewPager.currentItem = ViewPagerSlide.SLIDE_3.ordinal
+  }
+
+  private fun getOnboardingViewModel(): OnboardingViewModel {
+    return viewModelProvider.getForFragment(fragment, OnboardingViewModel::class.java)
+  }
+
+  private fun addDots() {
+    val dotsLayout = binding.slideDotsContainer
+    val dotIdList = ArrayList<Int>()
+    dotIdList.add(R.id.onboarding_dot_0)
+    dotIdList.add(R.id.onboarding_dot_1)
+    dotIdList.add(R.id.onboarding_dot_2)
+    dotIdList.add(R.id.onboarding_dot_3)
+    for (index in 0 until TOTAL_NUMBER_OF_SLIDES) {
+      val dotView = ImageView(activity)
+      dotView.id = dotIdList[index]
+      dotView.setImageResource(R.drawable.onboarding_dot_active)
+
+      val params = LinearLayout.LayoutParams(
+        activity.resources.getDimensionPixelSize(R.dimen.dot_width_height),
+        activity.resources.getDimensionPixelSize(R.dimen.dot_width_height)
+      )
+      params.setMargins(
+        activity.resources.getDimensionPixelSize(R.dimen.dot_gap),
+        0,
+        activity.resources.getDimensionPixelSize(R.dimen.dot_gap),
+        0
+      )
+      dotsLayout.addView(dotView, params)
+      dotsList.add(dotView)
+    }
+    selectDot(0)
+  }
+
+  private fun selectDot(position: Int) {
+    for (index in 0 until TOTAL_NUMBER_OF_SLIDES) {
+      val alphaValue = if (index == position) 1.0F else 0.3F
+      dotsList[index].alpha = alphaValue
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/onboarding/ViewPagerSlide.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/ViewPagerSlide.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/ViewPagerSlide.kt	(date 1584626399000)
@@ -0,0 +1,18 @@
+package org.oppia.app.onboarding
+
+/** Enum to store the slides of [OnboardingFragment] and get slide by position. */
+enum class ViewPagerSlide(private var position: Int) {
+  SLIDE_0(position = 0),
+  SLIDE_1(position = 1),
+  SLIDE_2(position = 2),
+  SLIDE_3(position = 3);
+
+  companion object {
+    fun getSlideForPosition(position: Int): ViewPagerSlide {
+      val ordinal = checkNotNull(values().map(ViewPagerSlide::position)[position]) {
+        "No tab corresponding to position: $position"
+      }
+      return values()[ordinal]
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/onboarding/RouteToProfileListListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/RouteToProfileListListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/RouteToProfileListListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.onboarding
+
+/** Listener for when an activity should route to [ProfileActivity]. */
+interface RouteToProfileListListener {
+  fun routeToProfileList()
+}
Index: app/src/main/java/org/oppia/app/onboarding/OnboardingPagerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/OnboardingPagerAdapter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/OnboardingPagerAdapter.kt	(date 1584626399000)
@@ -0,0 +1,32 @@
+package org.oppia.app.onboarding
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.constraintlayout.widget.ConstraintLayout
+import androidx.viewpager.widget.PagerAdapter
+import org.oppia.app.databinding.OnboardingSlideBinding
+
+/** Adapter to control the slide details in onboarding flow. */
+class OnboardingPagerAdapter(val context: Context) : PagerAdapter() {
+  override fun instantiateItem(container: ViewGroup, position: Int): Any {
+    val binding = OnboardingSlideBinding.inflate(LayoutInflater.from(context), container, false)
+    val onboardingSlideViewModel = OnboardingSlideViewModel(context, ViewPagerSlide.getSlideForPosition(position))
+    binding.viewModel = onboardingSlideViewModel
+    container.addView(binding.root)
+    return binding.root
+  }
+
+  override fun getCount(): Int {
+    return TOTAL_NUMBER_OF_SLIDES
+  }
+
+  override fun isViewFromObject(view: View, `object`: Any): Boolean {
+    return view == `object`
+  }
+
+  override fun destroyItem(container: ViewGroup, position: Int, `object`: Any) {
+    container.removeView(`object` as ConstraintLayout)
+  }
+}
Index: app/src/main/java/org/oppia/app/walkthrough/WalkthroughActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/WalkthroughActivity.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/WalkthroughActivity.kt	(date 1584626399000)
@@ -0,0 +1,36 @@
+package org.oppia.app.walkthrough
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
+
+/** Activity that contains the walkthrough flow for users. */
+class WalkthroughActivity : InjectableAppCompatActivity(), WalkthroughFragmentChangeListener {
+  @Inject lateinit var walkthroughActivityPresenter: WalkthroughActivityPresenter
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    activityComponent.inject(this)
+    walkthroughActivityPresenter.handleOnCreate()
+  }
+
+  override fun currentPage(walkthroughPage: Int) {
+    walkthroughActivityPresenter.changePage(walkthroughPage)
+  }
+
+  override fun onBackPressed() {
+    walkthroughActivityPresenter.handleSystemBack()
+  }
+
+  companion object {
+    internal const val WALKTHROUGH_ACTIVITY_INTERNAL_PROFILE_ID_KEY = "WalkthroughActivity.internal_profile_id"
+
+    fun createWalkthroughActivityIntent(context: Context, internalProfileId: Int): Intent {
+      val intent = Intent(context, WalkthroughActivity::class.java)
+      intent.putExtra(WALKTHROUGH_ACTIVITY_INTERNAL_PROFILE_ID_KEY, internalProfileId)
+      return intent
+    }
+  }
+}
Index: app/src/main/java/org/oppia/app/walkthrough/WalkthroughViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/WalkthroughViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/WalkthroughViewModel.kt	(date 1584626399000)
@@ -0,0 +1,11 @@
+package org.oppia.app.walkthrough
+
+import androidx.databinding.ObservableField
+import androidx.lifecycle.ViewModel
+import org.oppia.app.viewmodel.ObservableViewModel
+import javax.inject.Inject
+
+/** [ViewModel] for [WalkthroughActivity]. */
+class WalkthroughViewModel @Inject constructor() : ObservableViewModel() {
+  val currentProgress = ObservableField(0)
+}
Index: app/src/main/java/org/oppia/app/onboarding/OnboadingViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/onboarding/OnboadingViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/onboarding/OnboadingViewModel.kt	(date 1584626399000)
@@ -0,0 +1,16 @@
+package org.oppia.app.onboarding
+
+import androidx.databinding.ObservableField
+import androidx.lifecycle.ViewModel
+import org.oppia.app.viewmodel.ObservableViewModel
+import javax.inject.Inject
+
+/** [ViewModel] for [OnboardingFragment]. */
+class OnboardingViewModel @Inject constructor() : ObservableViewModel() {
+  val slideNumber = ObservableField<Int>(0)
+  val totalNumberOfSlides = TOTAL_NUMBER_OF_SLIDES
+
+  fun slideChanged(viewPagerSlide: ViewPagerSlide) {
+    slideNumber.set(viewPagerSlide.ordinal)
+  }
+}
Index: app/src/main/java/org/oppia/app/walkthrough/WalkthroughPages.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/WalkthroughPages.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/WalkthroughPages.kt	(date 1584626399000)
@@ -0,0 +1,8 @@
+package org.oppia.app.walkthrough
+
+/** Represents current state of [WalkthroughActivity]. */
+enum class WalkthroughPages(val value: Int) {
+  WELCOME(0),
+  TOPIC_LIST(1),
+  FINAL(2)
+}
Index: app/src/main/java/org/oppia/app/player/exploration/ExplorationFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/exploration/ExplorationFragmentPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/exploration/ExplorationFragmentPresenter.kt	(date 1584626399000)
@@ -19,9 +19,15 @@
     val binding = ExplorationFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false).root
 
     if (getStateFragment() == null) {
-      val explorationId = fragment.arguments!!.getString(EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY)
+      val profileId = fragment.arguments!!.getInt(ExplorationActivity.EXPLORATION_ACTIVITY_PROFILE_ID_ARGUMENT_KEY, -1)
+      val topicId = fragment.arguments!!.getString(ExplorationActivity.EXPLORATION_ACTIVITY_TOPIC_ID_ARGUMENT_KEY)
+      checkNotNull(topicId) { "StateFragment must be created with an topic ID" }
+      val storyId = fragment.arguments!!.getString(ExplorationActivity.EXPLORATION_ACTIVITY_STORY_ID_ARGUMENT_KEY)
+      checkNotNull(storyId) { "StateFragment must be created with an story ID" }
+      val explorationId =
+        fragment.arguments!!.getString(ExplorationActivity.EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY)
       checkNotNull(explorationId) { "StateFragment must be created with an exploration ID" }
-      val stateFragment = StateFragment.newInstance(explorationId)
+      val stateFragment = StateFragment.newInstance(profileId, topicId, storyId, explorationId)
       fragment.childFragmentManager.beginTransaction().add(
         R.id.state_fragment_placeholder,
         stateFragment
Index: app/src/main/java/org/oppia/app/walkthrough/WalkthroughFragmentChangeListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/WalkthroughFragmentChangeListener.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/WalkthroughFragmentChangeListener.kt	(date 1584626399000)
@@ -0,0 +1,6 @@
+package org.oppia.app.walkthrough
+
+/** Listener for when an activity should change a fragment position. */
+interface WalkthroughFragmentChangeListener {
+  fun currentPage(walkthroughPage: Int)
+}
Index: app/src/main/java/org/oppia/app/player/exploration/ExplorationActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/exploration/ExplorationActivityPresenter.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/exploration/ExplorationActivityPresenter.kt	(date 1584626399000)
@@ -1,7 +1,5 @@
 package org.oppia.app.player.exploration
 
-import android.content.Intent
-import android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT
 import android.os.Bundle
 import android.view.inputmethod.EditorInfo
 import androidx.appcompat.app.AppCompatActivity
@@ -14,8 +12,8 @@
 import org.oppia.app.activity.ActivityScope
 import org.oppia.app.databinding.ExplorationActivityBinding
 import org.oppia.app.model.Exploration
-import org.oppia.app.viewmodel.ViewModelProvider
 import org.oppia.app.topic.TopicActivity
+import org.oppia.app.viewmodel.ViewModelProvider
 import org.oppia.domain.exploration.ExplorationDataController
 import org.oppia.util.data.AsyncResult
 import org.oppia.util.logging.Logger
@@ -32,13 +30,14 @@
   private val logger: Logger
 ) {
   private lateinit var explorationToolbar: Toolbar
-  private var topicId: String? = null
+  private var internalProfileId: Int = -1
+  private lateinit var topicId: String
 
   private val exploreViewModel by lazy {
     getExplorationViewModel()
   }
 
-  fun handleOnCreate(explorationId: String, topicId: String?) {
+  fun handleOnCreate(internalProfileId: Int, topicId: String, storyId: String, explorationId: String) {
     val binding = DataBindingUtil.setContentView<ExplorationActivityBinding>(activity, R.layout.exploration_activity)
     binding.apply {
       viewModel = exploreViewModel
@@ -53,12 +52,16 @@
     }
 
     updateToolbarTitle(explorationId)
+    this.internalProfileId = internalProfileId
     this.topicId = topicId
 
     if (getExplorationFragment() == null) {
       val explorationFragment = ExplorationFragment()
       val args = Bundle()
-      args.putString(EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY, explorationId)
+      args.putInt(ExplorationActivity.EXPLORATION_ACTIVITY_PROFILE_ID_ARGUMENT_KEY, internalProfileId)
+      args.putString(ExplorationActivity.EXPLORATION_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, topicId)
+      args.putString(ExplorationActivity.EXPLORATION_ACTIVITY_STORY_ID_ARGUMENT_KEY, storyId)
+      args.putString(ExplorationActivity.EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY, explorationId)
       explorationFragment.arguments = args
       activity.supportFragmentManager.beginTransaction().add(
         R.id.exploration_fragment_placeholder,
@@ -93,12 +96,7 @@
         it.isFailure() -> logger.e("ExplorationActivity", "Failed to stop exploration", it.getErrorOrNull()!!)
         else -> {
           logger.d("ExplorationActivity", "Successfully stopped exploration")
-          if (topicId != null) {
-            val intent = Intent(activity, TopicActivity::class.java)
-            intent.putExtra(TopicActivity.TOPIC_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, topicId)
-            intent.addFlags(FLAG_ACTIVITY_REORDER_TO_FRONT)
-            activity.startActivity(intent)
-          }
+          activity.startActivity(TopicActivity.createTopicActivityIntent(activity, internalProfileId, topicId))
           (activity as ExplorationActivity).finish()
         }
       }
Index: app/src/main/java/org/oppia/app/walkthrough/WalkthroughActivityPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/WalkthroughActivityPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/WalkthroughActivityPresenter.kt	(date 1584626399000)
@@ -0,0 +1,88 @@
+package org.oppia.app.walkthrough
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.databinding.DataBindingUtil
+import org.oppia.app.R
+import org.oppia.app.activity.ActivityScope
+import org.oppia.app.databinding.WalkthroughActivityBinding
+import org.oppia.app.viewmodel.ViewModelProvider
+import org.oppia.app.walkthrough.end.WalkthroughFinalFragment
+import org.oppia.app.walkthrough.topiclist.WalkthroughTopicListFragment
+import org.oppia.app.walkthrough.welcome.WalkthroughWelcomeFragment
+import javax.inject.Inject
+
+/** The presenter for [WalkthroughActivity]. */
+@ActivityScope
+class WalkthroughActivityPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val viewModelProvider: ViewModelProvider<WalkthroughViewModel>
+) {
+  private lateinit var binding: WalkthroughActivityBinding
+
+  fun handleOnCreate() {
+    binding = DataBindingUtil.setContentView(activity, R.layout.walkthrough_activity)
+
+    binding.apply {
+      viewModel = getWalkthroughViewModel()
+      presenter = this@WalkthroughActivityPresenter
+      lifecycleOwner = activity
+    }
+    if (getWalkthroughWelcomeFragment() == null) {
+      activity.supportFragmentManager.beginTransaction().add(
+        R.id.walkthrough_fragment_placeholder,
+        WalkthroughWelcomeFragment()
+      ).commitNow().also {
+        getWalkthroughViewModel().currentProgress.set(1)
+      }
+    }
+  }
+
+  fun previousPage(currentProgress: Int) {
+    if (currentProgress == 1)
+      activity.finish()
+    else {
+      changePage(currentProgress - 2)
+    }
+  }
+
+  private fun getWalkthroughViewModel(): WalkthroughViewModel {
+    return viewModelProvider.getForActivity(activity, WalkthroughViewModel::class.java)
+  }
+
+  private fun getWalkthroughWelcomeFragment(): WalkthroughWelcomeFragment? {
+    return activity.supportFragmentManager.findFragmentById(R.id.walkthrough_fragment_placeholder) as WalkthroughWelcomeFragment?
+  }
+
+  fun changePage(pageNumber: Int) {
+    when (pageNumber) {
+      WalkthroughPages.WELCOME.value -> {
+        activity.supportFragmentManager.beginTransaction().replace(
+          R.id.walkthrough_fragment_placeholder,
+          WalkthroughWelcomeFragment()
+        ).commitNow().also {
+          getWalkthroughViewModel().currentProgress.set(1)
+        }
+      }
+      WalkthroughPages.TOPIC_LIST.value -> {
+        activity.supportFragmentManager.beginTransaction().replace(
+          R.id.walkthrough_fragment_placeholder,
+          WalkthroughTopicListFragment()
+        ).commitNow().also {
+          getWalkthroughViewModel().currentProgress.set(2)
+        }
+      }
+      WalkthroughPages.FINAL.value -> {
+        activity.supportFragmentManager.beginTransaction().replace(
+          R.id.walkthrough_fragment_placeholder,
+          WalkthroughFinalFragment()
+        ).commitNow().also {
+          getWalkthroughViewModel().currentProgress.set(3)
+        }
+      }
+    }
+  }
+
+  fun handleSystemBack() {
+    previousPage(getWalkthroughViewModel().currentProgress.get() ?: 1)
+  }
+}
Index: app/src/main/java/org/oppia/app/player/exploration/ExplorationActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/player/exploration/ExplorationActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/player/exploration/ExplorationActivity.kt	(date 1584626399000)
@@ -12,32 +12,46 @@
 import org.oppia.app.player.stopexploration.StopExplorationInterface
 import javax.inject.Inject
 
-const val EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY = "ExplorationActivity.exploration_id"
-const val EXPLORATION_ACTIVITY_TOPIC_ID_ARGUMENT_KEY = "ExplorationActivity.topic_id"
 private const val TAG_STOP_EXPLORATION_DIALOG = "STOP_EXPLORATION_DIALOG"
 
 /** The starting point for exploration. */
-class ExplorationActivity : InjectableAppCompatActivity(), StopExplorationInterface, StateKeyboardButtonListener, AudioButtonListener {
+class ExplorationActivity : InjectableAppCompatActivity(), StopExplorationInterface, StateKeyboardButtonListener,
+  AudioButtonListener {
   @Inject lateinit var explorationActivityPresenter: ExplorationActivityPresenter
+  private var internalProfileId: Int = -1
+  private lateinit var topicId: String
+  private lateinit var storyId: String
   private lateinit var explorationId: String
-  private var topicId: String? = null
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     activityComponent.inject(this)
-    explorationId = intent.getStringExtra(EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY)
+    internalProfileId = intent.getIntExtra(EXPLORATION_ACTIVITY_PROFILE_ID_ARGUMENT_KEY, -1)
     topicId = intent.getStringExtra(EXPLORATION_ACTIVITY_TOPIC_ID_ARGUMENT_KEY)
-    explorationActivityPresenter.handleOnCreate(explorationId, topicId)
+    storyId = intent.getStringExtra(EXPLORATION_ACTIVITY_STORY_ID_ARGUMENT_KEY)
+    explorationId = intent.getStringExtra(EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY)
+    explorationActivityPresenter.handleOnCreate(internalProfileId, topicId, storyId, explorationId)
   }
 
   companion object {
-    /** Returns a new [Intent] to route to [ExplorationActivity] for a specified topic ID. */
-    fun createExplorationActivityIntent(context: Context, explorationId: String, topicId: String?): Intent {
+    /** Returns a new [Intent] to route to [ExplorationActivity] for a specified exploration. */
+
+    internal const val EXPLORATION_ACTIVITY_PROFILE_ID_ARGUMENT_KEY = "ExplorationActivity.profile_id"
+    internal const val EXPLORATION_ACTIVITY_TOPIC_ID_ARGUMENT_KEY = "ExplorationActivity.topic_id"
+    internal const val EXPLORATION_ACTIVITY_STORY_ID_ARGUMENT_KEY = "ExplorationActivity.story_id"
+    internal const val EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY = "ExplorationActivity.exploration_id"
+    fun createExplorationActivityIntent(
+      context: Context,
+      profileId: Int,
+      topicId: String,
+      storyId: String,
+      explorationId: String
+    ): Intent {
       val intent = Intent(context, ExplorationActivity::class.java)
-      intent.putExtra(EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY, explorationId)
-      if(topicId!=null) {
-        intent.putExtra(EXPLORATION_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, topicId)
-      }
+      intent.putExtra(EXPLORATION_ACTIVITY_PROFILE_ID_ARGUMENT_KEY, profileId)
+      intent.putExtra(EXPLORATION_ACTIVITY_TOPIC_ID_ARGUMENT_KEY, topicId)
+      intent.putExtra(EXPLORATION_ACTIVITY_STORY_ID_ARGUMENT_KEY, storyId)
+      intent.putExtra(EXPLORATION_ACTIVITY_EXPLORATION_ID_ARGUMENT_KEY, explorationId)
       return intent
     }
   }
Index: app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeViewModel.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeViewModel.kt	(date 1584626399000)
@@ -0,0 +1,9 @@
+package org.oppia.app.walkthrough.welcome
+
+import androidx.databinding.ObservableField
+import org.oppia.app.viewmodel.ObservableViewModel
+
+/** [ViewModel] for displaying user profile details in walkthrough welcome fragment. */
+class WalkthroughWelcomeViewModel : ObservableViewModel() {
+  val profileName = ObservableField<String>("")
+}
Index: app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeFragment.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.walkthrough.welcome
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** The first slide for [WalkthroughActivity]. */
+class WalkthroughWelcomeFragment : InjectableFragment() {
+  @Inject lateinit var walkthroughWelcomeFragmentPresenter: WalkthroughWelcomeFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return walkthroughWelcomeFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/main/java/org/oppia/app/walkthrough/topiclist/WalkthroughTopicListFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/topiclist/WalkthroughTopicListFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/topiclist/WalkthroughTopicListFragment.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.walkthrough.topiclist
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** The second slide for [WalkthroughActivity]. */
+class WalkthroughTopicListFragment : InjectableFragment() {
+  @Inject lateinit var walkthroughTopicListFragmentPresenter: WalkthroughTopicListFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return walkthroughTopicListFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/main/java/org/oppia/app/walkthrough/topiclist/WalkthroughTopicListFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/topiclist/WalkthroughTopicListFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/topiclist/WalkthroughTopicListFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,36 @@
+package org.oppia.app.walkthrough.topiclist
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import org.oppia.app.databinding.WalkthroughTopicListFragmentBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.walkthrough.WalkthroughFragmentChangeListener
+import org.oppia.app.walkthrough.WalkthroughPages
+import javax.inject.Inject
+
+/** The presenter for [WalkthroughTopicListFragment]. */
+@FragmentScope
+class WalkthroughTopicListFragmentPresenter @Inject constructor(
+  activity: AppCompatActivity,
+  private val fragment: Fragment
+) {
+  private lateinit var binding: WalkthroughTopicListFragmentBinding
+  private val routeToNextPage = activity as WalkthroughFragmentChangeListener
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    binding = WalkthroughTopicListFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.presenter = this
+    }
+    return binding.root
+  }
+
+  fun changePage() {
+    routeToNextPage.currentPage(WalkthroughPages.FINAL.value)
+  }
+}
Index: app/src/main/java/org/oppia/app/walkthrough/end/WalkthroughFinalFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/end/WalkthroughFinalFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/end/WalkthroughFinalFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,27 @@
+package org.oppia.app.walkthrough.end
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.Fragment
+import org.oppia.app.databinding.WalkthroughFinalFragmentBinding
+import org.oppia.app.fragment.FragmentScope
+import javax.inject.Inject
+
+/** The presenter for [WalkthroughFinalFragment]. */
+@FragmentScope
+class WalkthroughFinalFragmentPresenter @Inject constructor(
+  private val fragment: Fragment
+) {
+  private lateinit var binding: WalkthroughFinalFragmentBinding
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    binding = WalkthroughFinalFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.presenter = this
+    }
+    return binding.root
+  }
+}
Index: app/src/main/java/org/oppia/app/splash/SplashActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/splash/SplashActivity.kt	(date 1584621433000)
+++ app/src/main/java/org/oppia/app/splash/SplashActivity.kt	(date 1584626399000)
@@ -1,22 +1,17 @@
 package org.oppia.app.splash
 
-import android.content.Intent
 import android.os.Bundle
-import android.view.WindowManager
-import androidx.appcompat.app.AppCompatActivity
-import org.oppia.app.R
-import org.oppia.app.profile.ProfileActivity
+import org.oppia.app.activity.InjectableAppCompatActivity
+import javax.inject.Inject
 
 /** An activity that shows a temporary loading page until the app is fully loaded then navigates to [ProfileActivity]. */
-class SplashActivity : AppCompatActivity() {
+class SplashActivity : InjectableAppCompatActivity() {
+
+  @Inject lateinit var splashActivityPresenter: SplashActivityPresenter
 
   override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
-    setContentView(R.layout.splash_activity)
-
-    window.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN)
-    val intent = Intent(this@SplashActivity, ProfileActivity::class.java)
-    startActivity(intent)
-    finish()
+    activityComponent.inject(this)
+    splashActivityPresenter.handleOnCreate()
   }
 }
Index: app/src/main/java/org/oppia/app/walkthrough/end/WalkthroughFinalFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/end/WalkthroughFinalFragment.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/end/WalkthroughFinalFragment.kt	(date 1584626399000)
@@ -0,0 +1,23 @@
+package org.oppia.app.walkthrough.end
+
+import android.content.Context
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import org.oppia.app.fragment.InjectableFragment
+import javax.inject.Inject
+
+/** The final slide for [WalkthroughActivity]. */
+class WalkthroughFinalFragment : InjectableFragment() {
+  @Inject lateinit var walkthroughFinalFragmentPresenter: WalkthroughFinalFragmentPresenter
+
+  override fun onAttach(context: Context) {
+    super.onAttach(context)
+    fragmentComponent.inject(this)
+  }
+
+  override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    return walkthroughFinalFragmentPresenter.handleCreateView(inflater, container)
+  }
+}
Index: app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeFragmentPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeFragmentPresenter.kt	(date 1584626399000)
+++ app/src/main/java/org/oppia/app/walkthrough/welcome/WalkthroughWelcomeFragmentPresenter.kt	(date 1584626399000)
@@ -0,0 +1,87 @@
+package org.oppia.app.walkthrough.welcome
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.Observer
+import androidx.lifecycle.Transformations
+import org.oppia.app.R
+import org.oppia.app.databinding.WalkthroughWelcomeFragmentBinding
+import org.oppia.app.fragment.FragmentScope
+import org.oppia.app.model.Profile
+import org.oppia.app.model.ProfileId
+import org.oppia.app.walkthrough.WalkthroughActivity
+import org.oppia.app.walkthrough.WalkthroughFragmentChangeListener
+import org.oppia.app.walkthrough.WalkthroughPages
+import org.oppia.domain.profile.ProfileManagementController
+import org.oppia.util.data.AsyncResult
+import org.oppia.util.logging.Logger
+import javax.inject.Inject
+
+/** The presenter for [WalkthroughWelcomeFragment]. */
+@FragmentScope
+class WalkthroughWelcomeFragmentPresenter @Inject constructor(
+  private val activity: AppCompatActivity,
+  private val fragment: Fragment,
+  private val profileManagementController: ProfileManagementController,
+  private val logger: Logger
+) {
+  private lateinit var binding: WalkthroughWelcomeFragmentBinding
+  private val routeToNextPage = activity as WalkthroughFragmentChangeListener
+  private lateinit var walkthroughWelcomeViewModel: WalkthroughWelcomeViewModel
+  private var internalProfileId: Int = -1
+  private lateinit var profileId: ProfileId
+  private lateinit var profileName: String
+
+  fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View? {
+    binding = WalkthroughWelcomeFragmentBinding.inflate(inflater, container, /* attachToRoot= */ false)
+
+    internalProfileId = activity.intent.getIntExtra(WalkthroughActivity.WALKTHROUGH_ACTIVITY_INTERNAL_PROFILE_ID_KEY, -1)
+    profileId = ProfileId.newBuilder().setInternalId(internalProfileId).build()
+    walkthroughWelcomeViewModel = WalkthroughWelcomeViewModel()
+
+    binding.let {
+      it.lifecycleOwner = fragment
+      it.presenter = this
+      it.viewModel = walkthroughWelcomeViewModel
+    }
+
+    subscribeToProfileLiveData()
+    return binding.root
+  }
+
+  private val profileLiveData: LiveData<Profile> by lazy {
+    getProfileData()
+  }
+
+  private fun getProfileData(): LiveData<Profile> {
+    return Transformations.map(profileManagementController.getProfile(profileId), ::processGetProfileResult)
+  }
+
+  private fun subscribeToProfileLiveData() {
+    profileLiveData.observe(activity, Observer<Profile> { result ->
+      profileName = result.name
+      setProfileName()
+    })
+  }
+
+  private fun processGetProfileResult(profileResult: AsyncResult<Profile>): Profile {
+    if (profileResult.isFailure()) {
+      logger.e("WalkthroughWelcomeFragment", "Failed to retrieve profile", profileResult.getErrorOrNull()!!)
+    }
+    return profileResult.getOrDefault(Profile.getDefaultInstance())
+  }
+
+  private fun setProfileName() {
+    if (::walkthroughWelcomeViewModel.isInitialized && ::profileName.isInitialized) {
+      walkthroughWelcomeViewModel.profileName.set(activity.getString(R.string.welcome,profileName))
+    }
+  }
+
+  fun changePage() {
+    routeToNextPage.currentPage(WalkthroughPages.TOPIC_LIST.value)
+  }
+}
